// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: characters.proto

#include "ProtoDisableWarning.h"

#include "characters.pb.h"
#include "characters.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {

static const char* Characters_method_names[] = {
  "/ai.inworld.studio.v1alpha.Characters/DeployCharacter",
  "/ai.inworld.studio.v1alpha.Characters/GetCharacter",
  "/ai.inworld.studio.v1alpha.Characters/ListCharacters",
  "/ai.inworld.studio.v1alpha.Characters/UpdateCharacter",
  "/ai.inworld.studio.v1alpha.Characters/CreateCharacter",
  "/ai.inworld.studio.v1alpha.Characters/DeleteCharacter",
  "/ai.inworld.studio.v1alpha.Characters/ReplaceCharacterRpmModel",
  "/ai.inworld.studio.v1alpha.Characters/PreviewPromptTemplate",
  "/ai.inworld.studio.v1alpha.Characters/CheckDeployInfo",
  "/ai.inworld.studio.v1alpha.Characters/GetCharacterAdvancedSettings",
  "/ai.inworld.studio.v1alpha.Characters/UpdateCharacterAdvancedSettings",
  "/ai.inworld.studio.v1alpha.Characters/ShareCharacter",
  "/ai.inworld.studio.v1alpha.Characters/ListSharedCharacters",
  "/ai.inworld.studio.v1alpha.Characters/GetCharacterShareInfo",
};

std::unique_ptr< Characters::Stub> Characters::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< Characters::Stub> stub(new Characters::Stub(channel));
  return stub;
}

Characters::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_DeployCharacter_(Characters_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCharacter_(Characters_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListCharacters_(Characters_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateCharacter_(Characters_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateCharacter_(Characters_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteCharacter_(Characters_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReplaceCharacterRpmModel_(Characters_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_PreviewPromptTemplate_(Characters_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CheckDeployInfo_(Characters_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCharacterAdvancedSettings_(Characters_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateCharacterAdvancedSettings_(Characters_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ShareCharacter_(Characters_method_names[11], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSharedCharacters_(Characters_method_names[12], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetCharacterShareInfo_(Characters_method_names[13], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status Characters::Stub::DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeployCharacter_, context, request, response);
}

void Characters::Stub::experimental_async::DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeployCharacter_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeployCharacter_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Characters::Stub::PrepareAsyncDeployCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeployCharacter_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Characters::Stub::AsyncDeployCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeployCharacterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetCharacter_, context, request, response);
}

void Characters::Stub::experimental_async::GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCharacter_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCharacter_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::PrepareAsyncGetCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::Character, ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetCharacter_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::AsyncGetCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetCharacterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListCharacters_, context, request, response);
}

void Characters::Stub::experimental_async::ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListCharacters_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListCharacters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>* Characters::Stub::PrepareAsyncListCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::ListCharactersResponse, ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListCharacters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>* Characters::Stub::AsyncListCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListCharactersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateCharacter_, context, request, response);
}

void Characters::Stub::experimental_async::UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCharacter_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCharacter_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::PrepareAsyncUpdateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::Character, ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateCharacter_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::AsyncUpdateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateCharacterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateCharacter_, context, request, response);
}

void Characters::Stub::experimental_async::CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateCharacter_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateCharacter_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::PrepareAsyncCreateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::Character, ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateCharacter_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::AsyncCreateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateCharacterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteCharacter_, context, request, response);
}

void Characters::Stub::experimental_async::DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteCharacter_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteCharacter_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Characters::Stub::PrepareAsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteCharacter_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Characters::Stub::AsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteCharacterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::ai::inworld::studio::v1alpha::Character* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ReplaceCharacterRpmModel_, context, request, response);
}

void Characters::Stub::experimental_async::ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReplaceCharacterRpmModel_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReplaceCharacterRpmModel_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::PrepareAsyncReplaceCharacterRpmModelRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::Character, ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ReplaceCharacterRpmModel_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* Characters::Stub::AsyncReplaceCharacterRpmModelRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncReplaceCharacterRpmModelRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_PreviewPromptTemplate_, context, request, response);
}

void Characters::Stub::experimental_async::PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PreviewPromptTemplate_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_PreviewPromptTemplate_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* Characters::Stub::PrepareAsyncPreviewPromptTemplateRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_PreviewPromptTemplate_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* Characters::Stub::AsyncPreviewPromptTemplateRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncPreviewPromptTemplateRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CheckDeployInfo_, context, request, response);
}

void Characters::Stub::experimental_async::CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CheckDeployInfo_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CheckDeployInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* Characters::Stub::PrepareAsyncCheckDeployInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CheckDeployInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* Characters::Stub::AsyncCheckDeployInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCheckDeployInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetCharacterAdvancedSettings_, context, request, response);
}

void Characters::Stub::experimental_async::GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCharacterAdvancedSettings_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCharacterAdvancedSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* Characters::Stub::PrepareAsyncGetCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetCharacterAdvancedSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* Characters::Stub::AsyncGetCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetCharacterAdvancedSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateCharacterAdvancedSettings_, context, request, response);
}

void Characters::Stub::experimental_async::UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCharacterAdvancedSettings_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateCharacterAdvancedSettings_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* Characters::Stub::PrepareAsyncUpdateCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateCharacterAdvancedSettings_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* Characters::Stub::AsyncUpdateCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateCharacterAdvancedSettingsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::google::protobuf::Empty* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ShareCharacter_, context, request, response);
}

void Characters::Stub::experimental_async::ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ShareCharacter_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ShareCharacter_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Characters::Stub::PrepareAsyncShareCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::google::protobuf::Empty, ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ShareCharacter_, context, request);
}

::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* Characters::Stub::AsyncShareCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncShareCharacterRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListSharedCharacters_, context, request, response);
}

void Characters::Stub::experimental_async::ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSharedCharacters_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSharedCharacters_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* Characters::Stub::PrepareAsyncListSharedCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListSharedCharacters_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* Characters::Stub::AsyncListSharedCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListSharedCharactersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status Characters::Stub::GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response) {
  return ::grpc::internal::BlockingUnaryCall< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetCharacterShareInfo_, context, request, response);
}

void Characters::Stub::experimental_async::GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCharacterShareInfo_, context, request, response, std::move(f));
}

void Characters::Stub::experimental_async::GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetCharacterShareInfo_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>* Characters::Stub::PrepareAsyncGetCharacterShareInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::ai::inworld::studio::v1alpha::CharacterShareInfo, ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetCharacterShareInfo_, context, request);
}

::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>* Characters::Stub::AsyncGetCharacterShareInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetCharacterShareInfoRaw(context, request, cq);
  result->StartCall();
  return result;
}

Characters::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeployCharacter(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::GetCharacterRequest* req,
             ::ai::inworld::studio::v1alpha::Character* resp) {
               return service->GetCharacter(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::ListCharactersRequest* req,
             ::ai::inworld::studio::v1alpha::ListCharactersResponse* resp) {
               return service->ListCharacters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* req,
             ::ai::inworld::studio::v1alpha::Character* resp) {
               return service->UpdateCharacter(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* req,
             ::ai::inworld::studio::v1alpha::Character* resp) {
               return service->CreateCharacter(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->DeleteCharacter(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* req,
             ::ai::inworld::studio::v1alpha::Character* resp) {
               return service->ReplaceCharacterRpmModel(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* req,
             ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* resp) {
               return service->PreviewPromptTemplate(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* req,
             ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* resp) {
               return service->CheckDeployInfo(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* req,
             ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* resp) {
               return service->GetCharacterAdvancedSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* req,
             ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* resp) {
               return service->UpdateCharacterAdvancedSettings(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* req,
             ::google::protobuf::Empty* resp) {
               return service->ShareCharacter(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* req,
             ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* resp) {
               return service->ListSharedCharacters(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      Characters_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< Characters::Service, ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](Characters::Service* service,
             ::grpc::ServerContext* ctx,
             const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* req,
             ::ai::inworld::studio::v1alpha::CharacterShareInfo* resp) {
               return service->GetCharacterShareInfo(ctx, req, resp);
             }, this)));
}

Characters::Service::~Service() {
}

::grpc::Status Characters::Service::DeployCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::GetCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::ListCharacters(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::UpdateCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::CreateCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::DeleteCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::ReplaceCharacterRpmModel(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::PreviewPromptTemplate(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::CheckDeployInfo(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::GetCharacterAdvancedSettings(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::UpdateCharacterAdvancedSettings(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::ShareCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::ListSharedCharacters(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status Characters::Service::GetCharacterShareInfo(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace ai
}  // namespace inworld
}  // namespace studio
}  // namespace v1alpha

