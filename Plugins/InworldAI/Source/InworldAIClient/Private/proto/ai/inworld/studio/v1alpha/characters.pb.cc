// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: characters.proto

#include "ProtoDisableWarning.h"

#include "characters.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
//extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BehavioralContext_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_Character_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_ConversationConfig_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainTrigger_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_CharacterAssets_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterDescription_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterInitialMood_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterPersonality_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Fact_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Meta_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CharacterAdvancedSettings_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_characters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_SafetySpec_characters_2eproto;
//extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Scene_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_voices_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Voice_voices_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
class Character_CharacterDescriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterDescription> _instance;
} _Character_CharacterDescription_default_instance_;
class Character_BrainSettings_ConversationConfig_FillerSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainSettings_ConversationConfig_FillerSpec> _instance;
} _Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_;
class Character_BrainSettings_ConversationConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainSettings_ConversationConfig> _instance;
} _Character_BrainSettings_ConversationConfig_default_instance_;
class Character_BrainSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainSettings> _instance;
} _Character_BrainSettings_default_instance_;
class Character_BrainTriggerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainTrigger> _instance;
} _Character_BrainTrigger_default_instance_;
class Character_CharacterAssetsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterAssets> _instance;
} _Character_CharacterAssets_default_instance_;
class Character_CharacterInitialMoodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterInitialMood> _instance;
} _Character_CharacterInitialMood_default_instance_;
class Character_CharacterPersonalityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterPersonality> _instance;
} _Character_CharacterPersonality_default_instance_;
class Character_FactDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_Fact> _instance;
} _Character_Fact_default_instance_;
class Character_MetaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_Meta> _instance;
} _Character_Meta_default_instance_;
class CharacterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character> _instance;
} _Character_default_instance_;
class GetCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterRequest> _instance;
} _GetCharacterRequest_default_instance_;
class GetCharacterAdvancedSettingsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterAdvancedSettingsRequest> _instance;
} _GetCharacterAdvancedSettingsRequest_default_instance_;
class UpdateCharacterAdvancedSettingsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCharacterAdvancedSettingsRequest> _instance;
} _UpdateCharacterAdvancedSettingsRequest_default_instance_;
class ListCharactersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCharactersRequest> _instance;
} _ListCharactersRequest_default_instance_;
class CreateCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCharacterRequest> _instance;
} _CreateCharacterRequest_default_instance_;
class UpdateCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCharacterRequest> _instance;
} _UpdateCharacterRequest_default_instance_;
class DeleteCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCharacterRequest> _instance;
} _DeleteCharacterRequest_default_instance_;
class DeployCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeployCharacterRequest> _instance;
} _DeployCharacterRequest_default_instance_;
class ListCharactersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCharactersResponse> _instance;
} _ListCharactersResponse_default_instance_;
class ReplaceCharacterRpmModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReplaceCharacterRpmModelRequest> _instance;
} _ReplaceCharacterRpmModelRequest_default_instance_;
class PreviewPromptTemplateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewPromptTemplateRequest> _instance;
} _PreviewPromptTemplateRequest_default_instance_;
class PreviewPromptTempalteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewPromptTempalteResponse> _instance;
} _PreviewPromptTempalteResponse_default_instance_;
class ShareCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShareCharacterRequest> _instance;
} _ShareCharacterRequest_default_instance_;
class ListSharedCharactersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListSharedCharactersRequest> _instance;
} _ListSharedCharactersRequest_default_instance_;
class ListSharedCharactersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListSharedCharactersResponse> _instance;
} _ListSharedCharactersResponse_default_instance_;
class CharacterAdvancedSettings_ConversationConfig_EngineSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings_ConversationConfig_EngineSpec> _instance;
} _CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_;
class CharacterAdvancedSettings_ConversationConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings_ConversationConfig> _instance;
} _CharacterAdvancedSettings_ConversationConfig_default_instance_;
class CharacterAdvancedSettings_SafetySpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings_SafetySpec> _instance;
} _CharacterAdvancedSettings_SafetySpec_default_instance_;
class CharacterAdvancedSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings> _instance;
} _CharacterAdvancedSettings_default_instance_;
class GetCharacterShareInfoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterShareInfoRequest> _instance;
} _GetCharacterShareInfoRequest_default_instance_;
class CharacterShareInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterShareInfo> _instance;
} _CharacterShareInfo_default_instance_;
class CheckDeployInfoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckDeployInfoRequest> _instance;
} _CheckDeployInfoRequest_default_instance_;
class CheckDeployInfoResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckDeployInfoResponse> _instance;
} _CheckDeployInfoResponse_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static void InitDefaultsscc_info_Character_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<10> scc_info_Character_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 10, 0, InitDefaultsscc_info_Character_characters_2eproto}, {
      &scc_info_Character_CharacterDescription_characters_2eproto.base,
      &scc_info_Character_BrainSettings_characters_2eproto.base,
      &scc_info_Character_BrainTrigger_characters_2eproto.base,
      &scc_info_Character_CharacterAssets_characters_2eproto.base,
      &scc_info_Character_CharacterInitialMood_characters_2eproto.base,
      &scc_info_Character_CharacterPersonality_characters_2eproto.base,
      //&scc_info_Scene_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto.base,
      &scc_info_Character_Fact_characters_2eproto.base,
      //&scc_info_BehavioralContext_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto.base,
      &scc_info_Character_Meta_characters_2eproto.base,}};

static void InitDefaultsscc_info_Character_BrainSettings_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainSettings_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_BrainSettings_characters_2eproto}, {
      &scc_info_Character_BrainSettings_ConversationConfig_characters_2eproto.base,}};

static void InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_ConversationConfig_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_characters_2eproto}, {
      &scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_characters_2eproto.base,}};

static void InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_FillerSpec_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_FillerSpec_characters_2eproto}, {}};

static void InitDefaultsscc_info_Character_BrainTrigger_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainTrigger_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainTrigger();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainTrigger_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_BrainTrigger_characters_2eproto}, {}};

static void InitDefaultsscc_info_Character_CharacterAssets_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterAssets_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterAssets();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_CharacterAssets_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_CharacterAssets_characters_2eproto}, {
      &scc_info_Voice_voices_2eproto.base,}};

static void InitDefaultsscc_info_Character_CharacterDescription_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterDescription_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterDescription();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterDescription_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_CharacterDescription_characters_2eproto}, {}};

static void InitDefaultsscc_info_Character_CharacterInitialMood_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterInitialMood_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterInitialMood_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_CharacterInitialMood_characters_2eproto}, {}};

static void InitDefaultsscc_info_Character_CharacterPersonality_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterPersonality_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterPersonality();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterPersonality_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_CharacterPersonality_characters_2eproto}, {}};

static void InitDefaultsscc_info_Character_Fact_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_Fact_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_Fact();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Fact_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_Fact_characters_2eproto}, {}};

static void InitDefaultsscc_info_Character_Meta_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_Meta_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_Meta();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Meta_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_Meta_characters_2eproto}, {}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CharacterAdvancedSettings_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CharacterAdvancedSettings_characters_2eproto}, {
      &scc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto.base,
      &scc_info_CharacterAdvancedSettings_SafetySpec_characters_2eproto.base,}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto}, {
      &scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto.base,}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto}, {}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_SafetySpec_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_SafetySpec_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_SafetySpec_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CharacterAdvancedSettings_SafetySpec_characters_2eproto}, {}};

static void InitDefaultsscc_info_CharacterShareInfo_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterShareInfo_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterShareInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterShareInfo_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CharacterShareInfo_characters_2eproto}, {}};

static void InitDefaultsscc_info_CheckDeployInfoRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CheckDeployInfoRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckDeployInfoRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckDeployInfoRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_CheckDeployInfoResponse_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CheckDeployInfoResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckDeployInfoResponse_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckDeployInfoResponse_characters_2eproto}, {}};

static void InitDefaultsscc_info_CreateCharacterRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CreateCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CreateCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCharacterRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCharacterRequest_characters_2eproto}, {
      &scc_info_Character_characters_2eproto.base,}};

static void InitDefaultsscc_info_DeleteCharacterRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_DeleteCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::DeleteCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCharacterRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCharacterRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_DeployCharacterRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_DeployCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::DeployCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeployCharacterRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeployCharacterRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_GetCharacterAdvancedSettingsRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_GetCharacterAdvancedSettingsRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterAdvancedSettingsRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterAdvancedSettingsRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_GetCharacterRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_GetCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::GetCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_GetCharacterShareInfoRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_GetCharacterShareInfoRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterShareInfoRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterShareInfoRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_ListCharactersRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListCharactersRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListCharactersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListCharactersRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListCharactersRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_ListCharactersResponse_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListCharactersResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListCharactersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListCharactersResponse_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListCharactersResponse_characters_2eproto}, {
      &scc_info_Character_characters_2eproto.base,}};

static void InitDefaultsscc_info_ListSharedCharactersRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListSharedCharactersRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListSharedCharactersRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListSharedCharactersRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_ListSharedCharactersResponse_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListSharedCharactersResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListSharedCharactersResponse_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListSharedCharactersResponse_characters_2eproto}, {
      &scc_info_Character_characters_2eproto.base,}};

static void InitDefaultsscc_info_PreviewPromptTempalteResponse_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_PreviewPromptTempalteResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewPromptTempalteResponse_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewPromptTempalteResponse_characters_2eproto}, {}};

static void InitDefaultsscc_info_PreviewPromptTemplateRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_PreviewPromptTemplateRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewPromptTemplateRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewPromptTemplateRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_ReplaceCharacterRpmModelRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ReplaceCharacterRpmModelRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReplaceCharacterRpmModelRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReplaceCharacterRpmModelRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_ShareCharacterRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ShareCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ShareCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShareCharacterRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShareCharacterRequest_characters_2eproto}, {}};

static void InitDefaultsscc_info_UpdateCharacterAdvancedSettingsRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_UpdateCharacterAdvancedSettingsRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateCharacterAdvancedSettingsRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateCharacterAdvancedSettingsRequest_characters_2eproto}, {
      &scc_info_CharacterAdvancedSettings_characters_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCharacterRequest_characters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_UpdateCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::UpdateCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateCharacterRequest_characters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateCharacterRequest_characters_2eproto}, {
      &scc_info_Character_characters_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_characters_2eproto[34];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_characters_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_characters_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_characters_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, given_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, pronoun_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, nicknames_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, motivation_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, wikipedia_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, player_role_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, default_context_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, example_dialog_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, example_dialog_style_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, personality_adjectives_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, life_stage_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, hobby_or_interests_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, character_role_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec, fillers_disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, filler_spec_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, emotions_disabled_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, behavioral_contexts_disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings, conversation_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, trigger_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, situation_description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, start_conversation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_model_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_image_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_image_uri_portrait_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_image_uri_posture_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, voice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, joy_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, fear_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, trust_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, surprise_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, positive_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, peaceful_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, open_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, extravert_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, uuid_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, text_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, total_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, total_common_knowledge_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, language_code_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, default_character_description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, brain_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, brain_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, default_character_assets_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, initial_mood_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, personality_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, common_knowledges_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, social_rank_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, scenes_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, facts_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, behavioral_contexts_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, meta_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, emotional_fluidity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, character_advanced_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, view_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, character_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteCharacterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, characters_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, rpm_model_uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, template__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, prompt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, errors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, external_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, shared_characters_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, engine_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, temperature_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, max_tokens_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, frequency_penalty_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, presence_penalty_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig, engine_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec, allowed_topics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, conversation_config_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, custom_prompt_template_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, speech_safety_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterShareInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterShareInfo, external_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, character_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, is_fresh_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterDescription)},
  { 19, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec)},
  { 25, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig)},
  { 33, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings)},
  { 39, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainTrigger)},
  { 47, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterAssets)},
  { 57, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood)},
  { 66, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterPersonality)},
  { 75, -1, sizeof(::ai::inworld::studio::v1alpha::Character_Fact)},
  { 83, -1, sizeof(::ai::inworld::studio::v1alpha::Character_Meta)},
  { 90, -1, sizeof(::ai::inworld::studio::v1alpha::Character)},
  { 110, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterRequest)},
  { 117, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest)},
  { 123, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest)},
  { 130, -1, sizeof(::ai::inworld::studio::v1alpha::ListCharactersRequest)},
  { 140, -1, sizeof(::ai::inworld::studio::v1alpha::CreateCharacterRequest)},
  { 147, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateCharacterRequest)},
  { 154, -1, sizeof(::ai::inworld::studio::v1alpha::DeleteCharacterRequest)},
  { 160, -1, sizeof(::ai::inworld::studio::v1alpha::DeployCharacterRequest)},
  { 166, -1, sizeof(::ai::inworld::studio::v1alpha::ListCharactersResponse)},
  { 173, -1, sizeof(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest)},
  { 180, -1, sizeof(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest)},
  { 187, -1, sizeof(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse)},
  { 194, -1, sizeof(::ai::inworld::studio::v1alpha::ShareCharacterRequest)},
  { 201, -1, sizeof(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest)},
  { 209, -1, sizeof(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse)},
  { 216, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec)},
  { 226, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig)},
  { 232, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec)},
  { 238, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings)},
  { 247, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest)},
  { 253, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterShareInfo)},
  { 259, -1, sizeof(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest)},
  { 265, -1, sizeof(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterDescription_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainTrigger_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterAssets_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterInitialMood_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterPersonality_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_Fact_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_Meta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_GetCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_GetCharacterAdvancedSettingsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_UpdateCharacterAdvancedSettingsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListCharactersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CreateCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_UpdateCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_DeleteCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_DeployCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListCharactersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ReplaceCharacterRpmModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_PreviewPromptTemplateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_PreviewPromptTempalteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ShareCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListSharedCharactersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListSharedCharactersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_SafetySpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_GetCharacterShareInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterShareInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CheckDeployInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CheckDeployInfoResponse_default_instance_),
};

const char descriptor_table_protodef_characters_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020characters.proto\022\031ai.inworld.studio.v1"
  "alpha\032\034google/api/annotations.proto\032\027goo"
  "gle/api/client.proto\032\037google/api/field_b"
  "ehavior.proto\032\031google/api/resource.proto"
  "\032\033google/protobuf/empty.proto\032 google/pr"
  "otobuf/field_mask.proto\032\034google/protobuf"
  "/struct.proto\032\roptions.proto\0323ai/inworld"
  "/studio/v1alpha/behavioral_contexts.prot"
  "o\032&ai/inworld/studio/v1alpha/errors.prot"
  "o\032&ai/inworld/studio/v1alpha/scenes.prot"
  "o\032\014voices.proto\"\310\031\n\tCharacter\022C\n\004name\030\001 "
  "\001(\tB5\242\317\"1\n/\032-workspaces/workspace-1/char"
  "acters/character-1\022\025\n\rlanguage_code\030\002 \001("
  "\t\022`\n\035default_character_description\030\003 \001(\013"
  "29.ai.inworld.studio.v1alpha.Character.C"
  "haracterDescription\022J\n\016brain_settings\030\004 "
  "\001(\01322.ai.inworld.studio.v1alpha.Characte"
  "r.BrainSettings\022I\n\016brain_triggers\030\005 \003(\0132"
  "1.ai.inworld.studio.v1alpha.Character.Br"
  "ainTrigger\022V\n\030default_character_assets\030\007"
  " \001(\01324.ai.inworld.studio.v1alpha.Charact"
  "er.CharacterAssets\022O\n\014initial_mood\030\t \001(\013"
  "29.ai.inworld.studio.v1alpha.Character.C"
  "haracterInitialMood\022N\n\013personality\030\n \001(\013"
  "29.ai.inworld.studio.v1alpha.Character.C"
  "haracterPersonality\022\031\n\021common_knowledges"
  "\030\013 \003(\t\022\023\n\013social_rank\030\014 \001(\002\0220\n\006scenes\030\r "
  "\003(\0132 .ai.inworld.studio.v1alpha.Scene\0228\n"
  "\005facts\030\016 \003(\0132).ai.inworld.studio.v1alpha"
  ".Character.Fact\022I\n\023behavioral_contexts\030\017"
  " \003(\0132,.ai.inworld.studio.v1alpha.Behavio"
  "ralContext\022<\n\004meta\030\020 \001(\0132).ai.inworld.st"
  "udio.v1alpha.Character.MetaB\003\340A\003\022\032\n\022emot"
  "ional_fluidity\030\021 \001(\002\032\234\t\n\024CharacterDescri"
  "ption\022)\n\ngiven_name\030\001 \001(\tB\025\242\317\"\021\n\017\032\rgiven"
  " name #1\022\023\n\013description\030\002 \001(\t\022R\n\007pronoun"
  "\030\003 \001(\0162A.ai.inworld.studio.v1alpha.Chara"
  "cter.CharacterDescription.Pronoun\022\021\n\tnic"
  "knames\030\004 \003(\t\022\022\n\nmotivation\030\005 \001(\t\022\025\n\rwiki"
  "pedia_uri\030\006 \001(\t\022\023\n\013player_role\030\007 \001(\t\022\027\n\017"
  "default_context\030\010 \001(\t\022\026\n\016example_dialog\030"
  "\t \001(\t\022j\n\024example_dialog_style\030\n \001(\0162L.ai"
  ".inworld.studio.v1alpha.Character.Charac"
  "terDescription.ExampleDialogStyle\022\036\n\026per"
  "sonality_adjectives\030\013 \003(\t\022W\n\nlife_stage\030"
  "\014 \001(\0162C.ai.inworld.studio.v1alpha.Charac"
  "ter.CharacterDescription.LifeStage\022\032\n\022ho"
  "bby_or_interests\030\r \003(\t\022\026\n\016character_role"
  "\030\016 \001(\t\"[\n\007Pronoun\022\027\n\023PRONOUN_UNSPECIFIED"
  "\020\000\022\022\n\016PRONOUN_FEMALE\020\001\022\020\n\014PRONOUN_MALE\020\002"
  "\022\021\n\rPRONOUN_OTHER\020\003\"\344\001\n\022ExampleDialogSty"
  "le\022$\n EXAMPLE_DIALOG_STYLE_UNSPECIFIED\020\000"
  "\022 \n\034EXAMPLE_DIALOG_STYLE_DEFAULT\020\001\022\037\n\033EX"
  "AMPLE_DIALOG_STYLE_BUBBLY\020\002\022\037\n\033EXAMPLE_D"
  "IALOG_STYLE_FORMAL\020\003\022\036\n\032EXAMPLE_DIALOG_S"
  "TYLE_BLUNT\020\004\022$\n EXAMPLE_DIALOG_STYLE_INQ"
  "UISITIVE\020\005\"\216\002\n\tLifeStage\022\032\n\026LIFE_STAGE_U"
  "NSPECIFIED\020\000\022\026\n\022LIFE_STAGE_INFANCY\020\001\022\032\n\026"
  "LIFE_STAGE_TODDLERHOOD\020\002\022\030\n\024LIFE_STAGE_P"
  "RESCHOOL\020\003\022\033\n\027LIFE_STAGE_EARLY_SCHOOL\020\004\022"
  "\032\n\026LIFE_STAGE_ADOLESCENCE\020\005\022\036\n\032LIFE_STAG"
  "E_YOUNG_ADULTHOOD\020\006\022\037\n\033LIFE_STAGE_MIDDLE"
  "_ADULTHOOD\020\007\022\035\n\031LIFE_STAGE_LATE_ADULTHOO"
  "D\020\010\032\362\002\n\rBrainSettings\022b\n\023conversation_co"
  "nfig\030\001 \001(\0132E.ai.inworld.studio.v1alpha.C"
  "haracter.BrainSettings.ConversationConfi"
  "g\032\360\001\n\022ConversationConfig\022e\n\013filler_spec\030"
  "\002 \001(\0132P.ai.inworld.studio.v1alpha.Charac"
  "ter.BrainSettings.ConversationConfig.Fil"
  "lerSpec\022\031\n\021emotions_disabled\030\004 \001(\010\022$\n\034be"
  "havioral_contexts_disabled\030\005 \001(\010\032&\n\nFill"
  "erSpec\022\030\n\020fillers_disabled\030\001 \001(\010J\004\010\001\020\002J\004"
  "\010\003\020\004J\004\010\002\020\003J\004\010\003\020\004\032w\n\014BrainTrigger\022,\n\007trig"
  "ger\030\001 \001(\tB\033\372A\030\n\026api.inworld.ai/Trigger\022\035"
  "\n\025situation_description\030\002 \001(\t\022\032\n\022start_c"
  "onversation\030\003 \001(\010\032\275\001\n\017CharacterAssets\022\032\n"
  "\rrpm_model_uri\030\002 \001(\tB\003\340A\003\022\034\n\rrpm_image_u"
  "ri\030\003 \001(\tB\005\030\001\340A\003\022#\n\026rpm_image_uri_portrai"
  "t\030\004 \001(\tB\003\340A\003\022\"\n\025rpm_image_uri_posture\030\005 "
  "\001(\tB\003\340A\003\022\'\n\005voice\030\006 \001(\0132\030.ai.inworld.voi"
  "ces.Voice\032R\n\024CharacterInitialMood\022\013\n\003joy"
  "\030\001 \001(\005\022\014\n\004fear\030\002 \001(\005\022\r\n\005trust\030\003 \001(\005\022\020\n\010s"
  "urprise\030\004 \001(\005\032[\n\024CharacterPersonality\022\020\n"
  "\010positive\030\001 \001(\005\022\020\n\010peaceful\030\002 \001(\005\022\014\n\004ope"
  "n\030\003 \001(\005\022\021\n\textravert\030\004 \001(\005\032Z\n\004Fact\022\014\n\004uu"
  "id\030\001 \001(\t\022\014\n\004text\030\002 \003(\t\0226\n\004tags\030\003 \003(\0162(.a"
  "i.inworld.studio.v1alpha.Character.Tag\032>"
  "\n\004Meta\022\026\n\016total_triggers\030\001 \001(\005\022\036\n\026total_"
  "common_knowledge\030\002 \001(\005\">\n\003Tag\022\023\n\017TAG_UNS"
  "PECIFIED\020\000\022\016\n\nTAG_MEMORY\020\001\022\022\n\016TAG_APPEAR"
  "ANCE\020\002:L\352AI\n\030api.inworld.ai/Character\022-w"
  "orkspaces/{workspace}/characters/{charac"
  "ter}J\004\010\006\020\007\"\201\001\n\023GetCharacterRequest\022.\n\004na"
  "me\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Charact"
  "er\022:\n\004view\030\002 \001(\0162,.ai.inworld.studio.v1a"
  "lpha.CharacterItemView\"U\n#GetCharacterAd"
  "vancedSettingsRequest\022.\n\004name\030\001 \001(\tB \340A\002"
  "\372A\032\n\030api.inworld.ai/Character\"\276\001\n&Update"
  "CharacterAdvancedSettingsRequest\022^\n\033char"
  "acter_advanced_settings\030\001 \001(\01324.ai.inwor"
  "ld.studio.v1alpha.CharacterAdvancedSetti"
  "ngsB\003\340A\002\0224\n\013update_mask\030\002 \001(\0132\032.google.p"
  "rotobuf.FieldMaskB\003\340A\002\"\322\001\n\025ListCharacter"
  "sRequest\022J\n\006parent\030\001 \001(\tB:\340A\002\372A4\n\030api.in"
  "world.ai/Workspace\022\030api.inworld.ai/Chara"
  "cter\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 "
  "\001(\t\0226\n\004view\030\004 \001(\0162(.ai.inworld.studio.v1"
  "alpha.CharacterView\022\016\n\006filter\030\005 \001(\t\"\242\001\n\026"
  "CreateCharacterRequest\022J\n\006parent\030\001 \001(\tB:"
  "\340A\002\372A4\n\030api.inworld.ai/Workspace\022\030api.in"
  "world.ai/Character\022<\n\tcharacter\030\002 \001(\0132$."
  "ai.inworld.studio.v1alpha.CharacterB\003\340A\002"
  "\"\214\001\n\026UpdateCharacterRequest\022<\n\tcharacter"
  "\030\001 \001(\0132$.ai.inworld.studio.v1alpha.Chara"
  "cterB\003\340A\002\0224\n\013update_mask\030\002 \001(\0132\032.google."
  "protobuf.FieldMaskB\003\340A\002\"H\n\026DeleteCharact"
  "erRequest\022.\n\004name\030\001 \001(\tB \340A\002\372A\032\n\030api.inw"
  "orld.ai/Character\"H\n\026DeployCharacterRequ"
  "est\022.\n\004name\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.a"
  "i/Character\"k\n\026ListCharactersResponse\0228\n"
  "\ncharacters\030\001 \003(\0132$.ai.inworld.studio.v1"
  "alpha.Character\022\027\n\017next_page_token\030\002 \001(\t"
  "\"\202\001\n\037ReplaceCharacterRpmModelRequest\022H\n\t"
  "character\030\001 \001(\tB5\242\317\"1\n/\032-workspaces/work"
  "space-1/characters/character-1\022\025\n\rrpm_mo"
  "del_uri\030\002 \001(\t\"e\n\034PreviewPromptTemplateRe"
  "quest\0223\n\tcharacter\030\001 \001(\tB \340A\002\372A\032\n\030api.in"
  "world.ai/Character\022\020\n\010template\030\002 \001(\t\"D\n\035"
  "PreviewPromptTempalteResponse\022\016\n\006prompt\030"
  "\001 \001(\t\022\023\n\006errors\030\002 \003(\tB\003\340A\003\"]\n\025ShareChara"
  "cterRequest\022.\n\004name\030\001 \001(\tB \340A\002\372A\032\n\030api.i"
  "nworld.ai/Character\022\024\n\014external_ids\030\002 \003("
  "\t\"v\n\033ListSharedCharactersRequest\0220\n\006pare"
  "nt\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Workspa"
  "ce\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001("
  "\t\"x\n\034ListSharedCharactersResponse\022\?\n\021sha"
  "red_characters\030\001 \003(\0132$.ai.inworld.studio"
  ".v1alpha.Character\022\027\n\017next_page_token\030\002 "
  "\001(\t\"\246\t\n\031CharacterAdvancedSettings\022U\n\004nam"
  "e\030\001 \001(\tBG\242\317\"C\nA\032\?workspaces/workspace-1/"
  "characters/character-1/advanced-settings"
  "\022d\n\023conversation_config\030\002 \001(\0132G.ai.inwor"
  "ld.studio.v1alpha.CharacterAdvancedSetti"
  "ngs.ConversationConfig\022\036\n\026custom_prompt_"
  "template\030\004 \001(\t\022[\n\022speech_safety_spec\030\005 \001"
  "(\0132\?.ai.inworld.studio.v1alpha.Character"
  "AdvancedSettings.SafetySpec\032\371\001\n\022Conversa"
  "tionConfig\022g\n\013engine_spec\030\001 \001(\0132R.ai.inw"
  "orld.studio.v1alpha.CharacterAdvancedSet"
  "tings.ConversationConfig.EngineSpec\032z\n\nE"
  "ngineSpec\022\016\n\006engine\030\001 \001(\t\022\023\n\013temperature"
  "\030\002 \001(\002\022\022\n\nmax_tokens\030\003 \001(\005\022\031\n\021frequency_"
  "penalty\030\004 \001(\002\022\030\n\020presence_penalty\030\005 \001(\002\032"
  "j\n\nSafetySpec\022\\\n\016allowed_topics\030\001 \003(\0162D."
  "ai.inworld.studio.v1alpha.CharacterAdvan"
  "cedSettings.SafetyTopicName\"\360\002\n\017SafetyTo"
  "picName\022!\n\035SAFETY_TOPIC_NAME_UNSPECIFIED"
  "\020\000\022 \n\034SAFETY_TOPIC_NAME_SAFE_TOPIC\020\001\022\036\n\032"
  "SAFETY_TOPIC_NAME_POLITICS\020\002\022\036\n\032SAFETY_T"
  "OPIC_NAME_FINANCES\020\003\022&\n\"SAFETY_TOPIC_NAM"
  "E_DISGUSTING_STUFF\020\004\022!\n\035SAFETY_TOPIC_NAM"
  "E_GENDER_BIAS\020\005\022#\n\037SAFETY_TOPIC_NAME_SUB"
  "STANCE_USE\020\006\022#\n\037SAFETY_TOPIC_NAME_HEALTH"
  "_ADVICE\020\007\022\036\n\032SAFETY_TOPIC_NAME_RELIGION\020"
  "\010\022#\n\037SAFETY_TOPIC_NAME_RELATIONSHIPS\020\t:n"
  "\352Ak\n(api.inworld.ai/CharacterAdvancedSet"
  "tings\022\?workspaces/{workspace}/characters"
  "/{character}/advanced-settingsJ\004\010\003\020\004\"N\n\034"
  "GetCharacterShareInfoRequest\022.\n\004name\030\001 \001"
  "(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\"*\n\022"
  "CharacterShareInfo\022\024\n\014external_ids\030\001 \003(\t"
  "\"M\n\026CheckDeployInfoRequest\0223\n\tcharacter\030"
  "\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\""
  "+\n\027CheckDeployInfoResponse\022\020\n\010is_fresh\030\001"
  " \001(\010*k\n\rCharacterView\022\036\n\032CHARACTER_VIEW_"
  "UNSPECIFIED\020\000\022\032\n\026CHARACTER_VIEW_DEFAULT\020"
  "\001\022\036\n\032CHARACTER_VIEW_WITH_SCENES\020\002*|\n\021Cha"
  "racterItemView\022#\n\037CHARACTER_ITEM_VIEW_UN"
  "SPECIFIED\020\000\022\037\n\033CHARACTER_ITEM_VIEW_DEFAU"
  "LT\020\001\022!\n\035CHARACTER_ITEM_VIEW_WITH_META\020\0022"
  "\206\026\n\nCharacters\022\231\001\n\017DeployCharacter\0221.ai."
  "inworld.studio.v1alpha.DeployCharacterRe"
  "quest\032\026.google.protobuf.Empty\";\202\323\344\223\0025\"0/"
  "v1alpha/{name=workspaces/*/characters/*}"
  ":deploy:\001*\022\236\001\n\014GetCharacter\022..ai.inworld"
  ".studio.v1alpha.GetCharacterRequest\032$.ai"
  ".inworld.studio.v1alpha.Character\"8\202\323\344\223\002"
  "+\022)/v1alpha/{name=workspaces/*/character"
  "s/*}\332A\004name\022\261\001\n\016ListCharacters\0220.ai.inwo"
  "rld.studio.v1alpha.ListCharactersRequest"
  "\0321.ai.inworld.studio.v1alpha.ListCharact"
  "ersResponse\":\202\323\344\223\002+\022)/v1alpha/{parent=wo"
  "rkspaces/*}/characters\332A\006parent\022\312\001\n\017Upda"
  "teCharacter\0221.ai.inworld.studio.v1alpha."
  "UpdateCharacterRequest\032$.ai.inworld.stud"
  "io.v1alpha.Character\"^\202\323\344\223\002@23/v1alpha/{"
  "character.name=workspaces/*/characters/*"
  "}:\tcharacter\332A\025character,update_mask\022\273\001\n"
  "\017CreateCharacter\0221.ai.inworld.studio.v1a"
  "lpha.CreateCharacterRequest\032$.ai.inworld"
  ".studio.v1alpha.Character\"O\202\323\344\223\0026\")/v1al"
  "pha/{parent=workspaces/*}/characters:\tch"
  "aracter\332A\020parent,character\022\226\001\n\017DeleteCha"
  "racter\0221.ai.inworld.studio.v1alpha.Delet"
  "eCharacterRequest\032\026.google.protobuf.Empt"
  "y\"8\202\323\344\223\002+*)/v1alpha/{name=workspaces/*/c"
  "haracters/*}\332A\004name\022\334\001\n\030ReplaceCharacter"
  "RpmModel\022:.ai.inworld.studio.v1alpha.Rep"
  "laceCharacterRpmModelRequest\032$.ai.inworl"
  "d.studio.v1alpha.Character\"^\202\323\344\223\002L\"G/v1a"
  "lpha/{character=workspaces/*/characters/"
  "*}:replaceCharacterRpmModel:\001*\332A\tcharact"
  "er\022\333\001\n\025PreviewPromptTemplate\0227.ai.inworl"
  "d.studio.v1alpha.PreviewPromptTemplateRe"
  "quest\0328.ai.inworld.studio.v1alpha.Previe"
  "wPromptTempalteResponse\"O\202\323\344\223\002I\"D/v1alph"
  "a/{character=workspaces/*/characters/*}:"
  "previewPromptTemplate:\001*\022\300\001\n\017CheckDeploy"
  "Info\0221.ai.inworld.studio.v1alpha.CheckDe"
  "ployInfoRequest\0322.ai.inworld.studio.v1al"
  "pha.CheckDeployInfoResponse\"F\202\323\344\223\002@\022>/v1"
  "alpha/{character=workspaces/*/characters"
  "/*}:checkDeployInfo\022\340\001\n\034GetCharacterAdva"
  "ncedSettings\022>.ai.inworld.studio.v1alpha"
  ".GetCharacterAdvancedSettingsRequest\0324.a"
  "i.inworld.studio.v1alpha.CharacterAdvanc"
  "edSettings\"J\202\323\344\223\002=\022;/v1alpha/{name=works"
  "paces/*/characters/*/advanced-settings}\332"
  "A\004name\022\303\002\n\037UpdateCharacterAdvancedSettin"
  "gs\022A.ai.inworld.studio.v1alpha.UpdateCha"
  "racterAdvancedSettingsRequest\0324.ai.inwor"
  "ld.studio.v1alpha.CharacterAdvancedSetti"
  "ngs\"\246\001\202\323\344\223\002v2W/v1alpha/{character_advanc"
  "ed_settings.name=workspaces/*/characters"
  "/*/advanced-settings}:\033character_advance"
  "d_settings\332A\'character_advanced_settings"
  ",update_mask\022\235\001\n\016ShareCharacter\0220.ai.inw"
  "orld.studio.v1alpha.ShareCharacterReques"
  "t\032\026.google.protobuf.Empty\"A\202\323\344\223\0024\"//v1al"
  "pha/{name=workspaces/*/characters/*}:sha"
  "re:\001*\332A\004name\022\312\001\n\024ListSharedCharacters\0226."
  "ai.inworld.studio.v1alpha.ListSharedChar"
  "actersRequest\0327.ai.inworld.studio.v1alph"
  "a.ListSharedCharactersResponse\"A\202\323\344\223\0022\0220"
  "/v1alpha/{parent=workspaces/*}/character"
  "s:shared\332A\006parent\022\314\001\n\025GetCharacterShareI"
  "nfo\0227.ai.inworld.studio.v1alpha.GetChara"
  "cterShareInfoRequest\032-.ai.inworld.studio"
  ".v1alpha.CharacterShareInfo\"K\202\323\344\223\002>\022</v1"
  "alpha/{name=workspaces/*/characters/*/ch"
  "aracterShareInfo}\332A\004nameB\231\001\n\031ai.inworld."
  "studio.v1alphaB\017CharactersProtoP\001ZMgithu"
  "b.com/inworld-ai/inworld/serving/grpc-ga"
  "teway/build/proto/studio/v1alpha\252\002\031Ai.In"
  "world.Studio.V1Alphab\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_characters_2eproto_deps[12] = {
  //&::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto,
  //&::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2ferrors_2eproto,
  //&::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  //&::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  //&::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_options_2eproto,
  &::descriptor_table_voices_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_characters_2eproto_sccs[34] = {
  &scc_info_Character_characters_2eproto.base,
  &scc_info_Character_BrainSettings_characters_2eproto.base,
  &scc_info_Character_BrainSettings_ConversationConfig_characters_2eproto.base,
  &scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_characters_2eproto.base,
  &scc_info_Character_BrainTrigger_characters_2eproto.base,
  &scc_info_Character_CharacterAssets_characters_2eproto.base,
  &scc_info_Character_CharacterDescription_characters_2eproto.base,
  &scc_info_Character_CharacterInitialMood_characters_2eproto.base,
  &scc_info_Character_CharacterPersonality_characters_2eproto.base,
  &scc_info_Character_Fact_characters_2eproto.base,
  &scc_info_Character_Meta_characters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_characters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_SafetySpec_characters_2eproto.base,
  &scc_info_CharacterShareInfo_characters_2eproto.base,
  &scc_info_CheckDeployInfoRequest_characters_2eproto.base,
  &scc_info_CheckDeployInfoResponse_characters_2eproto.base,
  &scc_info_CreateCharacterRequest_characters_2eproto.base,
  &scc_info_DeleteCharacterRequest_characters_2eproto.base,
  &scc_info_DeployCharacterRequest_characters_2eproto.base,
  &scc_info_GetCharacterAdvancedSettingsRequest_characters_2eproto.base,
  &scc_info_GetCharacterRequest_characters_2eproto.base,
  &scc_info_GetCharacterShareInfoRequest_characters_2eproto.base,
  &scc_info_ListCharactersRequest_characters_2eproto.base,
  &scc_info_ListCharactersResponse_characters_2eproto.base,
  &scc_info_ListSharedCharactersRequest_characters_2eproto.base,
  &scc_info_ListSharedCharactersResponse_characters_2eproto.base,
  &scc_info_PreviewPromptTempalteResponse_characters_2eproto.base,
  &scc_info_PreviewPromptTemplateRequest_characters_2eproto.base,
  &scc_info_ReplaceCharacterRpmModelRequest_characters_2eproto.base,
  &scc_info_ShareCharacterRequest_characters_2eproto.base,
  &scc_info_UpdateCharacterAdvancedSettingsRequest_characters_2eproto.base,
  &scc_info_UpdateCharacterRequest_characters_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_characters_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_characters_2eproto = {
  false, false, descriptor_table_protodef_characters_2eproto, "characters.proto", 10188,
  &descriptor_table_characters_2eproto_once, descriptor_table_characters_2eproto_sccs, descriptor_table_characters_2eproto_deps, 34, 12,
  schemas, file_default_instances, TableStruct_characters_2eproto::offsets,
  file_level_metadata_characters_2eproto, 34, file_level_enum_descriptors_characters_2eproto, file_level_service_descriptors_characters_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_characters_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_characters_2eproto)), true);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_Pronoun_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_characters_2eproto);
  return file_level_enum_descriptors_characters_2eproto[0];
}
bool Character_CharacterDescription_Pronoun_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_UNSPECIFIED;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_FEMALE;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_MALE;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_OTHER;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::Pronoun_MIN;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::Pronoun_MAX;
constexpr int Character_CharacterDescription::Pronoun_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_ExampleDialogStyle_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_characters_2eproto);
  return file_level_enum_descriptors_characters_2eproto[1];
}
bool Character_CharacterDescription_ExampleDialogStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_UNSPECIFIED;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_DEFAULT;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_BUBBLY;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_FORMAL;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_BLUNT;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_INQUISITIVE;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::ExampleDialogStyle_MIN;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::ExampleDialogStyle_MAX;
constexpr int Character_CharacterDescription::ExampleDialogStyle_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_LifeStage_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_characters_2eproto);
  return file_level_enum_descriptors_characters_2eproto[2];
}
bool Character_CharacterDescription_LifeStage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_UNSPECIFIED;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_INFANCY;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_TODDLERHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_PRESCHOOL;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_EARLY_SCHOOL;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_ADOLESCENCE;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_YOUNG_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_MIDDLE_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_LATE_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LifeStage_MIN;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LifeStage_MAX;
constexpr int Character_CharacterDescription::LifeStage_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_Tag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_characters_2eproto);
  return file_level_enum_descriptors_characters_2eproto[3];
}
bool Character_Tag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_Tag Character::TAG_UNSPECIFIED;
constexpr Character_Tag Character::TAG_MEMORY;
constexpr Character_Tag Character::TAG_APPEARANCE;
constexpr Character_Tag Character::Tag_MIN;
constexpr Character_Tag Character::Tag_MAX;
constexpr int Character::Tag_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterAdvancedSettings_SafetyTopicName_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_characters_2eproto);
  return file_level_enum_descriptors_characters_2eproto[4];
}
bool CharacterAdvancedSettings_SafetyTopicName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_UNSPECIFIED;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_SAFE_TOPIC;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_POLITICS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_FINANCES;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_DISGUSTING_STUFF;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_GENDER_BIAS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_SUBSTANCE_USE;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_HEALTH_ADVICE;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_RELIGION;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_RELATIONSHIPS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SafetyTopicName_MIN;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SafetyTopicName_MAX;
constexpr int CharacterAdvancedSettings::SafetyTopicName_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_characters_2eproto);
  return file_level_enum_descriptors_characters_2eproto[5];
}
bool CharacterView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterItemView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_characters_2eproto);
  return file_level_enum_descriptors_characters_2eproto[6];
}
bool CharacterItemView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Character_CharacterDescription::_Internal {
 public:
};

Character_CharacterDescription::Character_CharacterDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  nicknames_(arena),
  personality_adjectives_(arena),
  hobby_or_interests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
}
Character_CharacterDescription::Character_CharacterDescription(const Character_CharacterDescription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      nicknames_(from.nicknames_),
      personality_adjectives_(from.personality_adjectives_),
      hobby_or_interests_(from.hobby_or_interests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_given_name().empty()) {
    given_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_given_name(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  motivation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_motivation().empty()) {
    motivation_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_motivation(), 
      GetArena());
  }
  wikipedia_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_wikipedia_uri().empty()) {
    wikipedia_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_wikipedia_uri(), 
      GetArena());
  }
  player_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_role().empty()) {
    player_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_role(), 
      GetArena());
  }
  default_context_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_default_context().empty()) {
    default_context_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_default_context(), 
      GetArena());
  }
  example_dialog_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_example_dialog().empty()) {
    example_dialog_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_example_dialog(), 
      GetArena());
  }
  character_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character_role().empty()) {
    character_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character_role(), 
      GetArena());
  }
  ::memcpy(&pronoun_, &from.pronoun_,
    static_cast<size_t>(reinterpret_cast<char*>(&life_stage_) -
    reinterpret_cast<char*>(&pronoun_)) + sizeof(life_stage_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
}

void Character_CharacterDescription::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_CharacterDescription_characters_2eproto.base);
  given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  motivation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wikipedia_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  player_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_context_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_dialog_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  character_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&pronoun_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&life_stage_) -
      reinterpret_cast<char*>(&pronoun_)) + sizeof(life_stage_));
}

Character_CharacterDescription::~Character_CharacterDescription() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterDescription::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  given_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  motivation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wikipedia_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  player_role_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_context_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_dialog_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  character_role_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Character_CharacterDescription::ArenaDtor(void* object) {
  Character_CharacterDescription* _this = reinterpret_cast< Character_CharacterDescription* >(object);
  (void)_this;
}
void Character_CharacterDescription::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterDescription& Character_CharacterDescription::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterDescription_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nicknames_.Clear();
  personality_adjectives_.Clear();
  hobby_or_interests_.Clear();
  given_name_.ClearToEmpty();
  description_.ClearToEmpty();
  motivation_.ClearToEmpty();
  wikipedia_uri_.ClearToEmpty();
  player_role_.ClearToEmpty();
  default_context_.ClearToEmpty();
  example_dialog_.ClearToEmpty();
  character_role_.ClearToEmpty();
  ::memset(&pronoun_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&life_stage_) -
      reinterpret_cast<char*>(&pronoun_)) + sizeof(life_stage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterDescription::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string given_name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_given_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.given_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pronoun(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_Pronoun>(val));
        } else goto handle_unusual;
        continue;
      // repeated string nicknames = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_nicknames();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.nicknames"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string motivation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_motivation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.motivation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string wikipedia_uri = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_wikipedia_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.wikipedia_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string player_role = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_player_role();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.player_role"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string default_context = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_default_context();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.default_context"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string example_dialog = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_example_dialog();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.example_dialog"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_example_dialog_style(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_ExampleDialogStyle>(val));
        } else goto handle_unusual;
        continue;
      // repeated string personality_adjectives = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_personality_adjectives();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.personality_adjectives"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_life_stage(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_LifeStage>(val));
        } else goto handle_unusual;
        continue;
      // repeated string hobby_or_interests = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_hobby_or_interests();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.hobby_or_interests"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // string character_role = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_character_role();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.character_role"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterDescription::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string given_name = 1 [(.ai.inworld.options.examples) = {
  if (this->given_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_given_name().data(), static_cast<int>(this->_internal_given_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.given_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_given_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
  if (this->pronoun() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_pronoun(), target);
  }

  // repeated string nicknames = 4;
  for (int i = 0, n = this->_internal_nicknames_size(); i < n; i++) {
    const auto& s = this->_internal_nicknames(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.nicknames");
    target = stream->WriteString(4, s, target);
  }

  // string motivation = 5;
  if (this->motivation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_motivation().data(), static_cast<int>(this->_internal_motivation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.motivation");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_motivation(), target);
  }

  // string wikipedia_uri = 6;
  if (this->wikipedia_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wikipedia_uri().data(), static_cast<int>(this->_internal_wikipedia_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.wikipedia_uri");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_wikipedia_uri(), target);
  }

  // string player_role = 7;
  if (this->player_role().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_player_role().data(), static_cast<int>(this->_internal_player_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.player_role");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_player_role(), target);
  }

  // string default_context = 8;
  if (this->default_context().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_context().data(), static_cast<int>(this->_internal_default_context().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.default_context");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_default_context(), target);
  }

  // string example_dialog = 9;
  if (this->example_dialog().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_example_dialog().data(), static_cast<int>(this->_internal_example_dialog().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.example_dialog");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_example_dialog(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
  if (this->example_dialog_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_example_dialog_style(), target);
  }

  // repeated string personality_adjectives = 11;
  for (int i = 0, n = this->_internal_personality_adjectives_size(); i < n; i++) {
    const auto& s = this->_internal_personality_adjectives(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.personality_adjectives");
    target = stream->WriteString(11, s, target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
  if (this->life_stage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_life_stage(), target);
  }

  // repeated string hobby_or_interests = 13;
  for (int i = 0, n = this->_internal_hobby_or_interests_size(); i < n; i++) {
    const auto& s = this->_internal_hobby_or_interests(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.hobby_or_interests");
    target = stream->WriteString(13, s, target);
  }

  // string character_role = 14;
  if (this->character_role().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character_role().data(), static_cast<int>(this->_internal_character_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.character_role");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_character_role(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  return target;
}

size_t Character_CharacterDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string nicknames = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(nicknames_.size());
  for (int i = 0, n = nicknames_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      nicknames_.Get(i));
  }

  // repeated string personality_adjectives = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(personality_adjectives_.size());
  for (int i = 0, n = personality_adjectives_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      personality_adjectives_.Get(i));
  }

  // repeated string hobby_or_interests = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(hobby_or_interests_.size());
  for (int i = 0, n = hobby_or_interests_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      hobby_or_interests_.Get(i));
  }

  // string given_name = 1 [(.ai.inworld.options.examples) = {
  if (this->given_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_given_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string motivation = 5;
  if (this->motivation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_motivation());
  }

  // string wikipedia_uri = 6;
  if (this->wikipedia_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wikipedia_uri());
  }

  // string player_role = 7;
  if (this->player_role().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_role());
  }

  // string default_context = 8;
  if (this->default_context().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_context());
  }

  // string example_dialog = 9;
  if (this->example_dialog().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_example_dialog());
  }

  // string character_role = 14;
  if (this->character_role().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character_role());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
  if (this->pronoun() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pronoun());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
  if (this->example_dialog_style() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_example_dialog_style());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
  if (this->life_stage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_life_stage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterDescription::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterDescription* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterDescription>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterDescription)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterDescription)
    MergeFrom(*source);
  }
}

void Character_CharacterDescription::MergeFrom(const Character_CharacterDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nicknames_.MergeFrom(from.nicknames_);
  personality_adjectives_.MergeFrom(from.personality_adjectives_);
  hobby_or_interests_.MergeFrom(from.hobby_or_interests_);
  if (from.given_name().size() > 0) {
    _internal_set_given_name(from._internal_given_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.motivation().size() > 0) {
    _internal_set_motivation(from._internal_motivation());
  }
  if (from.wikipedia_uri().size() > 0) {
    _internal_set_wikipedia_uri(from._internal_wikipedia_uri());
  }
  if (from.player_role().size() > 0) {
    _internal_set_player_role(from._internal_player_role());
  }
  if (from.default_context().size() > 0) {
    _internal_set_default_context(from._internal_default_context());
  }
  if (from.example_dialog().size() > 0) {
    _internal_set_example_dialog(from._internal_example_dialog());
  }
  if (from.character_role().size() > 0) {
    _internal_set_character_role(from._internal_character_role());
  }
  if (from.pronoun() != 0) {
    _internal_set_pronoun(from._internal_pronoun());
  }
  if (from.example_dialog_style() != 0) {
    _internal_set_example_dialog_style(from._internal_example_dialog_style());
  }
  if (from.life_stage() != 0) {
    _internal_set_life_stage(from._internal_life_stage());
  }
}

void Character_CharacterDescription::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterDescription::CopyFrom(const Character_CharacterDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterDescription::IsInitialized() const {
  return true;
}

void Character_CharacterDescription::InternalSwap(Character_CharacterDescription* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nicknames_.InternalSwap(&other->nicknames_);
  personality_adjectives_.InternalSwap(&other->personality_adjectives_);
  hobby_or_interests_.InternalSwap(&other->hobby_or_interests_);
  given_name_.Swap(&other->given_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  motivation_.Swap(&other->motivation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  wikipedia_uri_.Swap(&other->wikipedia_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  player_role_.Swap(&other->player_role_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default_context_.Swap(&other->default_context_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  example_dialog_.Swap(&other->example_dialog_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  character_role_.Swap(&other->character_role_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterDescription, life_stage_)
      + sizeof(Character_CharacterDescription::life_stage_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterDescription, pronoun_)>(
          reinterpret_cast<char*>(&pronoun_),
          reinterpret_cast<char*>(&other->pronoun_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterDescription::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainSettings_ConversationConfig_FillerSpec::_Internal {
 public:
};

Character_BrainSettings_ConversationConfig_FillerSpec::Character_BrainSettings_ConversationConfig_FillerSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
}
Character_BrainSettings_ConversationConfig_FillerSpec::Character_BrainSettings_ConversationConfig_FillerSpec(const Character_BrainSettings_ConversationConfig_FillerSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fillers_disabled_ = from.fillers_disabled_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
}

void Character_BrainSettings_ConversationConfig_FillerSpec::SharedCtor() {
  fillers_disabled_ = false;
}

Character_BrainSettings_ConversationConfig_FillerSpec::~Character_BrainSettings_ConversationConfig_FillerSpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainSettings_ConversationConfig_FillerSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_BrainSettings_ConversationConfig_FillerSpec::ArenaDtor(void* object) {
  Character_BrainSettings_ConversationConfig_FillerSpec* _this = reinterpret_cast< Character_BrainSettings_ConversationConfig_FillerSpec* >(object);
  (void)_this;
}
void Character_BrainSettings_ConversationConfig_FillerSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainSettings_ConversationConfig_FillerSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainSettings_ConversationConfig_FillerSpec& Character_BrainSettings_ConversationConfig_FillerSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainSettings_ConversationConfig_FillerSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fillers_disabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings_ConversationConfig_FillerSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool fillers_disabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          fillers_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainSettings_ConversationConfig_FillerSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fillers_disabled = 1;
  if (this->fillers_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_fillers_disabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  return target;
}

size_t Character_BrainSettings_ConversationConfig_FillerSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool fillers_disabled = 1;
  if (this->fillers_disabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainSettings_ConversationConfig_FillerSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainSettings_ConversationConfig_FillerSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainSettings_ConversationConfig_FillerSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
    MergeFrom(*source);
  }
}

void Character_BrainSettings_ConversationConfig_FillerSpec::MergeFrom(const Character_BrainSettings_ConversationConfig_FillerSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fillers_disabled() != 0) {
    _internal_set_fillers_disabled(from._internal_fillers_disabled());
  }
}

void Character_BrainSettings_ConversationConfig_FillerSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainSettings_ConversationConfig_FillerSpec::CopyFrom(const Character_BrainSettings_ConversationConfig_FillerSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings_ConversationConfig_FillerSpec::IsInitialized() const {
  return true;
}

void Character_BrainSettings_ConversationConfig_FillerSpec::InternalSwap(Character_BrainSettings_ConversationConfig_FillerSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(fillers_disabled_, other->fillers_disabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings_ConversationConfig_FillerSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainSettings_ConversationConfig::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec& filler_spec(const Character_BrainSettings_ConversationConfig* msg);
};

const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec&
Character_BrainSettings_ConversationConfig::_Internal::filler_spec(const Character_BrainSettings_ConversationConfig* msg) {
  return *msg->filler_spec_;
}
Character_BrainSettings_ConversationConfig::Character_BrainSettings_ConversationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
}
Character_BrainSettings_ConversationConfig::Character_BrainSettings_ConversationConfig(const Character_BrainSettings_ConversationConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_filler_spec()) {
    filler_spec_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec(*from.filler_spec_);
  } else {
    filler_spec_ = nullptr;
  }
  ::memcpy(&emotions_disabled_, &from.emotions_disabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&behavioral_contexts_disabled_) -
    reinterpret_cast<char*>(&emotions_disabled_)) + sizeof(behavioral_contexts_disabled_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
}

void Character_BrainSettings_ConversationConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_BrainSettings_ConversationConfig_characters_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&filler_spec_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&behavioral_contexts_disabled_) -
      reinterpret_cast<char*>(&filler_spec_)) + sizeof(behavioral_contexts_disabled_));
}

Character_BrainSettings_ConversationConfig::~Character_BrainSettings_ConversationConfig() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainSettings_ConversationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete filler_spec_;
}

void Character_BrainSettings_ConversationConfig::ArenaDtor(void* object) {
  Character_BrainSettings_ConversationConfig* _this = reinterpret_cast< Character_BrainSettings_ConversationConfig* >(object);
  (void)_this;
}
void Character_BrainSettings_ConversationConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainSettings_ConversationConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainSettings_ConversationConfig& Character_BrainSettings_ConversationConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainSettings_ConversationConfig_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainSettings_ConversationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && filler_spec_ != nullptr) {
    delete filler_spec_;
  }
  filler_spec_ = nullptr;
  ::memset(&emotions_disabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&behavioral_contexts_disabled_) -
      reinterpret_cast<char*>(&emotions_disabled_)) + sizeof(behavioral_contexts_disabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings_ConversationConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_filler_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool emotions_disabled = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          emotions_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool behavioral_contexts_disabled = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          behavioral_contexts_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainSettings_ConversationConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
  if (this->has_filler_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::filler_spec(this), target, stream);
  }

  // bool emotions_disabled = 4;
  if (this->emotions_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_emotions_disabled(), target);
  }

  // bool behavioral_contexts_disabled = 5;
  if (this->behavioral_contexts_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_behavioral_contexts_disabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  return target;
}

size_t Character_BrainSettings_ConversationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
  if (this->has_filler_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *filler_spec_);
  }

  // bool emotions_disabled = 4;
  if (this->emotions_disabled() != 0) {
    total_size += 1 + 1;
  }

  // bool behavioral_contexts_disabled = 5;
  if (this->behavioral_contexts_disabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainSettings_ConversationConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainSettings_ConversationConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainSettings_ConversationConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
    MergeFrom(*source);
  }
}

void Character_BrainSettings_ConversationConfig::MergeFrom(const Character_BrainSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filler_spec()) {
    _internal_mutable_filler_spec()->::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec::MergeFrom(from._internal_filler_spec());
  }
  if (from.emotions_disabled() != 0) {
    _internal_set_emotions_disabled(from._internal_emotions_disabled());
  }
  if (from.behavioral_contexts_disabled() != 0) {
    _internal_set_behavioral_contexts_disabled(from._internal_behavioral_contexts_disabled());
  }
}

void Character_BrainSettings_ConversationConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainSettings_ConversationConfig::CopyFrom(const Character_BrainSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings_ConversationConfig::IsInitialized() const {
  return true;
}

void Character_BrainSettings_ConversationConfig::InternalSwap(Character_BrainSettings_ConversationConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_BrainSettings_ConversationConfig, behavioral_contexts_disabled_)
      + sizeof(Character_BrainSettings_ConversationConfig::behavioral_contexts_disabled_)
      - PROTOBUF_FIELD_OFFSET(Character_BrainSettings_ConversationConfig, filler_spec_)>(
          reinterpret_cast<char*>(&filler_spec_),
          reinterpret_cast<char*>(&other->filler_spec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings_ConversationConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainSettings::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig& conversation_config(const Character_BrainSettings* msg);
};

const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig&
Character_BrainSettings::_Internal::conversation_config(const Character_BrainSettings* msg) {
  return *msg->conversation_config_;
}
Character_BrainSettings::Character_BrainSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
}
Character_BrainSettings::Character_BrainSettings(const Character_BrainSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_conversation_config()) {
    conversation_config_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig(*from.conversation_config_);
  } else {
    conversation_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
}

void Character_BrainSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_BrainSettings_characters_2eproto.base);
  conversation_config_ = nullptr;
}

Character_BrainSettings::~Character_BrainSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete conversation_config_;
}

void Character_BrainSettings::ArenaDtor(void* object) {
  Character_BrainSettings* _this = reinterpret_cast< Character_BrainSettings* >(object);
  (void)_this;
}
void Character_BrainSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainSettings& Character_BrainSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainSettings_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && conversation_config_ != nullptr) {
    delete conversation_config_;
  }
  conversation_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_conversation_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
  if (this->has_conversation_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::conversation_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings)
  return target;
}

size_t Character_BrainSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
  if (this->has_conversation_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conversation_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainSettings)
    MergeFrom(*source);
  }
}

void Character_BrainSettings::MergeFrom(const Character_BrainSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conversation_config()) {
    _internal_mutable_conversation_config()->::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig::MergeFrom(from._internal_conversation_config());
  }
}

void Character_BrainSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainSettings::CopyFrom(const Character_BrainSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings::IsInitialized() const {
  return true;
}

void Character_BrainSettings::InternalSwap(Character_BrainSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(conversation_config_, other->conversation_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainTrigger::_Internal {
 public:
};

Character_BrainTrigger::Character_BrainTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
}
Character_BrainTrigger::Character_BrainTrigger(const Character_BrainTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  trigger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trigger().empty()) {
    trigger_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trigger(), 
      GetArena());
  }
  situation_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_situation_description().empty()) {
    situation_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_situation_description(), 
      GetArena());
  }
  start_conversation_ = from.start_conversation_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
}

void Character_BrainTrigger::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_BrainTrigger_characters_2eproto.base);
  trigger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  situation_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_conversation_ = false;
}

Character_BrainTrigger::~Character_BrainTrigger() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  trigger_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  situation_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Character_BrainTrigger::ArenaDtor(void* object) {
  Character_BrainTrigger* _this = reinterpret_cast< Character_BrainTrigger* >(object);
  (void)_this;
}
void Character_BrainTrigger::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainTrigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainTrigger& Character_BrainTrigger::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainTrigger_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trigger_.ClearToEmpty();
  situation_description_.ClearToEmpty();
  start_conversation_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainTrigger::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string trigger = 1 [(.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_trigger();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.BrainTrigger.trigger"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string situation_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_situation_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.BrainTrigger.situation_description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool start_conversation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          start_conversation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainTrigger::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (this->trigger().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger().data(), static_cast<int>(this->_internal_trigger().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.BrainTrigger.trigger");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_trigger(), target);
  }

  // string situation_description = 2;
  if (this->situation_description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_situation_description().data(), static_cast<int>(this->_internal_situation_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.BrainTrigger.situation_description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_situation_description(), target);
  }

  // bool start_conversation = 3;
  if (this->start_conversation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_start_conversation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  return target;
}

size_t Character_BrainTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (this->trigger().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger());
  }

  // string situation_description = 2;
  if (this->situation_description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_situation_description());
  }

  // bool start_conversation = 3;
  if (this->start_conversation() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainTrigger::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainTrigger* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainTrigger>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainTrigger)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainTrigger)
    MergeFrom(*source);
  }
}

void Character_BrainTrigger::MergeFrom(const Character_BrainTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trigger().size() > 0) {
    _internal_set_trigger(from._internal_trigger());
  }
  if (from.situation_description().size() > 0) {
    _internal_set_situation_description(from._internal_situation_description());
  }
  if (from.start_conversation() != 0) {
    _internal_set_start_conversation(from._internal_start_conversation());
  }
}

void Character_BrainTrigger::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainTrigger::CopyFrom(const Character_BrainTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainTrigger::IsInitialized() const {
  return true;
}

void Character_BrainTrigger::InternalSwap(Character_BrainTrigger* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  trigger_.Swap(&other->trigger_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  situation_description_.Swap(&other->situation_description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(start_conversation_, other->start_conversation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainTrigger::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_CharacterAssets::_Internal {
 public:
  static const ::ai::inworld::voices::Voice& voice(const Character_CharacterAssets* msg);
};

const ::ai::inworld::voices::Voice&
Character_CharacterAssets::_Internal::voice(const Character_CharacterAssets* msg) {
  return *msg->voice_;
}
void Character_CharacterAssets::clear_voice() {
  if (GetArena() == nullptr && voice_ != nullptr) {
    delete voice_;
  }
  voice_ = nullptr;
}
Character_CharacterAssets::Character_CharacterAssets(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
}
Character_CharacterAssets::Character_CharacterAssets(const Character_CharacterAssets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_model_uri().empty()) {
    rpm_model_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_model_uri(), 
      GetArena());
  }
  rpm_image_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri().empty()) {
    rpm_image_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri(), 
      GetArena());
  }
  rpm_image_uri_portrait_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    rpm_image_uri_portrait_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri_portrait(), 
      GetArena());
  }
  rpm_image_uri_posture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri_posture().empty()) {
    rpm_image_uri_posture_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri_posture(), 
      GetArena());
  }
  if (from._internal_has_voice()) {
    voice_ = new ::ai::inworld::voices::Voice(*from.voice_);
  } else {
    voice_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
}

void Character_CharacterAssets::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_CharacterAssets_characters_2eproto.base);
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_portrait_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_posture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  voice_ = nullptr;
}

Character_CharacterAssets::~Character_CharacterAssets() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterAssets::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rpm_model_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_portrait_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_posture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete voice_;
}

void Character_CharacterAssets::ArenaDtor(void* object) {
  Character_CharacterAssets* _this = reinterpret_cast< Character_CharacterAssets* >(object);
  (void)_this;
}
void Character_CharacterAssets::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterAssets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterAssets& Character_CharacterAssets::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterAssets_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterAssets::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rpm_model_uri_.ClearToEmpty();
  rpm_image_uri_.ClearToEmpty();
  rpm_image_uri_portrait_.ClearToEmpty();
  rpm_image_uri_posture_.ClearToEmpty();
  if (GetArena() == nullptr && voice_ != nullptr) {
    delete voice_;
  }
  voice_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterAssets::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_model_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_rpm_image_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_rpm_image_uri_portrait();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_portrait"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_rpm_image_uri_posture();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_posture"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.voices.Voice voice = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_voice(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterAssets::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_model_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_model_uri(), target);
  }

  // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri().data(), static_cast<int>(this->_internal_rpm_image_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rpm_image_uri(), target);
  }

  // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_portrait().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_portrait().data(), static_cast<int>(this->_internal_rpm_image_uri_portrait().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_portrait");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_rpm_image_uri_portrait(), target);
  }

  // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_posture().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_posture().data(), static_cast<int>(this->_internal_rpm_image_uri_posture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_posture");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_rpm_image_uri_posture(), target);
  }

  // .ai.inworld.voices.Voice voice = 6;
  if (this->has_voice()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::voice(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  return target;
}

size_t Character_CharacterAssets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_model_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri());
  }

  // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_portrait().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_portrait());
  }

  // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_posture().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_posture());
  }

  // .ai.inworld.voices.Voice voice = 6;
  if (this->has_voice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *voice_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterAssets::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterAssets* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterAssets>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterAssets)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterAssets)
    MergeFrom(*source);
  }
}

void Character_CharacterAssets::MergeFrom(const Character_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rpm_model_uri().size() > 0) {
    _internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
  if (from.rpm_image_uri().size() > 0) {
    _internal_set_rpm_image_uri(from._internal_rpm_image_uri());
  }
  if (from.rpm_image_uri_portrait().size() > 0) {
    _internal_set_rpm_image_uri_portrait(from._internal_rpm_image_uri_portrait());
  }
  if (from.rpm_image_uri_posture().size() > 0) {
    _internal_set_rpm_image_uri_posture(from._internal_rpm_image_uri_posture());
  }
  if (from.has_voice()) {
    _internal_mutable_voice()->::ai::inworld::voices::Voice::MergeFrom(from._internal_voice());
  }
}

void Character_CharacterAssets::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterAssets::CopyFrom(const Character_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterAssets::IsInitialized() const {
  return true;
}

void Character_CharacterAssets::InternalSwap(Character_CharacterAssets* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rpm_model_uri_.Swap(&other->rpm_model_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_.Swap(&other->rpm_image_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_portrait_.Swap(&other->rpm_image_uri_portrait_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_posture_.Swap(&other->rpm_image_uri_posture_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(voice_, other->voice_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterAssets::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_CharacterInitialMood::_Internal {
 public:
};

Character_CharacterInitialMood::Character_CharacterInitialMood(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
}
Character_CharacterInitialMood::Character_CharacterInitialMood(const Character_CharacterInitialMood& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&joy_, &from.joy_,
    static_cast<size_t>(reinterpret_cast<char*>(&surprise_) -
    reinterpret_cast<char*>(&joy_)) + sizeof(surprise_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
}

void Character_CharacterInitialMood::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&joy_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&surprise_) -
      reinterpret_cast<char*>(&joy_)) + sizeof(surprise_));
}

Character_CharacterInitialMood::~Character_CharacterInitialMood() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterInitialMood::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_CharacterInitialMood::ArenaDtor(void* object) {
  Character_CharacterInitialMood* _this = reinterpret_cast< Character_CharacterInitialMood* >(object);
  (void)_this;
}
void Character_CharacterInitialMood::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterInitialMood::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterInitialMood& Character_CharacterInitialMood::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterInitialMood_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterInitialMood::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&joy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&surprise_) -
      reinterpret_cast<char*>(&joy_)) + sizeof(surprise_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterInitialMood::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 joy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          joy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 fear = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          fear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 trust = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          trust_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 surprise = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          surprise_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterInitialMood::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 joy = 1;
  if (this->joy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_joy(), target);
  }

  // int32 fear = 2;
  if (this->fear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_fear(), target);
  }

  // int32 trust = 3;
  if (this->trust() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_trust(), target);
  }

  // int32 surprise = 4;
  if (this->surprise() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_surprise(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  return target;
}

size_t Character_CharacterInitialMood::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 joy = 1;
  if (this->joy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_joy());
  }

  // int32 fear = 2;
  if (this->fear() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fear());
  }

  // int32 trust = 3;
  if (this->trust() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_trust());
  }

  // int32 surprise = 4;
  if (this->surprise() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_surprise());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterInitialMood::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterInitialMood* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterInitialMood>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
    MergeFrom(*source);
  }
}

void Character_CharacterInitialMood::MergeFrom(const Character_CharacterInitialMood& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.joy() != 0) {
    _internal_set_joy(from._internal_joy());
  }
  if (from.fear() != 0) {
    _internal_set_fear(from._internal_fear());
  }
  if (from.trust() != 0) {
    _internal_set_trust(from._internal_trust());
  }
  if (from.surprise() != 0) {
    _internal_set_surprise(from._internal_surprise());
  }
}

void Character_CharacterInitialMood::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterInitialMood::CopyFrom(const Character_CharacterInitialMood& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterInitialMood::IsInitialized() const {
  return true;
}

void Character_CharacterInitialMood::InternalSwap(Character_CharacterInitialMood* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterInitialMood, surprise_)
      + sizeof(Character_CharacterInitialMood::surprise_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterInitialMood, joy_)>(
          reinterpret_cast<char*>(&joy_),
          reinterpret_cast<char*>(&other->joy_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterInitialMood::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_CharacterPersonality::_Internal {
 public:
};

Character_CharacterPersonality::Character_CharacterPersonality(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
}
Character_CharacterPersonality::Character_CharacterPersonality(const Character_CharacterPersonality& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&positive_, &from.positive_,
    static_cast<size_t>(reinterpret_cast<char*>(&extravert_) -
    reinterpret_cast<char*>(&positive_)) + sizeof(extravert_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
}

void Character_CharacterPersonality::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&positive_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&extravert_) -
      reinterpret_cast<char*>(&positive_)) + sizeof(extravert_));
}

Character_CharacterPersonality::~Character_CharacterPersonality() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterPersonality::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_CharacterPersonality::ArenaDtor(void* object) {
  Character_CharacterPersonality* _this = reinterpret_cast< Character_CharacterPersonality* >(object);
  (void)_this;
}
void Character_CharacterPersonality::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterPersonality::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterPersonality& Character_CharacterPersonality::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterPersonality_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterPersonality::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&positive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extravert_) -
      reinterpret_cast<char*>(&positive_)) + sizeof(extravert_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterPersonality::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 positive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          positive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 peaceful = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          peaceful_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 open = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          open_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 extravert = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          extravert_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterPersonality::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 positive = 1;
  if (this->positive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_positive(), target);
  }

  // int32 peaceful = 2;
  if (this->peaceful() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_peaceful(), target);
  }

  // int32 open = 3;
  if (this->open() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_open(), target);
  }

  // int32 extravert = 4;
  if (this->extravert() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_extravert(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  return target;
}

size_t Character_CharacterPersonality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 positive = 1;
  if (this->positive() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_positive());
  }

  // int32 peaceful = 2;
  if (this->peaceful() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_peaceful());
  }

  // int32 open = 3;
  if (this->open() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_open());
  }

  // int32 extravert = 4;
  if (this->extravert() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_extravert());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterPersonality::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterPersonality* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterPersonality>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
    MergeFrom(*source);
  }
}

void Character_CharacterPersonality::MergeFrom(const Character_CharacterPersonality& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.positive() != 0) {
    _internal_set_positive(from._internal_positive());
  }
  if (from.peaceful() != 0) {
    _internal_set_peaceful(from._internal_peaceful());
  }
  if (from.open() != 0) {
    _internal_set_open(from._internal_open());
  }
  if (from.extravert() != 0) {
    _internal_set_extravert(from._internal_extravert());
  }
}

void Character_CharacterPersonality::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterPersonality::CopyFrom(const Character_CharacterPersonality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterPersonality::IsInitialized() const {
  return true;
}

void Character_CharacterPersonality::InternalSwap(Character_CharacterPersonality* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterPersonality, extravert_)
      + sizeof(Character_CharacterPersonality::extravert_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterPersonality, positive_)>(
          reinterpret_cast<char*>(&positive_),
          reinterpret_cast<char*>(&other->positive_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterPersonality::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_Fact::_Internal {
 public:
};

Character_Fact::Character_Fact(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  text_(arena),
  tags_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.Fact)
}
Character_Fact::Character_Fact(const Character_Fact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      text_(from.text_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.Fact)
}

void Character_Fact::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_Fact_characters_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Character_Fact::~Character_Fact() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.Fact)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_Fact::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Character_Fact::ArenaDtor(void* object) {
  Character_Fact* _this = reinterpret_cast< Character_Fact* >(object);
  (void)_this;
}
void Character_Fact::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_Fact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_Fact& Character_Fact::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_Fact_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_Fact::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.Fact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.Clear();
  tags_.Clear();
  uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_Fact::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.Fact.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_text();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.Fact.text"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_tags(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_tags(static_cast<::ai::inworld::studio::v1alpha::Character_Tag>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_Fact::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.Fact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.Fact.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // repeated string text = 2;
  for (int i = 0, n = this->_internal_text_size(); i < n; i++) {
    const auto& s = this->_internal_text(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.Fact.text");
    target = stream->WriteString(2, s, target);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
  {
    int byte_size = _tags_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, tags_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.Fact)
  return target;
}

size_t Character_Fact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.Fact)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string text = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(text_.size());
  for (int i = 0, n = text_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      text_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_tags_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_tags(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _tags_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_Fact::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_Fact* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_Fact>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.Fact)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.Fact)
    MergeFrom(*source);
  }
}

void Character_Fact::MergeFrom(const Character_Fact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  text_.MergeFrom(from.text_);
  tags_.MergeFrom(from.tags_);
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
}

void Character_Fact::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_Fact::CopyFrom(const Character_Fact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_Fact::IsInitialized() const {
  return true;
}

void Character_Fact::InternalSwap(Character_Fact* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.InternalSwap(&other->text_);
  tags_.InternalSwap(&other->tags_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_Fact::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_Meta::_Internal {
 public:
};

Character_Meta::Character_Meta(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.Meta)
}
Character_Meta::Character_Meta(const Character_Meta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_triggers_, &from.total_triggers_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_common_knowledge_) -
    reinterpret_cast<char*>(&total_triggers_)) + sizeof(total_common_knowledge_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.Meta)
}

void Character_Meta::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&total_triggers_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&total_common_knowledge_) -
      reinterpret_cast<char*>(&total_triggers_)) + sizeof(total_common_knowledge_));
}

Character_Meta::~Character_Meta() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.Meta)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_Meta::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_Meta::ArenaDtor(void* object) {
  Character_Meta* _this = reinterpret_cast< Character_Meta* >(object);
  (void)_this;
}
void Character_Meta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_Meta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_Meta& Character_Meta::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_Meta_characters_2eproto.base);
  return *internal_default_instance();
}


void Character_Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.Meta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&total_triggers_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_common_knowledge_) -
      reinterpret_cast<char*>(&total_triggers_)) + sizeof(total_common_knowledge_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_Meta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 total_triggers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          total_triggers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total_common_knowledge = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          total_common_knowledge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_Meta::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.Meta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->total_triggers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_total_triggers(), target);
  }

  // int32 total_common_knowledge = 2;
  if (this->total_common_knowledge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_common_knowledge(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.Meta)
  return target;
}

size_t Character_Meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.Meta)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->total_triggers() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_triggers());
  }

  // int32 total_common_knowledge = 2;
  if (this->total_common_knowledge() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_common_knowledge());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_Meta::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_Meta* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_Meta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.Meta)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.Meta)
    MergeFrom(*source);
  }
}

void Character_Meta::MergeFrom(const Character_Meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.total_triggers() != 0) {
    _internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from.total_common_knowledge() != 0) {
    _internal_set_total_common_knowledge(from._internal_total_common_knowledge());
  }
}

void Character_Meta::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_Meta::CopyFrom(const Character_Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_Meta::IsInitialized() const {
  return true;
}

void Character_Meta::InternalSwap(Character_Meta* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_Meta, total_common_knowledge_)
      + sizeof(Character_Meta::total_common_knowledge_)
      - PROTOBUF_FIELD_OFFSET(Character_Meta, total_triggers_)>(
          reinterpret_cast<char*>(&total_triggers_),
          reinterpret_cast<char*>(&other->total_triggers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_Meta::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_CharacterDescription& default_character_description(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings& brain_settings(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterAssets& default_character_assets(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood& initial_mood(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterPersonality& personality(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_Meta& meta(const Character* msg);
};

const ::ai::inworld::studio::v1alpha::Character_CharacterDescription&
Character::_Internal::default_character_description(const Character* msg) {
  return *msg->default_character_description_;
}
const ::ai::inworld::studio::v1alpha::Character_BrainSettings&
Character::_Internal::brain_settings(const Character* msg) {
  return *msg->brain_settings_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterAssets&
Character::_Internal::default_character_assets(const Character* msg) {
  return *msg->default_character_assets_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood&
Character::_Internal::initial_mood(const Character* msg) {
  return *msg->initial_mood_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterPersonality&
Character::_Internal::personality(const Character* msg) {
  return *msg->personality_;
}
const ::ai::inworld::studio::v1alpha::Character_Meta&
Character::_Internal::meta(const Character* msg) {
  return *msg->meta_;
}
void Character::clear_scenes() {
  scenes_.Clear();
}
void Character::clear_behavioral_contexts() {
  behavioral_contexts_.Clear();
}
Character::Character(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  brain_triggers_(arena),
  common_knowledges_(arena),
  scenes_(arena),
  facts_(arena),
  behavioral_contexts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character)
}
Character::Character(const Character& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      brain_triggers_(from.brain_triggers_),
      common_knowledges_(from.common_knowledges_),
      scenes_(from.scenes_),
      facts_(from.facts_),
      behavioral_contexts_(from.behavioral_contexts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_language_code().empty()) {
    language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_language_code(), 
      GetArena());
  }
  if (from._internal_has_default_character_description()) {
    default_character_description_ = new ::ai::inworld::studio::v1alpha::Character_CharacterDescription(*from.default_character_description_);
  } else {
    default_character_description_ = nullptr;
  }
  if (from._internal_has_brain_settings()) {
    brain_settings_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings(*from.brain_settings_);
  } else {
    brain_settings_ = nullptr;
  }
  if (from._internal_has_default_character_assets()) {
    default_character_assets_ = new ::ai::inworld::studio::v1alpha::Character_CharacterAssets(*from.default_character_assets_);
  } else {
    default_character_assets_ = nullptr;
  }
  if (from._internal_has_initial_mood()) {
    initial_mood_ = new ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood(*from.initial_mood_);
  } else {
    initial_mood_ = nullptr;
  }
  if (from._internal_has_personality()) {
    personality_ = new ::ai::inworld::studio::v1alpha::Character_CharacterPersonality(*from.personality_);
  } else {
    personality_ = nullptr;
  }
  if (from._internal_has_meta()) {
    meta_ = new ::ai::inworld::studio::v1alpha::Character_Meta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  ::memcpy(&social_rank_, &from.social_rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&emotional_fluidity_) -
    reinterpret_cast<char*>(&social_rank_)) + sizeof(emotional_fluidity_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character)
}

void Character::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&default_character_description_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&emotional_fluidity_) -
      reinterpret_cast<char*>(&default_character_description_)) + sizeof(emotional_fluidity_));
}

Character::~Character() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_character_description_;
  if (this != internal_default_instance()) delete brain_settings_;
  if (this != internal_default_instance()) delete default_character_assets_;
  if (this != internal_default_instance()) delete initial_mood_;
  if (this != internal_default_instance()) delete personality_;
  if (this != internal_default_instance()) delete meta_;
}

void Character::ArenaDtor(void* object) {
  Character* _this = reinterpret_cast< Character* >(object);
  (void)_this;
}
void Character::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character& Character::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_characters_2eproto.base);
  return *internal_default_instance();
}


void Character::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  brain_triggers_.Clear();
  common_knowledges_.Clear();
  scenes_.Clear();
  facts_.Clear();
  behavioral_contexts_.Clear();
  name_.ClearToEmpty();
  language_code_.ClearToEmpty();
  if (GetArena() == nullptr && default_character_description_ != nullptr) {
    delete default_character_description_;
  }
  default_character_description_ = nullptr;
  if (GetArena() == nullptr && brain_settings_ != nullptr) {
    delete brain_settings_;
  }
  brain_settings_ = nullptr;
  if (GetArena() == nullptr && default_character_assets_ != nullptr) {
    delete default_character_assets_;
  }
  default_character_assets_ = nullptr;
  if (GetArena() == nullptr && initial_mood_ != nullptr) {
    delete initial_mood_;
  }
  initial_mood_ = nullptr;
  if (GetArena() == nullptr && personality_ != nullptr) {
    delete personality_;
  }
  personality_ = nullptr;
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  ::memset(&social_rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&emotional_fluidity_) -
      reinterpret_cast<char*>(&social_rank_)) + sizeof(emotional_fluidity_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string language_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_language_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.language_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_description(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_brain_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_brain_triggers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_assets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_mood(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_personality(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string common_knowledges = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_common_knowledges();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.common_knowledges"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // float social_rank = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          social_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scenes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_facts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_behavioral_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float emotional_fluidity = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141)) {
          emotional_fluidity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.language_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_language_code(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
  if (this->has_default_character_description()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_character_description(this), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
  if (this->has_brain_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::brain_settings(this), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_brain_triggers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_brain_triggers(i), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
  if (this->has_default_character_assets()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default_character_assets(this), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
  if (this->has_initial_mood()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::initial_mood(this), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
  if (this->has_personality()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::personality(this), target, stream);
  }

  // repeated string common_knowledges = 11;
  for (int i = 0, n = this->_internal_common_knowledges_size(); i < n; i++) {
    const auto& s = this->_internal_common_knowledges(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.common_knowledges");
    target = stream->WriteString(11, s, target);
  }

  // float social_rank = 12;
  if (!(this->social_rank() <= 0 && this->social_rank() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_social_rank(), target);
  }

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_scenes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_scenes(i), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_facts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, this->_internal_facts(i), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_behavioral_contexts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, this->_internal_behavioral_contexts(i), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::meta(this), target, stream);
  }

  // float emotional_fluidity = 17;
  if (!(this->emotional_fluidity() <= 0 && this->emotional_fluidity() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(17, this->_internal_emotional_fluidity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character)
  return target;
}

size_t Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
  total_size += 1UL * this->_internal_brain_triggers_size();
  for (const auto& msg : this->brain_triggers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string common_knowledges = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(common_knowledges_.size());
  for (int i = 0, n = common_knowledges_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      common_knowledges_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
  total_size += 1UL * this->_internal_scenes_size();
  for (const auto& msg : this->scenes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
  total_size += 1UL * this->_internal_facts_size();
  for (const auto& msg : this->facts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
  total_size += 1UL * this->_internal_behavioral_contexts_size();
  for (const auto& msg : this->behavioral_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
  if (this->has_default_character_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *default_character_description_);
  }

  // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
  if (this->has_brain_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *brain_settings_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
  if (this->has_default_character_assets()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *default_character_assets_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
  if (this->has_initial_mood()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *initial_mood_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
  if (this->has_personality()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *personality_);
  }

  // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_meta()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // float social_rank = 12;
  if (!(this->social_rank() <= 0 && this->social_rank() >= 0)) {
    total_size += 1 + 4;
  }

  // float emotional_fluidity = 17;
  if (!(this->emotional_fluidity() <= 0 && this->emotional_fluidity() >= 0)) {
    total_size += 2 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character)
  GOOGLE_DCHECK_NE(&from, this);
  const Character* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character)
    MergeFrom(*source);
  }
}

void Character::MergeFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  brain_triggers_.MergeFrom(from.brain_triggers_);
  common_knowledges_.MergeFrom(from.common_knowledges_);
  scenes_.MergeFrom(from.scenes_);
  facts_.MergeFrom(from.facts_);
  behavioral_contexts_.MergeFrom(from.behavioral_contexts_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.language_code().size() > 0) {
    _internal_set_language_code(from._internal_language_code());
  }
  if (from.has_default_character_description()) {
    _internal_mutable_default_character_description()->::ai::inworld::studio::v1alpha::Character_CharacterDescription::MergeFrom(from._internal_default_character_description());
  }
  if (from.has_brain_settings()) {
    _internal_mutable_brain_settings()->::ai::inworld::studio::v1alpha::Character_BrainSettings::MergeFrom(from._internal_brain_settings());
  }
  if (from.has_default_character_assets()) {
    _internal_mutable_default_character_assets()->::ai::inworld::studio::v1alpha::Character_CharacterAssets::MergeFrom(from._internal_default_character_assets());
  }
  if (from.has_initial_mood()) {
    _internal_mutable_initial_mood()->::ai::inworld::studio::v1alpha::Character_CharacterInitialMood::MergeFrom(from._internal_initial_mood());
  }
  if (from.has_personality()) {
    _internal_mutable_personality()->::ai::inworld::studio::v1alpha::Character_CharacterPersonality::MergeFrom(from._internal_personality());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::ai::inworld::studio::v1alpha::Character_Meta::MergeFrom(from._internal_meta());
  }
  if (!(from.social_rank() <= 0 && from.social_rank() >= 0)) {
    _internal_set_social_rank(from._internal_social_rank());
  }
  if (!(from.emotional_fluidity() <= 0 && from.emotional_fluidity() >= 0)) {
    _internal_set_emotional_fluidity(from._internal_emotional_fluidity());
  }
}

void Character::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character::CopyFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character::IsInitialized() const {
  return true;
}

void Character::InternalSwap(Character* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  brain_triggers_.InternalSwap(&other->brain_triggers_);
  common_knowledges_.InternalSwap(&other->common_knowledges_);
  scenes_.InternalSwap(&other->scenes_);
  facts_.InternalSwap(&other->facts_);
  behavioral_contexts_.InternalSwap(&other->behavioral_contexts_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  language_code_.Swap(&other->language_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character, emotional_fluidity_)
      + sizeof(Character::emotional_fluidity_)
      - PROTOBUF_FIELD_OFFSET(Character, default_character_description_)>(
          reinterpret_cast<char*>(&default_character_description_),
          reinterpret_cast<char*>(&other->default_character_description_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCharacterRequest::_Internal {
 public:
};

GetCharacterRequest::GetCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
}
GetCharacterRequest::GetCharacterRequest(const GetCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
}

void GetCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCharacterRequest_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
}

GetCharacterRequest::~GetCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCharacterRequest::ArenaDtor(void* object) {
  GetCharacterRequest* _this = reinterpret_cast< GetCharacterRequest* >(object);
  (void)_this;
}
void GetCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterRequest& GetCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  view_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterItemView>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
  if (this->view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterRequest)
  return target;
}

size_t GetCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_view());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.GetCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.GetCharacterRequest)
    MergeFrom(*source);
  }
}

void GetCharacterRequest::MergeFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.view() != 0) {
    _internal_set_view(from._internal_view());
  }
}

void GetCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterRequest::CopyFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterRequest::IsInitialized() const {
  return true;
}

void GetCharacterRequest::InternalSwap(GetCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(view_, other->view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCharacterAdvancedSettingsRequest::_Internal {
 public:
};

GetCharacterAdvancedSettingsRequest::GetCharacterAdvancedSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
}
GetCharacterAdvancedSettingsRequest::GetCharacterAdvancedSettingsRequest(const GetCharacterAdvancedSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
}

void GetCharacterAdvancedSettingsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCharacterAdvancedSettingsRequest_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCharacterAdvancedSettingsRequest::~GetCharacterAdvancedSettingsRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCharacterAdvancedSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCharacterAdvancedSettingsRequest::ArenaDtor(void* object) {
  GetCharacterAdvancedSettingsRequest* _this = reinterpret_cast< GetCharacterAdvancedSettingsRequest* >(object);
  (void)_this;
}
void GetCharacterAdvancedSettingsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCharacterAdvancedSettingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterAdvancedSettingsRequest& GetCharacterAdvancedSettingsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterAdvancedSettingsRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterAdvancedSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterAdvancedSettingsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterAdvancedSettingsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  return target;
}

size_t GetCharacterAdvancedSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterAdvancedSettingsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterAdvancedSettingsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterAdvancedSettingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
    MergeFrom(*source);
  }
}

void GetCharacterAdvancedSettingsRequest::MergeFrom(const GetCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetCharacterAdvancedSettingsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterAdvancedSettingsRequest::CopyFrom(const GetCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterAdvancedSettingsRequest::IsInitialized() const {
  return true;
}

void GetCharacterAdvancedSettingsRequest::InternalSwap(GetCharacterAdvancedSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterAdvancedSettingsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateCharacterAdvancedSettingsRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings& character_advanced_settings(const UpdateCharacterAdvancedSettingsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateCharacterAdvancedSettingsRequest* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings&
UpdateCharacterAdvancedSettingsRequest::_Internal::character_advanced_settings(const UpdateCharacterAdvancedSettingsRequest* msg) {
  return *msg->character_advanced_settings_;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateCharacterAdvancedSettingsRequest::_Internal::update_mask(const UpdateCharacterAdvancedSettingsRequest* msg) {
  return *msg->update_mask_;
}
void UpdateCharacterAdvancedSettingsRequest::clear_update_mask() {
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateCharacterAdvancedSettingsRequest::UpdateCharacterAdvancedSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
}
UpdateCharacterAdvancedSettingsRequest::UpdateCharacterAdvancedSettingsRequest(const UpdateCharacterAdvancedSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character_advanced_settings()) {
    character_advanced_settings_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings(*from.character_advanced_settings_);
  } else {
    character_advanced_settings_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
}

void UpdateCharacterAdvancedSettingsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCharacterAdvancedSettingsRequest_characters_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&character_advanced_settings_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&character_advanced_settings_)) + sizeof(update_mask_));
}

UpdateCharacterAdvancedSettingsRequest::~UpdateCharacterAdvancedSettingsRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCharacterAdvancedSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete character_advanced_settings_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateCharacterAdvancedSettingsRequest::ArenaDtor(void* object) {
  UpdateCharacterAdvancedSettingsRequest* _this = reinterpret_cast< UpdateCharacterAdvancedSettingsRequest* >(object);
  (void)_this;
}
void UpdateCharacterAdvancedSettingsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCharacterAdvancedSettingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCharacterAdvancedSettingsRequest& UpdateCharacterAdvancedSettingsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCharacterAdvancedSettingsRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void UpdateCharacterAdvancedSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && character_advanced_settings_ != nullptr) {
    delete character_advanced_settings_;
  }
  character_advanced_settings_ = nullptr;
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCharacterAdvancedSettingsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_advanced_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCharacterAdvancedSettingsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character_advanced_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::character_advanced_settings(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  return target;
}

size_t UpdateCharacterAdvancedSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character_advanced_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *character_advanced_settings_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCharacterAdvancedSettingsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCharacterAdvancedSettingsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCharacterAdvancedSettingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
    MergeFrom(*source);
  }
}

void UpdateCharacterAdvancedSettingsRequest::MergeFrom(const UpdateCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_character_advanced_settings()) {
    _internal_mutable_character_advanced_settings()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings::MergeFrom(from._internal_character_advanced_settings());
  }
  if (from.has_update_mask()) {
    _internal_mutable_update_mask()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
}

void UpdateCharacterAdvancedSettingsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCharacterAdvancedSettingsRequest::CopyFrom(const UpdateCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCharacterAdvancedSettingsRequest::IsInitialized() const {
  return true;
}

void UpdateCharacterAdvancedSettingsRequest::InternalSwap(UpdateCharacterAdvancedSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCharacterAdvancedSettingsRequest, update_mask_)
      + sizeof(UpdateCharacterAdvancedSettingsRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateCharacterAdvancedSettingsRequest, character_advanced_settings_)>(
          reinterpret_cast<char*>(&character_advanced_settings_),
          reinterpret_cast<char*>(&other->character_advanced_settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCharacterAdvancedSettingsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListCharactersRequest::_Internal {
 public:
};

ListCharactersRequest::ListCharactersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
}
ListCharactersRequest::ListCharactersRequest(const ListCharactersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArena());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArena());
  }
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter().empty()) {
    filter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filter(), 
      GetArena());
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&view_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(view_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
}

void ListCharactersRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCharactersRequest_characters_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&view_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(view_));
}

ListCharactersRequest::~ListCharactersRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCharactersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCharactersRequest::ArenaDtor(void* object) {
  ListCharactersRequest* _this = reinterpret_cast< ListCharactersRequest* >(object);
  (void)_this;
}
void ListCharactersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCharactersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCharactersRequest& ListCharactersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCharactersRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void ListCharactersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  filter_.ClearToEmpty();
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&view_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(view_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCharactersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterView view = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterView>(val));
        } else goto handle_unusual;
        continue;
      // string filter = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_filter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.filter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCharactersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterView view = 4;
  if (this->view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_view(), target);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.filter");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListCharactersRequest)
  return target;
}

size_t ListCharactersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  // .ai.inworld.studio.v1alpha.CharacterView view = 4;
  if (this->view() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_view());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCharactersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCharactersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCharactersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListCharactersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListCharactersRequest)
    MergeFrom(*source);
  }
}

void ListCharactersRequest::MergeFrom(const ListCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.filter().size() > 0) {
    _internal_set_filter(from._internal_filter());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  if (from.view() != 0) {
    _internal_set_view(from._internal_view());
  }
}

void ListCharactersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCharactersRequest::CopyFrom(const ListCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCharactersRequest::IsInitialized() const {
  return true;
}

void ListCharactersRequest::InternalSwap(ListCharactersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filter_.Swap(&other->filter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListCharactersRequest, view_)
      + sizeof(ListCharactersRequest::view_)
      - PROTOBUF_FIELD_OFFSET(ListCharactersRequest, page_size_)>(
          reinterpret_cast<char*>(&page_size_),
          reinterpret_cast<char*>(&other->page_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCharactersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateCharacterRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character& character(const CreateCharacterRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Character&
CreateCharacterRequest::_Internal::character(const CreateCharacterRequest* msg) {
  return *msg->character_;
}
CreateCharacterRequest::CreateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
}
CreateCharacterRequest::CreateCharacterRequest(const CreateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArena());
  }
  if (from._internal_has_character()) {
    character_ = new ::ai::inworld::studio::v1alpha::Character(*from.character_);
  } else {
    character_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
}

void CreateCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCharacterRequest_characters_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  character_ = nullptr;
}

CreateCharacterRequest::~CreateCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete character_;
}

void CreateCharacterRequest::ArenaDtor(void* object) {
  CreateCharacterRequest* _this = reinterpret_cast< CreateCharacterRequest* >(object);
  (void)_this;
}
void CreateCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCharacterRequest& CreateCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCharacterRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void CreateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  if (GetArena() == nullptr && character_ != nullptr) {
    delete character_;
  }
  character_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CreateCharacterRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CreateCharacterRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::character(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  return target;
}

size_t CreateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *character_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CreateCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CreateCharacterRequest)
    MergeFrom(*source);
  }
}

void CreateCharacterRequest::MergeFrom(const CreateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.has_character()) {
    _internal_mutable_character()->::ai::inworld::studio::v1alpha::Character::MergeFrom(from._internal_character());
  }
}

void CreateCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCharacterRequest::CopyFrom(const CreateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharacterRequest::IsInitialized() const {
  return true;
}

void CreateCharacterRequest::InternalSwap(CreateCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(character_, other->character_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateCharacterRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character& character(const UpdateCharacterRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateCharacterRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Character&
UpdateCharacterRequest::_Internal::character(const UpdateCharacterRequest* msg) {
  return *msg->character_;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateCharacterRequest::_Internal::update_mask(const UpdateCharacterRequest* msg) {
  return *msg->update_mask_;
}
void UpdateCharacterRequest::clear_update_mask() {
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateCharacterRequest::UpdateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
}
UpdateCharacterRequest::UpdateCharacterRequest(const UpdateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character()) {
    character_ = new ::ai::inworld::studio::v1alpha::Character(*from.character_);
  } else {
    character_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
}

void UpdateCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCharacterRequest_characters_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&character_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&character_)) + sizeof(update_mask_));
}

UpdateCharacterRequest::~UpdateCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete character_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateCharacterRequest::ArenaDtor(void* object) {
  UpdateCharacterRequest* _this = reinterpret_cast< UpdateCharacterRequest* >(object);
  (void)_this;
}
void UpdateCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCharacterRequest& UpdateCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCharacterRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void UpdateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && character_ != nullptr) {
    delete character_;
  }
  character_ = nullptr;
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::character(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  return target;
}

size_t UpdateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *character_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
    MergeFrom(*source);
  }
}

void UpdateCharacterRequest::MergeFrom(const UpdateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_character()) {
    _internal_mutable_character()->::ai::inworld::studio::v1alpha::Character::MergeFrom(from._internal_character());
  }
  if (from.has_update_mask()) {
    _internal_mutable_update_mask()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
}

void UpdateCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCharacterRequest::CopyFrom(const UpdateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCharacterRequest::IsInitialized() const {
  return true;
}

void UpdateCharacterRequest::InternalSwap(UpdateCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, update_mask_)
      + sizeof(UpdateCharacterRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, character_)>(
          reinterpret_cast<char*>(&character_),
          reinterpret_cast<char*>(&other->character_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteCharacterRequest::_Internal {
 public:
};

DeleteCharacterRequest::DeleteCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
}
DeleteCharacterRequest::DeleteCharacterRequest(const DeleteCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
}

void DeleteCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteCharacterRequest_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteCharacterRequest::~DeleteCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCharacterRequest::ArenaDtor(void* object) {
  DeleteCharacterRequest* _this = reinterpret_cast< DeleteCharacterRequest* >(object);
  (void)_this;
}
void DeleteCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCharacterRequest& DeleteCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCharacterRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void DeleteCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeleteCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeleteCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  return target;
}

size_t DeleteCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
    MergeFrom(*source);
  }
}

void DeleteCharacterRequest::MergeFrom(const DeleteCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCharacterRequest::CopyFrom(const DeleteCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCharacterRequest::IsInitialized() const {
  return true;
}

void DeleteCharacterRequest::InternalSwap(DeleteCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeployCharacterRequest::_Internal {
 public:
};

DeployCharacterRequest::DeployCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
}
DeployCharacterRequest::DeployCharacterRequest(const DeployCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
}

void DeployCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeployCharacterRequest_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeployCharacterRequest::~DeployCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeployCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeployCharacterRequest::ArenaDtor(void* object) {
  DeployCharacterRequest* _this = reinterpret_cast< DeployCharacterRequest* >(object);
  (void)_this;
}
void DeployCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeployCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeployCharacterRequest& DeployCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeployCharacterRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void DeployCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeployCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeployCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeployCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  return target;
}

size_t DeployCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeployCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeployCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.DeployCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.DeployCharacterRequest)
    MergeFrom(*source);
  }
}

void DeployCharacterRequest::MergeFrom(const DeployCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeployCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployCharacterRequest::CopyFrom(const DeployCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployCharacterRequest::IsInitialized() const {
  return true;
}

void DeployCharacterRequest::InternalSwap(DeployCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListCharactersResponse::_Internal {
 public:
};

ListCharactersResponse::ListCharactersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  characters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
}
ListCharactersResponse::ListCharactersResponse(const ListCharactersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      characters_(from.characters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
}

void ListCharactersResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCharactersResponse_characters_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListCharactersResponse::~ListCharactersResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCharactersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCharactersResponse::ArenaDtor(void* object) {
  ListCharactersResponse* _this = reinterpret_cast< ListCharactersResponse* >(object);
  (void)_this;
}
void ListCharactersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCharactersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCharactersResponse& ListCharactersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCharactersResponse_characters_2eproto.base);
  return *internal_default_instance();
}


void ListCharactersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characters_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCharactersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCharactersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_characters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_characters(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListCharactersResponse)
  return target;
}

size_t ListCharactersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCharactersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCharactersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCharactersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListCharactersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListCharactersResponse)
    MergeFrom(*source);
  }
}

void ListCharactersResponse::MergeFrom(const ListCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  characters_.MergeFrom(from.characters_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListCharactersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCharactersResponse::CopyFrom(const ListCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCharactersResponse::IsInitialized() const {
  return true;
}

void ListCharactersResponse::InternalSwap(ListCharactersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  characters_.InternalSwap(&other->characters_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCharactersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReplaceCharacterRpmModelRequest::_Internal {
 public:
};

ReplaceCharacterRpmModelRequest::ReplaceCharacterRpmModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
}
ReplaceCharacterRpmModelRequest::ReplaceCharacterRpmModelRequest(const ReplaceCharacterRpmModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character().empty()) {
    character_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character(), 
      GetArena());
  }
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_model_uri().empty()) {
    rpm_model_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_model_uri(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
}

void ReplaceCharacterRpmModelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReplaceCharacterRpmModelRequest_characters_2eproto.base);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReplaceCharacterRpmModelRequest::~ReplaceCharacterRpmModelRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceCharacterRpmModelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_model_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReplaceCharacterRpmModelRequest::ArenaDtor(void* object) {
  ReplaceCharacterRpmModelRequest* _this = reinterpret_cast< ReplaceCharacterRpmModelRequest* >(object);
  (void)_this;
}
void ReplaceCharacterRpmModelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceCharacterRpmModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReplaceCharacterRpmModelRequest& ReplaceCharacterRpmModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReplaceCharacterRpmModelRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void ReplaceCharacterRpmModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_.ClearToEmpty();
  rpm_model_uri_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceCharacterRpmModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.character"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_model_uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.rpm_model_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceCharacterRpmModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (this->character().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // string rpm_model_uri = 2;
  if (this->rpm_model_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_model_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  return target;
}

size_t ReplaceCharacterRpmModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (this->character().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // string rpm_model_uri = 2;
  if (this->rpm_model_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceCharacterRpmModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceCharacterRpmModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceCharacterRpmModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
    MergeFrom(*source);
  }
}

void ReplaceCharacterRpmModelRequest::MergeFrom(const ReplaceCharacterRpmModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character().size() > 0) {
    _internal_set_character(from._internal_character());
  }
  if (from.rpm_model_uri().size() > 0) {
    _internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
}

void ReplaceCharacterRpmModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceCharacterRpmModelRequest::CopyFrom(const ReplaceCharacterRpmModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceCharacterRpmModelRequest::IsInitialized() const {
  return true;
}

void ReplaceCharacterRpmModelRequest::InternalSwap(ReplaceCharacterRpmModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_.Swap(&other->character_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_model_uri_.Swap(&other->rpm_model_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceCharacterRpmModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreviewPromptTemplateRequest::_Internal {
 public:
};

PreviewPromptTemplateRequest::PreviewPromptTemplateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
}
PreviewPromptTemplateRequest::PreviewPromptTemplateRequest(const PreviewPromptTemplateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character().empty()) {
    character_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character(), 
      GetArena());
  }
  template__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_template_().empty()) {
    template__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_template_(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
}

void PreviewPromptTemplateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewPromptTemplateRequest_characters_2eproto.base);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  template__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PreviewPromptTemplateRequest::~PreviewPromptTemplateRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewPromptTemplateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  template__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewPromptTemplateRequest::ArenaDtor(void* object) {
  PreviewPromptTemplateRequest* _this = reinterpret_cast< PreviewPromptTemplateRequest* >(object);
  (void)_this;
}
void PreviewPromptTemplateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewPromptTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewPromptTemplateRequest& PreviewPromptTemplateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewPromptTemplateRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void PreviewPromptTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_.ClearToEmpty();
  template__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewPromptTemplateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.character"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string template = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_template_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.template"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewPromptTemplateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // string template = 2;
  if (this->template_().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_template_().data(), static_cast<int>(this->_internal_template_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.template");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_template_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  return target;
}

size_t PreviewPromptTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // string template = 2;
  if (this->template_().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_template_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewPromptTemplateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewPromptTemplateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewPromptTemplateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
    MergeFrom(*source);
  }
}

void PreviewPromptTemplateRequest::MergeFrom(const PreviewPromptTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character().size() > 0) {
    _internal_set_character(from._internal_character());
  }
  if (from.template_().size() > 0) {
    _internal_set_template_(from._internal_template_());
  }
}

void PreviewPromptTemplateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewPromptTemplateRequest::CopyFrom(const PreviewPromptTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewPromptTemplateRequest::IsInitialized() const {
  return true;
}

void PreviewPromptTemplateRequest::InternalSwap(PreviewPromptTemplateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_.Swap(&other->character_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  template__.Swap(&other->template__, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewPromptTemplateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreviewPromptTempalteResponse::_Internal {
 public:
};

PreviewPromptTempalteResponse::PreviewPromptTempalteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  errors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
}
PreviewPromptTempalteResponse::PreviewPromptTempalteResponse(const PreviewPromptTempalteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prompt().empty()) {
    prompt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prompt(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
}

void PreviewPromptTempalteResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewPromptTempalteResponse_characters_2eproto.base);
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PreviewPromptTempalteResponse::~PreviewPromptTempalteResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewPromptTempalteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  prompt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewPromptTempalteResponse::ArenaDtor(void* object) {
  PreviewPromptTempalteResponse* _this = reinterpret_cast< PreviewPromptTempalteResponse* >(object);
  (void)_this;
}
void PreviewPromptTempalteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewPromptTempalteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewPromptTempalteResponse& PreviewPromptTempalteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewPromptTempalteResponse_characters_2eproto.base);
  return *internal_default_instance();
}


void PreviewPromptTempalteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  prompt_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewPromptTempalteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string prompt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_prompt();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.prompt"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_errors();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.errors"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewPromptTempalteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string prompt = 1;
  if (this->prompt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.prompt");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_prompt(), target);
  }

  // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  for (int i = 0, n = this->_internal_errors_size(); i < n; i++) {
    const auto& s = this->_internal_errors(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.errors");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  return target;
}

size_t PreviewPromptTempalteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(errors_.size());
  for (int i = 0, n = errors_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      errors_.Get(i));
  }

  // string prompt = 1;
  if (this->prompt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewPromptTempalteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewPromptTempalteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewPromptTempalteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
    MergeFrom(*source);
  }
}

void PreviewPromptTempalteResponse::MergeFrom(const PreviewPromptTempalteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.prompt().size() > 0) {
    _internal_set_prompt(from._internal_prompt());
  }
}

void PreviewPromptTempalteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewPromptTempalteResponse::CopyFrom(const PreviewPromptTempalteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewPromptTempalteResponse::IsInitialized() const {
  return true;
}

void PreviewPromptTempalteResponse::InternalSwap(PreviewPromptTempalteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  errors_.InternalSwap(&other->errors_);
  prompt_.Swap(&other->prompt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewPromptTempalteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ShareCharacterRequest::_Internal {
 public:
};

ShareCharacterRequest::ShareCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  external_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
}
ShareCharacterRequest::ShareCharacterRequest(const ShareCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      external_ids_(from.external_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
}

void ShareCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShareCharacterRequest_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShareCharacterRequest::~ShareCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShareCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShareCharacterRequest::ArenaDtor(void* object) {
  ShareCharacterRequest* _this = reinterpret_cast< ShareCharacterRequest* >(object);
  (void)_this;
}
void ShareCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShareCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShareCharacterRequest& ShareCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShareCharacterRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void ShareCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  external_ids_.Clear();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string external_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterRequest.external_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShareCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string external_ids = 2;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterRequest.external_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  return target;
}

size_t ShareCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(external_ids_.size());
  for (int i = 0, n = external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      external_ids_.Get(i));
  }

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShareCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShareCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ShareCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ShareCharacterRequest)
    MergeFrom(*source);
  }
}

void ShareCharacterRequest::MergeFrom(const ShareCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  external_ids_.MergeFrom(from.external_ids_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void ShareCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareCharacterRequest::CopyFrom(const ShareCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareCharacterRequest::IsInitialized() const {
  return true;
}

void ShareCharacterRequest::InternalSwap(ShareCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  external_ids_.InternalSwap(&other->external_ids_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSharedCharactersRequest::_Internal {
 public:
};

ListSharedCharactersRequest::ListSharedCharactersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
}
ListSharedCharactersRequest::ListSharedCharactersRequest(const ListSharedCharactersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArena());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArena());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
}

void ListSharedCharactersRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListSharedCharactersRequest_characters_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListSharedCharactersRequest::~ListSharedCharactersRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSharedCharactersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSharedCharactersRequest::ArenaDtor(void* object) {
  ListSharedCharactersRequest* _this = reinterpret_cast< ListSharedCharactersRequest* >(object);
  (void)_this;
}
void ListSharedCharactersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSharedCharactersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSharedCharactersRequest& ListSharedCharactersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListSharedCharactersRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void ListSharedCharactersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSharedCharactersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSharedCharactersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  return target;
}

size_t ListSharedCharactersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSharedCharactersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSharedCharactersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSharedCharactersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
    MergeFrom(*source);
  }
}

void ListSharedCharactersRequest::MergeFrom(const ListSharedCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListSharedCharactersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSharedCharactersRequest::CopyFrom(const ListSharedCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSharedCharactersRequest::IsInitialized() const {
  return true;
}

void ListSharedCharactersRequest::InternalSwap(ListSharedCharactersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSharedCharactersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSharedCharactersResponse::_Internal {
 public:
};

ListSharedCharactersResponse::ListSharedCharactersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shared_characters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
}
ListSharedCharactersResponse::ListSharedCharactersResponse(const ListSharedCharactersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shared_characters_(from.shared_characters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
}

void ListSharedCharactersResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListSharedCharactersResponse_characters_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListSharedCharactersResponse::~ListSharedCharactersResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSharedCharactersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSharedCharactersResponse::ArenaDtor(void* object) {
  ListSharedCharactersResponse* _this = reinterpret_cast< ListSharedCharactersResponse* >(object);
  (void)_this;
}
void ListSharedCharactersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSharedCharactersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSharedCharactersResponse& ListSharedCharactersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListSharedCharactersResponse_characters_2eproto.base);
  return *internal_default_instance();
}


void ListSharedCharactersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shared_characters_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSharedCharactersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shared_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSharedCharactersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_shared_characters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_shared_characters(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  return target;
}

size_t ListSharedCharactersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
  total_size += 1UL * this->_internal_shared_characters_size();
  for (const auto& msg : this->shared_characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSharedCharactersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSharedCharactersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSharedCharactersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
    MergeFrom(*source);
  }
}

void ListSharedCharactersResponse::MergeFrom(const ListSharedCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shared_characters_.MergeFrom(from.shared_characters_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListSharedCharactersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSharedCharactersResponse::CopyFrom(const ListSharedCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSharedCharactersResponse::IsInitialized() const {
  return true;
}

void ListSharedCharactersResponse::InternalSwap(ListSharedCharactersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shared_characters_.InternalSwap(&other->shared_characters_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSharedCharactersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings_ConversationConfig_EngineSpec::_Internal {
 public:
};

CharacterAdvancedSettings_ConversationConfig_EngineSpec::CharacterAdvancedSettings_ConversationConfig_EngineSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
}
CharacterAdvancedSettings_ConversationConfig_EngineSpec::CharacterAdvancedSettings_ConversationConfig_EngineSpec(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  engine_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_engine().empty()) {
    engine_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_engine(), 
      GetArena());
  }
  ::memcpy(&temperature_, &from.temperature_,
    static_cast<size_t>(reinterpret_cast<char*>(&presence_penalty_) -
    reinterpret_cast<char*>(&temperature_)) + sizeof(presence_penalty_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto.base);
  engine_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&temperature_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&presence_penalty_) -
      reinterpret_cast<char*>(&temperature_)) + sizeof(presence_penalty_));
}

CharacterAdvancedSettings_ConversationConfig_EngineSpec::~CharacterAdvancedSettings_ConversationConfig_EngineSpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  engine_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::ArenaDtor(void* object) {
  CharacterAdvancedSettings_ConversationConfig_EngineSpec* _this = reinterpret_cast< CharacterAdvancedSettings_ConversationConfig_EngineSpec* >(object);
  (void)_this;
}
void CharacterAdvancedSettings_ConversationConfig_EngineSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings_ConversationConfig_EngineSpec& CharacterAdvancedSettings_ConversationConfig_EngineSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_characters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings_ConversationConfig_EngineSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  engine_.ClearToEmpty();
  ::memset(&temperature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&presence_penalty_) -
      reinterpret_cast<char*>(&temperature_)) + sizeof(presence_penalty_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_ConversationConfig_EngineSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string engine = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_engine();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec.engine"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float temperature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 max_tokens = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          max_tokens_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float frequency_penalty = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          frequency_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float presence_penalty = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          presence_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings_ConversationConfig_EngineSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string engine = 1;
  if (this->engine().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_engine().data(), static_cast<int>(this->_internal_engine().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec.engine");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_engine(), target);
  }

  // float temperature = 2;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_temperature(), target);
  }

  // int32 max_tokens = 3;
  if (this->max_tokens() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_max_tokens(), target);
  }

  // float frequency_penalty = 4;
  if (!(this->frequency_penalty() <= 0 && this->frequency_penalty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_frequency_penalty(), target);
  }

  // float presence_penalty = 5;
  if (!(this->presence_penalty() <= 0 && this->presence_penalty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_presence_penalty(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  return target;
}

size_t CharacterAdvancedSettings_ConversationConfig_EngineSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string engine = 1;
  if (this->engine().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_engine());
  }

  // float temperature = 2;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 max_tokens = 3;
  if (this->max_tokens() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_tokens());
  }

  // float frequency_penalty = 4;
  if (!(this->frequency_penalty() <= 0 && this->frequency_penalty() >= 0)) {
    total_size += 1 + 4;
  }

  // float presence_penalty = 5;
  if (!(this->presence_penalty() <= 0 && this->presence_penalty() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings_ConversationConfig_EngineSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings_ConversationConfig_EngineSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeFrom(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.engine().size() > 0) {
    _internal_set_engine(from._internal_engine());
  }
  if (!(from.temperature() <= 0 && from.temperature() >= 0)) {
    _internal_set_temperature(from._internal_temperature());
  }
  if (from.max_tokens() != 0) {
    _internal_set_max_tokens(from._internal_max_tokens());
  }
  if (!(from.frequency_penalty() <= 0 && from.frequency_penalty() >= 0)) {
    _internal_set_frequency_penalty(from._internal_frequency_penalty());
  }
  if (!(from.presence_penalty() <= 0 && from.presence_penalty() >= 0)) {
    _internal_set_presence_penalty(from._internal_presence_penalty());
  }
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::CopyFrom(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_ConversationConfig_EngineSpec::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::InternalSwap(CharacterAdvancedSettings_ConversationConfig_EngineSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  engine_.Swap(&other->engine_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings_ConversationConfig_EngineSpec, presence_penalty_)
      + sizeof(CharacterAdvancedSettings_ConversationConfig_EngineSpec::presence_penalty_)
      - PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings_ConversationConfig_EngineSpec, temperature_)>(
          reinterpret_cast<char*>(&temperature_),
          reinterpret_cast<char*>(&other->temperature_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_ConversationConfig_EngineSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings_ConversationConfig::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec& engine_spec(const CharacterAdvancedSettings_ConversationConfig* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec&
CharacterAdvancedSettings_ConversationConfig::_Internal::engine_spec(const CharacterAdvancedSettings_ConversationConfig* msg) {
  return *msg->engine_spec_;
}
CharacterAdvancedSettings_ConversationConfig::CharacterAdvancedSettings_ConversationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
}
CharacterAdvancedSettings_ConversationConfig::CharacterAdvancedSettings_ConversationConfig(const CharacterAdvancedSettings_ConversationConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_engine_spec()) {
    engine_spec_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec(*from.engine_spec_);
  } else {
    engine_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
}

void CharacterAdvancedSettings_ConversationConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto.base);
  engine_spec_ = nullptr;
}

CharacterAdvancedSettings_ConversationConfig::~CharacterAdvancedSettings_ConversationConfig() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings_ConversationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete engine_spec_;
}

void CharacterAdvancedSettings_ConversationConfig::ArenaDtor(void* object) {
  CharacterAdvancedSettings_ConversationConfig* _this = reinterpret_cast< CharacterAdvancedSettings_ConversationConfig* >(object);
  (void)_this;
}
void CharacterAdvancedSettings_ConversationConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings_ConversationConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings_ConversationConfig& CharacterAdvancedSettings_ConversationConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_ConversationConfig_characters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings_ConversationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && engine_spec_ != nullptr) {
    delete engine_spec_;
  }
  engine_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_ConversationConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_engine_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings_ConversationConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
  if (this->has_engine_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::engine_spec(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  return target;
}

size_t CharacterAdvancedSettings_ConversationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
  if (this->has_engine_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *engine_spec_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings_ConversationConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings_ConversationConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings_ConversationConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings_ConversationConfig::MergeFrom(const CharacterAdvancedSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_engine_spec()) {
    _internal_mutable_engine_spec()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeFrom(from._internal_engine_spec());
  }
}

void CharacterAdvancedSettings_ConversationConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings_ConversationConfig::CopyFrom(const CharacterAdvancedSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_ConversationConfig::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_ConversationConfig::InternalSwap(CharacterAdvancedSettings_ConversationConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(engine_spec_, other->engine_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_ConversationConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings_SafetySpec::_Internal {
 public:
};

CharacterAdvancedSettings_SafetySpec::CharacterAdvancedSettings_SafetySpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  allowed_topics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
}
CharacterAdvancedSettings_SafetySpec::CharacterAdvancedSettings_SafetySpec(const CharacterAdvancedSettings_SafetySpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      allowed_topics_(from.allowed_topics_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
}

void CharacterAdvancedSettings_SafetySpec::SharedCtor() {
}

CharacterAdvancedSettings_SafetySpec::~CharacterAdvancedSettings_SafetySpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings_SafetySpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CharacterAdvancedSettings_SafetySpec::ArenaDtor(void* object) {
  CharacterAdvancedSettings_SafetySpec* _this = reinterpret_cast< CharacterAdvancedSettings_SafetySpec* >(object);
  (void)_this;
}
void CharacterAdvancedSettings_SafetySpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings_SafetySpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings_SafetySpec& CharacterAdvancedSettings_SafetySpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_SafetySpec_characters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings_SafetySpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_topics_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_SafetySpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_allowed_topics(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_allowed_topics(static_cast<::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetyTopicName>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings_SafetySpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
  {
    int byte_size = _allowed_topics_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, allowed_topics_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  return target;
}

size_t CharacterAdvancedSettings_SafetySpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_allowed_topics_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_allowed_topics(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _allowed_topics_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings_SafetySpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings_SafetySpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings_SafetySpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings_SafetySpec::MergeFrom(const CharacterAdvancedSettings_SafetySpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_topics_.MergeFrom(from.allowed_topics_);
}

void CharacterAdvancedSettings_SafetySpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings_SafetySpec::CopyFrom(const CharacterAdvancedSettings_SafetySpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_SafetySpec::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_SafetySpec::InternalSwap(CharacterAdvancedSettings_SafetySpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  allowed_topics_.InternalSwap(&other->allowed_topics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_SafetySpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig& conversation_config(const CharacterAdvancedSettings* msg);
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec& speech_safety_spec(const CharacterAdvancedSettings* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig&
CharacterAdvancedSettings::_Internal::conversation_config(const CharacterAdvancedSettings* msg) {
  return *msg->conversation_config_;
}
const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec&
CharacterAdvancedSettings::_Internal::speech_safety_spec(const CharacterAdvancedSettings* msg) {
  return *msg->speech_safety_spec_;
}
CharacterAdvancedSettings::CharacterAdvancedSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
}
CharacterAdvancedSettings::CharacterAdvancedSettings(const CharacterAdvancedSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  custom_prompt_template_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_prompt_template().empty()) {
    custom_prompt_template_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_prompt_template(), 
      GetArena());
  }
  if (from._internal_has_conversation_config()) {
    conversation_config_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig(*from.conversation_config_);
  } else {
    conversation_config_ = nullptr;
  }
  if (from._internal_has_speech_safety_spec()) {
    speech_safety_spec_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec(*from.speech_safety_spec_);
  } else {
    speech_safety_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
}

void CharacterAdvancedSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterAdvancedSettings_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_prompt_template_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&conversation_config_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&speech_safety_spec_) -
      reinterpret_cast<char*>(&conversation_config_)) + sizeof(speech_safety_spec_));
}

CharacterAdvancedSettings::~CharacterAdvancedSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_prompt_template_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete conversation_config_;
  if (this != internal_default_instance()) delete speech_safety_spec_;
}

void CharacterAdvancedSettings::ArenaDtor(void* object) {
  CharacterAdvancedSettings* _this = reinterpret_cast< CharacterAdvancedSettings* >(object);
  (void)_this;
}
void CharacterAdvancedSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings& CharacterAdvancedSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_characters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  custom_prompt_template_.ClearToEmpty();
  if (GetArena() == nullptr && conversation_config_ != nullptr) {
    delete conversation_config_;
  }
  conversation_config_ = nullptr;
  if (GetArena() == nullptr && speech_safety_spec_ != nullptr) {
    delete speech_safety_spec_;
  }
  speech_safety_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_conversation_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_prompt_template = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_custom_prompt_template();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.custom_prompt_template"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_speech_safety_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
  if (this->has_conversation_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::conversation_config(this), target, stream);
  }

  // string custom_prompt_template = 4;
  if (this->custom_prompt_template().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_prompt_template().data(), static_cast<int>(this->_internal_custom_prompt_template().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.custom_prompt_template");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_custom_prompt_template(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
  if (this->has_speech_safety_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::speech_safety_spec(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  return target;
}

size_t CharacterAdvancedSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string custom_prompt_template = 4;
  if (this->custom_prompt_template().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_prompt_template());
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
  if (this->has_conversation_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conversation_config_);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
  if (this->has_speech_safety_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *speech_safety_spec_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings::MergeFrom(const CharacterAdvancedSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.custom_prompt_template().size() > 0) {
    _internal_set_custom_prompt_template(from._internal_custom_prompt_template());
  }
  if (from.has_conversation_config()) {
    _internal_mutable_conversation_config()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig::MergeFrom(from._internal_conversation_config());
  }
  if (from.has_speech_safety_spec()) {
    _internal_mutable_speech_safety_spec()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec::MergeFrom(from._internal_speech_safety_spec());
  }
}

void CharacterAdvancedSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings::CopyFrom(const CharacterAdvancedSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings::InternalSwap(CharacterAdvancedSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_prompt_template_.Swap(&other->custom_prompt_template_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings, speech_safety_spec_)
      + sizeof(CharacterAdvancedSettings::speech_safety_spec_)
      - PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings, conversation_config_)>(
          reinterpret_cast<char*>(&conversation_config_),
          reinterpret_cast<char*>(&other->conversation_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCharacterShareInfoRequest::_Internal {
 public:
};

GetCharacterShareInfoRequest::GetCharacterShareInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
}
GetCharacterShareInfoRequest::GetCharacterShareInfoRequest(const GetCharacterShareInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
}

void GetCharacterShareInfoRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCharacterShareInfoRequest_characters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCharacterShareInfoRequest::~GetCharacterShareInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCharacterShareInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCharacterShareInfoRequest::ArenaDtor(void* object) {
  GetCharacterShareInfoRequest* _this = reinterpret_cast< GetCharacterShareInfoRequest* >(object);
  (void)_this;
}
void GetCharacterShareInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCharacterShareInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterShareInfoRequest& GetCharacterShareInfoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterShareInfoRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterShareInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterShareInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterShareInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  return target;
}

size_t GetCharacterShareInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterShareInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterShareInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterShareInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
    MergeFrom(*source);
  }
}

void GetCharacterShareInfoRequest::MergeFrom(const GetCharacterShareInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetCharacterShareInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterShareInfoRequest::CopyFrom(const GetCharacterShareInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterShareInfoRequest::IsInitialized() const {
  return true;
}

void GetCharacterShareInfoRequest::InternalSwap(GetCharacterShareInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterShareInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterShareInfo::_Internal {
 public:
};

CharacterShareInfo::CharacterShareInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  external_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
}
CharacterShareInfo::CharacterShareInfo(const CharacterShareInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      external_ids_(from.external_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
}

void CharacterShareInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterShareInfo_characters_2eproto.base);
}

CharacterShareInfo::~CharacterShareInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterShareInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CharacterShareInfo::ArenaDtor(void* object) {
  CharacterShareInfo* _this = reinterpret_cast< CharacterShareInfo* >(object);
  (void)_this;
}
void CharacterShareInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterShareInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterShareInfo& CharacterShareInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterShareInfo_characters_2eproto.base);
  return *internal_default_instance();
}


void CharacterShareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  external_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterShareInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterShareInfo.external_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterShareInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterShareInfo.external_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterShareInfo)
  return target;
}

size_t CharacterShareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(external_ids_.size());
  for (int i = 0, n = external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      external_ids_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterShareInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterShareInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterShareInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterShareInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterShareInfo)
    MergeFrom(*source);
  }
}

void CharacterShareInfo::MergeFrom(const CharacterShareInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  external_ids_.MergeFrom(from.external_ids_);
}

void CharacterShareInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterShareInfo::CopyFrom(const CharacterShareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterShareInfo::IsInitialized() const {
  return true;
}

void CharacterShareInfo::InternalSwap(CharacterShareInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  external_ids_.InternalSwap(&other->external_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterShareInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckDeployInfoRequest::_Internal {
 public:
};

CheckDeployInfoRequest::CheckDeployInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
}
CheckDeployInfoRequest::CheckDeployInfoRequest(const CheckDeployInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character().empty()) {
    character_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
}

void CheckDeployInfoRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckDeployInfoRequest_characters_2eproto.base);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CheckDeployInfoRequest::~CheckDeployInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckDeployInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CheckDeployInfoRequest::ArenaDtor(void* object) {
  CheckDeployInfoRequest* _this = reinterpret_cast< CheckDeployInfoRequest* >(object);
  (void)_this;
}
void CheckDeployInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckDeployInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckDeployInfoRequest& CheckDeployInfoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckDeployInfoRequest_characters_2eproto.base);
  return *internal_default_instance();
}


void CheckDeployInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDeployInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CheckDeployInfoRequest.character"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckDeployInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CheckDeployInfoRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  return target;
}

size_t CheckDeployInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckDeployInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckDeployInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckDeployInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
    MergeFrom(*source);
  }
}

void CheckDeployInfoRequest::MergeFrom(const CheckDeployInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character().size() > 0) {
    _internal_set_character(from._internal_character());
  }
}

void CheckDeployInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckDeployInfoRequest::CopyFrom(const CheckDeployInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDeployInfoRequest::IsInitialized() const {
  return true;
}

void CheckDeployInfoRequest::InternalSwap(CheckDeployInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_.Swap(&other->character_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDeployInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckDeployInfoResponse::_Internal {
 public:
};

CheckDeployInfoResponse::CheckDeployInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
}
CheckDeployInfoResponse::CheckDeployInfoResponse(const CheckDeployInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  is_fresh_ = from.is_fresh_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
}

void CheckDeployInfoResponse::SharedCtor() {
  is_fresh_ = false;
}

CheckDeployInfoResponse::~CheckDeployInfoResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckDeployInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CheckDeployInfoResponse::ArenaDtor(void* object) {
  CheckDeployInfoResponse* _this = reinterpret_cast< CheckDeployInfoResponse* >(object);
  (void)_this;
}
void CheckDeployInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckDeployInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckDeployInfoResponse& CheckDeployInfoResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckDeployInfoResponse_characters_2eproto.base);
  return *internal_default_instance();
}


void CheckDeployInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_fresh_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDeployInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_fresh = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_fresh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckDeployInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_fresh = 1;
  if (this->is_fresh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_fresh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  return target;
}

size_t CheckDeployInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_fresh = 1;
  if (this->is_fresh() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckDeployInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckDeployInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckDeployInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
    MergeFrom(*source);
  }
}

void CheckDeployInfoResponse::MergeFrom(const CheckDeployInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_fresh() != 0) {
    _internal_set_is_fresh(from._internal_is_fresh());
  }
}

void CheckDeployInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckDeployInfoResponse::CopyFrom(const CheckDeployInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDeployInfoResponse::IsInitialized() const {
  return true;
}

void CheckDeployInfoResponse::InternalSwap(CheckDeployInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(is_fresh_, other->is_fresh_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDeployInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterDescription* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterDescription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterDescription >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainTrigger* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterAssets* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterAssets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterAssets >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterPersonality* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterPersonality >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterPersonality >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_Fact* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_Fact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_Fact >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_Meta* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_Meta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_Meta >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListCharactersRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListCharactersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListCharactersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CreateCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CreateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CreateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeployCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeployCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeployCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListCharactersResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListCharactersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListCharactersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ShareCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ShareCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ShareCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterShareInfo* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterShareInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterShareInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
