// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: characters.proto
#ifndef GRPC_characters_2eproto__INCLUDED
#define GRPC_characters_2eproto__INCLUDED

#include "characters.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {

// RPC service to manage characters (characters)
class Characters final {
 public:
  static constexpr char const* service_full_name() {
    return "ai.inworld.studio.v1alpha.Characters";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // RPC to deploy the brain for the character.
    // Available list for now:
    //   defaultCharacterDescription.givenName
    //   defaultCharacterDescription.description
    //   defaultCharacterDescription.motivation
    //   defaultCharacterDescription.characterRole
    //   defaultCharacterDescription.exampleDialog
    //   defaultCharacterDescription.nicknames.<INDEX> (e.g. defaultCharacterDescription.nicknames.0)
    //   description.hobbyOrInterests.<INDEX>
    //   description.personalityAdjectives.<INDEX>
    //   commonKnowledges<INDEX>.description - description from external common knowledge common_knowledges.0.description
    //   commonKnowledges<INDEX>.memoryRecords<INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
    //   commonKnowledges.memoryRecords<INDEX> - memory record from local list of facts
    //   behavioralContexts.<INDEX>.name
    //   behavioralContexts.<INDEX>.motivation
    //   behavioralContexts.<INDEX1>.triggers.<INDEX2>
    //   behavioralContexts.<INDEX1>.behavioralContextInteraction.<INDEX2>.actions.<INDEX3>.tellInstructed.speechInstruction
    //   behavioralContexts.<INDEX1>.behavioralContextInteraction.<INDEX2>.actions.<INDEX3>.sendCustomEvent.customEvent
    virtual ::grpc::Status DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeployCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeployCharacterRaw(context, request, cq));
    }
    // Character's CRUD.
    // RPC to get one character by name.
    virtual ::grpc::Status GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> AsyncGetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(AsyncGetCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncGetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncGetCharacterRaw(context, request, cq));
    }
    // RPC to get list of characters.
    virtual ::grpc::Status ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListCharactersResponse>> AsyncListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListCharactersResponse>>(AsyncListCharactersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListCharactersResponse>> PrepareAsyncListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListCharactersResponse>>(PrepareAsyncListCharactersRaw(context, request, cq));
    }
    // RPC to update a character.
    virtual ::grpc::Status UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> AsyncUpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(AsyncUpdateCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncUpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncUpdateCharacterRaw(context, request, cq));
    }
    // RPC to create character.
    virtual ::grpc::Status CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> AsyncCreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(AsyncCreateCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncCreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncCreateCharacterRaw(context, request, cq));
    }
    // RPC to delete a character.
    virtual ::grpc::Status DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeleteCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeleteCharacterRaw(context, request, cq));
    }
    // RPC to update RPM model for the character.
    virtual ::grpc::Status ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::ai::inworld::studio::v1alpha::Character* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> AsyncReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(AsyncReplaceCharacterRpmModelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncReplaceCharacterRpmModelRaw(context, request, cq));
    }
    // Returns some meaningful preview of the prompt template.
    virtual ::grpc::Status PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>> AsyncPreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>>(AsyncPreviewPromptTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>> PrepareAsyncPreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>>(PrepareAsyncPreviewPromptTemplateRaw(context, request, cq));
    }
    // Returns deployment information about character. For now
    // only is fresh or not
    virtual ::grpc::Status CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>> AsyncCheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>>(AsyncCheckDeployInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>> PrepareAsyncCheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>>(PrepareAsyncCheckDeployInfoRaw(context, request, cq));
    }
    // RPC to create character.
    virtual ::grpc::Status GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> AsyncGetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(AsyncGetCharacterAdvancedSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> PrepareAsyncGetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(PrepareAsyncGetCharacterAdvancedSettingsRaw(context, request, cq));
    }
    // RPC to update a character advanced settings.
    virtual ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> AsyncUpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(AsyncUpdateCharacterAdvancedSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> PrepareAsyncUpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(PrepareAsyncUpdateCharacterAdvancedSettingsRaw(context, request, cq));
    }
    // RPC to share the character with listed of external ids
    virtual ::grpc::Status ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncShareCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncShareCharacterRaw(context, request, cq));
    }
    // Returns characters which were shared with the current user
    // (-- api-linter: core::0136::http-uri-suffix=disabled --)
    virtual ::grpc::Status ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>> AsyncListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>>(AsyncListSharedCharactersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>> PrepareAsyncListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>>(PrepareAsyncListSharedCharactersRaw(context, request, cq));
    }
    // RPC to get actual sharing info on the character.
    virtual ::grpc::Status GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterShareInfo>> AsyncGetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterShareInfo>>(AsyncGetCharacterShareInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterShareInfo>> PrepareAsyncGetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterShareInfo>>(PrepareAsyncGetCharacterShareInfoRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // RPC to deploy the brain for the character.
      // Available list for now:
      //   defaultCharacterDescription.givenName
      //   defaultCharacterDescription.description
      //   defaultCharacterDescription.motivation
      //   defaultCharacterDescription.characterRole
      //   defaultCharacterDescription.exampleDialog
      //   defaultCharacterDescription.nicknames.<INDEX> (e.g. defaultCharacterDescription.nicknames.0)
      //   description.hobbyOrInterests.<INDEX>
      //   description.personalityAdjectives.<INDEX>
      //   commonKnowledges<INDEX>.description - description from external common knowledge common_knowledges.0.description
      //   commonKnowledges<INDEX>.memoryRecords<INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
      //   commonKnowledges.memoryRecords<INDEX> - memory record from local list of facts
      //   behavioralContexts.<INDEX>.name
      //   behavioralContexts.<INDEX>.motivation
      //   behavioralContexts.<INDEX1>.triggers.<INDEX2>
      //   behavioralContexts.<INDEX1>.behavioralContextInteraction.<INDEX2>.actions.<INDEX3>.tellInstructed.speechInstruction
      //   behavioralContexts.<INDEX1>.behavioralContextInteraction.<INDEX2>.actions.<INDEX3>.sendCustomEvent.customEvent
      virtual void DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Character's CRUD.
      // RPC to get one character by name.
      virtual void GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to get list of characters.
      virtual void ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to update a character.
      virtual void UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to create character.
      virtual void CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to delete a character.
      virtual void DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to update RPM model for the character.
      virtual void ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Returns some meaningful preview of the prompt template.
      virtual void PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Returns deployment information about character. For now
      // only is fresh or not
      virtual void CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to create character.
      virtual void GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to update a character advanced settings.
      virtual void UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to share the character with listed of external ids
      virtual void ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Returns characters which were shared with the current user
      // (-- api-linter: core::0136::http-uri-suffix=disabled --)
      virtual void ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // RPC to get actual sharing info on the character.
      virtual void GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeployCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeployCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* AsyncGetCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncGetCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListCharactersResponse>* AsyncListCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListCharactersResponse>* PrepareAsyncListCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* AsyncUpdateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncUpdateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* AsyncCreateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncCreateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* AsyncReplaceCharacterRpmModelRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncReplaceCharacterRpmModelRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* AsyncPreviewPromptTemplateRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* PrepareAsyncPreviewPromptTemplateRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* AsyncCheckDeployInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* PrepareAsyncCheckDeployInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* AsyncGetCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* PrepareAsyncGetCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* AsyncUpdateCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* PrepareAsyncUpdateCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncShareCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncShareCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* AsyncListSharedCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* PrepareAsyncListSharedCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterShareInfo>* AsyncGetCharacterShareInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ai::inworld::studio::v1alpha::CharacterShareInfo>* PrepareAsyncGetCharacterShareInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeployCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeployCharacterRaw(context, request, cq));
    }
    ::grpc::Status GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> AsyncGetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(AsyncGetCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncGetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncGetCharacterRaw(context, request, cq));
    }
    ::grpc::Status ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>> AsyncListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>>(AsyncListCharactersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>> PrepareAsyncListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>>(PrepareAsyncListCharactersRaw(context, request, cq));
    }
    ::grpc::Status UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> AsyncUpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(AsyncUpdateCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncUpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncUpdateCharacterRaw(context, request, cq));
    }
    ::grpc::Status CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::ai::inworld::studio::v1alpha::Character* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> AsyncCreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(AsyncCreateCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncCreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncCreateCharacterRaw(context, request, cq));
    }
    ::grpc::Status DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeleteCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeleteCharacterRaw(context, request, cq));
    }
    ::grpc::Status ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::ai::inworld::studio::v1alpha::Character* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> AsyncReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(AsyncReplaceCharacterRpmModelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>> PrepareAsyncReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>>(PrepareAsyncReplaceCharacterRpmModelRaw(context, request, cq));
    }
    ::grpc::Status PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>> AsyncPreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>>(AsyncPreviewPromptTemplateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>> PrepareAsyncPreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>>(PrepareAsyncPreviewPromptTemplateRaw(context, request, cq));
    }
    ::grpc::Status CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>> AsyncCheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>>(AsyncCheckDeployInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>> PrepareAsyncCheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>>(PrepareAsyncCheckDeployInfoRaw(context, request, cq));
    }
    ::grpc::Status GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> AsyncGetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(AsyncGetCharacterAdvancedSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> PrepareAsyncGetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(PrepareAsyncGetCharacterAdvancedSettingsRaw(context, request, cq));
    }
    ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> AsyncUpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(AsyncUpdateCharacterAdvancedSettingsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>> PrepareAsyncUpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>>(PrepareAsyncUpdateCharacterAdvancedSettingsRaw(context, request, cq));
    }
    ::grpc::Status ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncShareCharacterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncShareCharacterRaw(context, request, cq));
    }
    ::grpc::Status ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>> AsyncListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>>(AsyncListSharedCharactersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>> PrepareAsyncListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>>(PrepareAsyncListSharedCharactersRaw(context, request, cq));
    }
    ::grpc::Status GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>> AsyncGetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>>(AsyncGetCharacterShareInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>> PrepareAsyncGetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>>(PrepareAsyncGetCharacterShareInfoRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeployCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ReplaceCharacterRpmModel(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void PreviewPromptTemplate(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CheckDeployInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateCharacterAdvancedSettings(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ShareCharacter(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListSharedCharacters(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetCharacterShareInfo(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeployCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeployCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* AsyncGetCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncGetCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>* AsyncListCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListCharactersResponse>* PrepareAsyncListCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* AsyncUpdateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncUpdateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* AsyncCreateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncCreateCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeleteCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* AsyncReplaceCharacterRpmModelRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::Character>* PrepareAsyncReplaceCharacterRpmModelRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* AsyncPreviewPromptTemplateRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* PrepareAsyncPreviewPromptTemplateRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* AsyncCheckDeployInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* PrepareAsyncCheckDeployInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* AsyncGetCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* PrepareAsyncGetCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* AsyncUpdateCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* PrepareAsyncUpdateCharacterAdvancedSettingsRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncShareCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncShareCharacterRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* AsyncListSharedCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* PrepareAsyncListSharedCharactersRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>* AsyncGetCharacterShareInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ai::inworld::studio::v1alpha::CharacterShareInfo>* PrepareAsyncGetCharacterShareInfoRaw(::grpc::ClientContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_DeployCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_ListCharacters_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_ReplaceCharacterRpmModel_;
    const ::grpc::internal::RpcMethod rpcmethod_PreviewPromptTemplate_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckDeployInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCharacterAdvancedSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateCharacterAdvancedSettings_;
    const ::grpc::internal::RpcMethod rpcmethod_ShareCharacter_;
    const ::grpc::internal::RpcMethod rpcmethod_ListSharedCharacters_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCharacterShareInfo_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // RPC to deploy the brain for the character.
    // Available list for now:
    //   defaultCharacterDescription.givenName
    //   defaultCharacterDescription.description
    //   defaultCharacterDescription.motivation
    //   defaultCharacterDescription.characterRole
    //   defaultCharacterDescription.exampleDialog
    //   defaultCharacterDescription.nicknames.<INDEX> (e.g. defaultCharacterDescription.nicknames.0)
    //   description.hobbyOrInterests.<INDEX>
    //   description.personalityAdjectives.<INDEX>
    //   commonKnowledges<INDEX>.description - description from external common knowledge common_knowledges.0.description
    //   commonKnowledges<INDEX>.memoryRecords<INDEX_2> - memory record from external common knowledge common_knowledges.0.memory_records.1
    //   commonKnowledges.memoryRecords<INDEX> - memory record from local list of facts
    //   behavioralContexts.<INDEX>.name
    //   behavioralContexts.<INDEX>.motivation
    //   behavioralContexts.<INDEX1>.triggers.<INDEX2>
    //   behavioralContexts.<INDEX1>.behavioralContextInteraction.<INDEX2>.actions.<INDEX3>.tellInstructed.speechInstruction
    //   behavioralContexts.<INDEX1>.behavioralContextInteraction.<INDEX2>.actions.<INDEX3>.sendCustomEvent.customEvent
    virtual ::grpc::Status DeployCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response);
    // Character's CRUD.
    // RPC to get one character by name.
    virtual ::grpc::Status GetCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response);
    // RPC to get list of characters.
    virtual ::grpc::Status ListCharacters(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response);
    // RPC to update a character.
    virtual ::grpc::Status UpdateCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response);
    // RPC to create character.
    virtual ::grpc::Status CreateCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response);
    // RPC to delete a character.
    virtual ::grpc::Status DeleteCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response);
    // RPC to update RPM model for the character.
    virtual ::grpc::Status ReplaceCharacterRpmModel(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response);
    // Returns some meaningful preview of the prompt template.
    virtual ::grpc::Status PreviewPromptTemplate(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response);
    // Returns deployment information about character. For now
    // only is fresh or not
    virtual ::grpc::Status CheckDeployInfo(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response);
    // RPC to create character.
    virtual ::grpc::Status GetCharacterAdvancedSettings(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response);
    // RPC to update a character advanced settings.
    virtual ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response);
    // RPC to share the character with listed of external ids
    virtual ::grpc::Status ShareCharacter(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response);
    // Returns characters which were shared with the current user
    // (-- api-linter: core::0136::http-uri-suffix=disabled --)
    virtual ::grpc::Status ListSharedCharacters(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response);
    // RPC to get actual sharing info on the character.
    virtual ::grpc::Status GetCharacterShareInfo(::grpc::ServerContext* context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_DeployCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeployCharacter() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_DeployCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeployCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeployCharacter(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCharacter() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacter(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::Character>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListCharacters() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCharacters(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::ListCharactersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateCharacter() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCharacter(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::Character>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateCharacter() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CreateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCharacter(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::Character>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCharacter(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReplaceCharacterRpmModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReplaceCharacterRpmModel() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ReplaceCharacterRpmModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceCharacterRpmModel(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceCharacterRpmModel(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::Character>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PreviewPromptTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PreviewPromptTemplate() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_PreviewPromptTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PreviewPromptTemplate(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPreviewPromptTemplate(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckDeployInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CheckDeployInfo() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_CheckDeployInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDeployInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckDeployInfo(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacterAdvancedSettings(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_UpdateCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCharacterAdvancedSettings(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShareCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ShareCharacter() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_ShareCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShareCharacter(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListSharedCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListSharedCharacters() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ListSharedCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSharedCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSharedCharacters(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCharacterShareInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCharacterShareInfo() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetCharacterShareInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterShareInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacterShareInfo(::grpc::ServerContext* context, ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::ai::inworld::studio::v1alpha::CharacterShareInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_DeployCharacter<WithAsyncMethod_GetCharacter<WithAsyncMethod_ListCharacters<WithAsyncMethod_UpdateCharacter<WithAsyncMethod_CreateCharacter<WithAsyncMethod_DeleteCharacter<WithAsyncMethod_ReplaceCharacterRpmModel<WithAsyncMethod_PreviewPromptTemplate<WithAsyncMethod_CheckDeployInfo<WithAsyncMethod_GetCharacterAdvancedSettings<WithAsyncMethod_UpdateCharacterAdvancedSettings<WithAsyncMethod_ShareCharacter<WithAsyncMethod_ListSharedCharacters<WithAsyncMethod_GetCharacterShareInfo<Service > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeployCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeployCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* request, ::google::protobuf::Empty* response) { return this->DeployCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_DeployCharacter(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeployCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeployCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeployCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeployCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response) { return this->GetCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_GetCharacter(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListCharacters() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListCharactersResponse* response) { return this->ListCharacters(context, request, response); }));}
    void SetMessageAllocatorFor_ListCharacters(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListCharacters(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListCharacters(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response) { return this->UpdateCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateCharacter(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* request, ::ai::inworld::studio::v1alpha::Character* response) { return this->CreateCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_CreateCharacter(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* request, ::google::protobuf::Empty* response) { return this->DeleteCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteCharacter(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReplaceCharacterRpmModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReplaceCharacterRpmModel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* request, ::ai::inworld::studio::v1alpha::Character* response) { return this->ReplaceCharacterRpmModel(context, request, response); }));}
    void SetMessageAllocatorFor_ReplaceCharacterRpmModel(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReplaceCharacterRpmModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceCharacterRpmModel(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReplaceCharacterRpmModel(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReplaceCharacterRpmModel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_PreviewPromptTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_PreviewPromptTemplate() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* request, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* response) { return this->PreviewPromptTemplate(context, request, response); }));}
    void SetMessageAllocatorFor_PreviewPromptTemplate(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_PreviewPromptTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PreviewPromptTemplate(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PreviewPromptTemplate(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PreviewPromptTemplate(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CheckDeployInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CheckDeployInfo() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* request, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* response) { return this->CheckDeployInfo(context, request, response); }));}
    void SetMessageAllocatorFor_CheckDeployInfo(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(8);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CheckDeployInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDeployInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CheckDeployInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CheckDeployInfo(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetCharacterAdvancedSettings() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) { return this->GetCharacterAdvancedSettings(context, request, response); }));}
    void SetMessageAllocatorFor_GetCharacterAdvancedSettings(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(9);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetCharacterAdvancedSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetCharacterAdvancedSettings(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateCharacterAdvancedSettings() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* request, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* response) { return this->UpdateCharacterAdvancedSettings(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateCharacterAdvancedSettings(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(10);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateCharacterAdvancedSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateCharacterAdvancedSettings(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ShareCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ShareCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* request, ::google::protobuf::Empty* response) { return this->ShareCharacter(context, request, response); }));}
    void SetMessageAllocatorFor_ShareCharacter(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(11);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ShareCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ShareCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ShareCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListSharedCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListSharedCharacters() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* request, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* response) { return this->ListSharedCharacters(context, request, response); }));}
    void SetMessageAllocatorFor_ListSharedCharacters(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(12);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListSharedCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSharedCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListSharedCharacters(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListSharedCharacters(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetCharacterShareInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetCharacterShareInfo() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* request, ::ai::inworld::studio::v1alpha::CharacterShareInfo* response) { return this->GetCharacterShareInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetCharacterShareInfo(
        ::grpc::experimental::MessageAllocator< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(13);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetCharacterShareInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterShareInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetCharacterShareInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetCharacterShareInfo(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_DeployCharacter<ExperimentalWithCallbackMethod_GetCharacter<ExperimentalWithCallbackMethod_ListCharacters<ExperimentalWithCallbackMethod_UpdateCharacter<ExperimentalWithCallbackMethod_CreateCharacter<ExperimentalWithCallbackMethod_DeleteCharacter<ExperimentalWithCallbackMethod_ReplaceCharacterRpmModel<ExperimentalWithCallbackMethod_PreviewPromptTemplate<ExperimentalWithCallbackMethod_CheckDeployInfo<ExperimentalWithCallbackMethod_GetCharacterAdvancedSettings<ExperimentalWithCallbackMethod_UpdateCharacterAdvancedSettings<ExperimentalWithCallbackMethod_ShareCharacter<ExperimentalWithCallbackMethod_ListSharedCharacters<ExperimentalWithCallbackMethod_GetCharacterShareInfo<Service > > > > > > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_DeployCharacter<ExperimentalWithCallbackMethod_GetCharacter<ExperimentalWithCallbackMethod_ListCharacters<ExperimentalWithCallbackMethod_UpdateCharacter<ExperimentalWithCallbackMethod_CreateCharacter<ExperimentalWithCallbackMethod_DeleteCharacter<ExperimentalWithCallbackMethod_ReplaceCharacterRpmModel<ExperimentalWithCallbackMethod_PreviewPromptTemplate<ExperimentalWithCallbackMethod_CheckDeployInfo<ExperimentalWithCallbackMethod_GetCharacterAdvancedSettings<ExperimentalWithCallbackMethod_UpdateCharacterAdvancedSettings<ExperimentalWithCallbackMethod_ShareCharacter<ExperimentalWithCallbackMethod_ListSharedCharacters<ExperimentalWithCallbackMethod_GetCharacterShareInfo<Service > > > > > > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_DeployCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeployCharacter() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_DeployCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeployCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCharacter() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListCharacters() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateCharacter() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateCharacter() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CreateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReplaceCharacterRpmModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReplaceCharacterRpmModel() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ReplaceCharacterRpmModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceCharacterRpmModel(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PreviewPromptTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PreviewPromptTemplate() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_PreviewPromptTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PreviewPromptTemplate(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckDeployInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CheckDeployInfo() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_CheckDeployInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDeployInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_UpdateCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShareCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ShareCharacter() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_ShareCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListSharedCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListSharedCharacters() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ListSharedCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSharedCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCharacterShareInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCharacterShareInfo() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetCharacterShareInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterShareInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeployCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeployCharacter() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_DeployCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeployCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeployCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCharacter() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListCharacters() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCharacters(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateCharacter() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateCharacter() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CreateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReplaceCharacterRpmModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReplaceCharacterRpmModel() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ReplaceCharacterRpmModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceCharacterRpmModel(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReplaceCharacterRpmModel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PreviewPromptTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PreviewPromptTemplate() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_PreviewPromptTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PreviewPromptTemplate(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPreviewPromptTemplate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckDeployInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CheckDeployInfo() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_CheckDeployInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDeployInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckDeployInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacterAdvancedSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_UpdateCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateCharacterAdvancedSettings(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShareCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ShareCharacter() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_ShareCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShareCharacter(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListSharedCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListSharedCharacters() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ListSharedCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSharedCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSharedCharacters(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCharacterShareInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCharacterShareInfo() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetCharacterShareInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterShareInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCharacterShareInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeployCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeployCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeployCharacter(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeployCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeployCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeployCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeployCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCharacter(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListCharacters() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListCharacters(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListCharacters(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListCharacters(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateCharacter(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateCharacter(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteCharacter(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReplaceCharacterRpmModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReplaceCharacterRpmModel() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReplaceCharacterRpmModel(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ReplaceCharacterRpmModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReplaceCharacterRpmModel(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReplaceCharacterRpmModel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReplaceCharacterRpmModel(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_PreviewPromptTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_PreviewPromptTemplate() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PreviewPromptTemplate(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_PreviewPromptTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PreviewPromptTemplate(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* PreviewPromptTemplate(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* PreviewPromptTemplate(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CheckDeployInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CheckDeployInfo() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CheckDeployInfo(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CheckDeployInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckDeployInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CheckDeployInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CheckDeployInfo(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetCharacterAdvancedSettings() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCharacterAdvancedSettings(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetCharacterAdvancedSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetCharacterAdvancedSettings(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateCharacterAdvancedSettings() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateCharacterAdvancedSettings(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateCharacterAdvancedSettings(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateCharacterAdvancedSettings(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ShareCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ShareCharacter() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ShareCharacter(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ShareCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShareCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ShareCharacter(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ShareCharacter(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListSharedCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListSharedCharacters() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListSharedCharacters(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListSharedCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSharedCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListSharedCharacters(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListSharedCharacters(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetCharacterShareInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetCharacterShareInfo() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCharacterShareInfo(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetCharacterShareInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCharacterShareInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetCharacterShareInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetCharacterShareInfo(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeployCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeployCharacter() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::DeployCharacterRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeployCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeployCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeployCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeployCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeployCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::DeployCharacterRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCharacter() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::GetCharacterRequest, ::ai::inworld::studio::v1alpha::Character>* streamer) {
                       return this->StreamedGetCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::GetCharacterRequest,::ai::inworld::studio::v1alpha::Character>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListCharacters() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::ListCharactersRequest, ::ai::inworld::studio::v1alpha::ListCharactersResponse>* streamer) {
                       return this->StreamedListCharacters(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCharacters(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::ListCharactersRequest,::ai::inworld::studio::v1alpha::ListCharactersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateCharacter() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::UpdateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>* streamer) {
                       return this->StreamedUpdateCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest,::ai::inworld::studio::v1alpha::Character>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateCharacter() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::CreateCharacterRequest, ::ai::inworld::studio::v1alpha::Character>* streamer) {
                       return this->StreamedCreateCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CreateCharacterRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::CreateCharacterRequest,::ai::inworld::studio::v1alpha::Character>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteCharacter() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::DeleteCharacterRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeleteCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReplaceCharacterRpmModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReplaceCharacterRpmModel() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, ::ai::inworld::studio::v1alpha::Character>* streamer) {
                       return this->StreamedReplaceCharacterRpmModel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReplaceCharacterRpmModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReplaceCharacterRpmModel(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* /*request*/, ::ai::inworld::studio::v1alpha::Character* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReplaceCharacterRpmModel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest,::ai::inworld::studio::v1alpha::Character>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PreviewPromptTemplate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PreviewPromptTemplate() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* streamer) {
                       return this->StreamedPreviewPromptTemplate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PreviewPromptTemplate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PreviewPromptTemplate(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* /*request*/, ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPreviewPromptTemplate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest,::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckDeployInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CheckDeployInfo() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* streamer) {
                       return this->StreamedCheckDeployInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CheckDeployInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckDeployInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckDeployInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest,::ai::inworld::studio::v1alpha::CheckDeployInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* streamer) {
                       return this->StreamedGetCharacterAdvancedSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCharacterAdvancedSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest,::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateCharacterAdvancedSettings : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateCharacterAdvancedSettings() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* streamer) {
                       return this->StreamedUpdateCharacterAdvancedSettings(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateCharacterAdvancedSettings() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateCharacterAdvancedSettings(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateCharacterAdvancedSettings(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest,::ai::inworld::studio::v1alpha::CharacterAdvancedSettings>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShareCharacter : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ShareCharacter() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::ShareCharacterRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedShareCharacter(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ShareCharacter() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShareCharacter(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ShareCharacterRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShareCharacter(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::ShareCharacterRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListSharedCharacters : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListSharedCharacters() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* streamer) {
                       return this->StreamedListSharedCharacters(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListSharedCharacters() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListSharedCharacters(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* /*request*/, ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListSharedCharacters(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest,::ai::inworld::studio::v1alpha::ListSharedCharactersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCharacterShareInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCharacterShareInfo() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, ::ai::inworld::studio::v1alpha::CharacterShareInfo>* streamer) {
                       return this->StreamedGetCharacterShareInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCharacterShareInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCharacterShareInfo(::grpc::ServerContext* /*context*/, const ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* /*request*/, ::ai::inworld::studio::v1alpha::CharacterShareInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCharacterShareInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest,::ai::inworld::studio::v1alpha::CharacterShareInfo>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_DeployCharacter<WithStreamedUnaryMethod_GetCharacter<WithStreamedUnaryMethod_ListCharacters<WithStreamedUnaryMethod_UpdateCharacter<WithStreamedUnaryMethod_CreateCharacter<WithStreamedUnaryMethod_DeleteCharacter<WithStreamedUnaryMethod_ReplaceCharacterRpmModel<WithStreamedUnaryMethod_PreviewPromptTemplate<WithStreamedUnaryMethod_CheckDeployInfo<WithStreamedUnaryMethod_GetCharacterAdvancedSettings<WithStreamedUnaryMethod_UpdateCharacterAdvancedSettings<WithStreamedUnaryMethod_ShareCharacter<WithStreamedUnaryMethod_ListSharedCharacters<WithStreamedUnaryMethod_GetCharacterShareInfo<Service > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_DeployCharacter<WithStreamedUnaryMethod_GetCharacter<WithStreamedUnaryMethod_ListCharacters<WithStreamedUnaryMethod_UpdateCharacter<WithStreamedUnaryMethod_CreateCharacter<WithStreamedUnaryMethod_DeleteCharacter<WithStreamedUnaryMethod_ReplaceCharacterRpmModel<WithStreamedUnaryMethod_PreviewPromptTemplate<WithStreamedUnaryMethod_CheckDeployInfo<WithStreamedUnaryMethod_GetCharacterAdvancedSettings<WithStreamedUnaryMethod_UpdateCharacterAdvancedSettings<WithStreamedUnaryMethod_ShareCharacter<WithStreamedUnaryMethod_ListSharedCharacters<WithStreamedUnaryMethod_GetCharacterShareInfo<Service > > > > > > > > > > > > > > StreamedService;
};

}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai


#endif  // GRPC_characters_2eproto__INCLUDED
