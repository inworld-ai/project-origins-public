// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world-engine.proto

#include "ProtoDisableWarning.h"

#include "world-engine.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioSettings_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CapabilitiesRequest_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientRequest_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateWorldResponse_Agent_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoadSceneResponse_Agent_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_world_2dengine_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserRequest_world_2dengine_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_packets_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EmotionEvent_packets_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_voices_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Voice_voices_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace ai {
namespace inworld {
namespace engine {
class CapabilitiesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CapabilitiesRequest> _instance;
} _CapabilitiesRequest_default_instance_;
class UserRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserRequest> _instance;
} _UserRequest_default_instance_;
class ClientRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientRequest> _instance;
} _ClientRequest_default_instance_;
class CreateWorldRequest_CreateAgentRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateWorldRequest_CreateAgentRequest> _instance;
} _CreateWorldRequest_CreateAgentRequest_default_instance_;
class CreateWorldRequest_ClientRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateWorldRequest_ClientRequest> _instance;
} _CreateWorldRequest_ClientRequest_default_instance_;
class CreateWorldRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateWorldRequest> _instance;
} _CreateWorldRequest_default_instance_;
class CreateWorldResponse_AgentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateWorldResponse_Agent> _instance;
} _CreateWorldResponse_Agent_default_instance_;
class CreateWorldResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateWorldResponse> _instance;
} _CreateWorldResponse_default_instance_;
class LoadSceneRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadSceneRequest> _instance;
} _LoadSceneRequest_default_instance_;
class AudioSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AudioSettings> _instance;
} _AudioSettings_default_instance_;
class LoadSceneResponse_Agent_CharacterAssetsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadSceneResponse_Agent_CharacterAssets> _instance;
} _LoadSceneResponse_Agent_CharacterAssets_default_instance_;
class LoadSceneResponse_AgentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadSceneResponse_Agent> _instance;
} _LoadSceneResponse_Agent_default_instance_;
class LoadSceneResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadSceneResponse> _instance;
} _LoadSceneResponse_default_instance_;
class LogErrorRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogErrorRequest> _instance;
} _LogErrorRequest_default_instance_;
class VoicePreviewRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VoicePreviewRequest> _instance;
} _VoicePreviewRequest_default_instance_;
class VoicePreviewResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VoicePreviewResponse> _instance;
} _VoicePreviewResponse_default_instance_;
class ListBaseVoicesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListBaseVoicesRequest> _instance;
} _ListBaseVoicesRequest_default_instance_;
class ListBaseVoicesResponce_BaseVoiceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListBaseVoicesResponce_BaseVoice> _instance;
} _ListBaseVoicesResponce_BaseVoice_default_instance_;
class ListBaseVoicesResponceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListBaseVoicesResponce> _instance;
} _ListBaseVoicesResponce_default_instance_;
class AccessTokenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AccessToken> _instance;
} _AccessToken_default_instance_;
class GenerateTokenRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenerateTokenRequest> _instance;
} _GenerateTokenRequest_default_instance_;
}  // namespace engine
}  // namespace inworld
}  // namespace ai
static void InitDefaultsscc_info_AccessToken_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_AccessToken_default_instance_;
    new (ptr) ::ai::inworld::engine::AccessToken();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AccessToken_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AccessToken_world_2dengine_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_AudioSettings_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_AudioSettings_default_instance_;
    new (ptr) ::ai::inworld::engine::AudioSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioSettings_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AudioSettings_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_CapabilitiesRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_CapabilitiesRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::CapabilitiesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CapabilitiesRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CapabilitiesRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_ClientRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_ClientRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::ClientRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_CreateWorldRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_CreateWorldRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::CreateWorldRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CreateWorldRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_CreateWorldRequest_world_2dengine_2eproto}, {
      &scc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto.base,
      &scc_info_CapabilitiesRequest_world_2dengine_2eproto.base,
      &scc_info_UserRequest_world_2dengine_2eproto.base,
      &scc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto.base,}};

static void InitDefaultsscc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_CreateWorldRequest_ClientRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::CreateWorldRequest_ClientRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_CreateWorldRequest_CreateAgentRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_CreateWorldResponse_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_CreateWorldResponse_default_instance_;
    new (ptr) ::ai::inworld::engine::CreateWorldResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateWorldResponse_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateWorldResponse_world_2dengine_2eproto}, {
      &scc_info_CreateWorldResponse_Agent_world_2dengine_2eproto.base,}};

static void InitDefaultsscc_info_CreateWorldResponse_Agent_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_CreateWorldResponse_Agent_default_instance_;
    new (ptr) ::ai::inworld::engine::CreateWorldResponse_Agent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateWorldResponse_Agent_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateWorldResponse_Agent_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_GenerateTokenRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_GenerateTokenRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::GenerateTokenRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GenerateTokenRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GenerateTokenRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_ListBaseVoicesRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_ListBaseVoicesRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::ListBaseVoicesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListBaseVoicesRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListBaseVoicesRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_ListBaseVoicesResponce_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_ListBaseVoicesResponce_default_instance_;
    new (ptr) ::ai::inworld::engine::ListBaseVoicesResponce();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListBaseVoicesResponce_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListBaseVoicesResponce_world_2dengine_2eproto}, {
      &scc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto.base,}};

static void InitDefaultsscc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_ListBaseVoicesResponce_BaseVoice_default_instance_;
    new (ptr) ::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_LoadSceneRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_LoadSceneRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::LoadSceneRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_LoadSceneRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_LoadSceneRequest_world_2dengine_2eproto}, {
      &scc_info_CapabilitiesRequest_world_2dengine_2eproto.base,
      &scc_info_UserRequest_world_2dengine_2eproto.base,
      &scc_info_ClientRequest_world_2dengine_2eproto.base,
      &scc_info_AudioSettings_world_2dengine_2eproto.base,}};

static void InitDefaultsscc_info_LoadSceneResponse_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_LoadSceneResponse_default_instance_;
    new (ptr) ::ai::inworld::engine::LoadSceneResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoadSceneResponse_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoadSceneResponse_world_2dengine_2eproto}, {
      &scc_info_LoadSceneResponse_Agent_world_2dengine_2eproto.base,}};

static void InitDefaultsscc_info_LoadSceneResponse_Agent_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_LoadSceneResponse_Agent_default_instance_;
    new (ptr) ::ai::inworld::engine::LoadSceneResponse_Agent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LoadSceneResponse_Agent_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LoadSceneResponse_Agent_world_2dengine_2eproto}, {
      &scc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto.base,}};

static void InitDefaultsscc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_LoadSceneResponse_Agent_CharacterAssets_default_instance_;
    new (ptr) ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_LogErrorRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_LogErrorRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::LogErrorRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogErrorRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogErrorRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_UserRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_UserRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::UserRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UserRequest_world_2dengine_2eproto}, {}};

static void InitDefaultsscc_info_VoicePreviewRequest_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_VoicePreviewRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::VoicePreviewRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_VoicePreviewRequest_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_VoicePreviewRequest_world_2dengine_2eproto}, {
      &scc_info_EmotionEvent_packets_2eproto.base,
      &scc_info_Voice_voices_2eproto.base,}};

static void InitDefaultsscc_info_VoicePreviewResponse_world_2dengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::_VoicePreviewResponse_default_instance_;
    new (ptr) ::ai::inworld::engine::VoicePreviewResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VoicePreviewResponse_world_2dengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VoicePreviewResponse_world_2dengine_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_world_2dengine_2eproto[21];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_world_2dengine_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_world_2dengine_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_world_2dengine_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, audio_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, text_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, gestures_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, interruptions_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, emotions_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, animations_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, turn_based_stt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, emotion_streaming_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, silence_events_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, phoneme_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ClientRequest, id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ClientRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, brain_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, language_code_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, voice_preset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_ClientRequest, id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_ClientRequest, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, proto_world_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, create_agent_requests_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, capabilities_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, user_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, client_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse_Agent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse_Agent, agent_id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse_Agent, brain_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse, agents_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, capabilities_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, user_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, client_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, audio_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AudioSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AudioSettings, stt_sample_rate_hertz_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AudioSettings, tts_sample_rate_hertz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, rpm_model_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, rpm_image_uri_portrait_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, rpm_image_uri_posture_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, agent_id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, brain_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, given_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, character_assets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse, agents_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LogErrorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LogErrorRequest, key_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LogErrorRequest, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, text_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, emotions_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, voice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewResponse, audio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesRequest, language_code_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesRequest, tts_types_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, language_codes_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, gender_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, naturalsampleratehertz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce, googlevoices_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce, inworldvoices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, token_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, type_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, expiration_time_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::GenerateTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::GenerateTokenRequest, key_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ai::inworld::engine::CapabilitiesRequest)},
  { 16, -1, sizeof(::ai::inworld::engine::UserRequest)},
  { 23, -1, sizeof(::ai::inworld::engine::ClientRequest)},
  { 30, -1, sizeof(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest)},
  { 38, -1, sizeof(::ai::inworld::engine::CreateWorldRequest_ClientRequest)},
  { 45, -1, sizeof(::ai::inworld::engine::CreateWorldRequest)},
  { 55, -1, sizeof(::ai::inworld::engine::CreateWorldResponse_Agent)},
  { 62, -1, sizeof(::ai::inworld::engine::CreateWorldResponse)},
  { 69, -1, sizeof(::ai::inworld::engine::LoadSceneRequest)},
  { 79, -1, sizeof(::ai::inworld::engine::AudioSettings)},
  { 86, -1, sizeof(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets)},
  { 94, -1, sizeof(::ai::inworld::engine::LoadSceneResponse_Agent)},
  { 103, -1, sizeof(::ai::inworld::engine::LoadSceneResponse)},
  { 110, -1, sizeof(::ai::inworld::engine::LogErrorRequest)},
  { 117, -1, sizeof(::ai::inworld::engine::VoicePreviewRequest)},
  { 125, -1, sizeof(::ai::inworld::engine::VoicePreviewResponse)},
  { 131, -1, sizeof(::ai::inworld::engine::ListBaseVoicesRequest)},
  { 138, -1, sizeof(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice)},
  { 147, -1, sizeof(::ai::inworld::engine::ListBaseVoicesResponce)},
  { 154, -1, sizeof(::ai::inworld::engine::AccessToken)},
  { 163, -1, sizeof(::ai::inworld::engine::GenerateTokenRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_CapabilitiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_UserRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_ClientRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_CreateWorldRequest_CreateAgentRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_CreateWorldRequest_ClientRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_CreateWorldRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_CreateWorldResponse_Agent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_CreateWorldResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_LoadSceneRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_AudioSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_LoadSceneResponse_Agent_CharacterAssets_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_LoadSceneResponse_Agent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_LoadSceneResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_LogErrorRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_VoicePreviewRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_VoicePreviewResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_ListBaseVoicesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_ListBaseVoicesResponce_BaseVoice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_ListBaseVoicesResponce_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_AccessToken_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::_GenerateTokenRequest_default_instance_),
};

const char descriptor_table_protodef_world_2dengine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022world-engine.proto\022\021ai.inworld.engine\032"
  "\034google/api/annotations.proto\032\033google/pr"
  "otobuf/empty.proto\032\037google/protobuf/time"
  "stamp.proto\032\rpackets.proto\032\014voices.proto"
  "\"\364\001\n\023CapabilitiesRequest\022\r\n\005audio\030\001 \001(\010\022"
  "\014\n\004text\030\002 \001(\010\022\020\n\010gestures\030\003 \001(\010\022\025\n\rinter"
  "ruptions\030\004 \001(\010\022\020\n\010triggers\030\005 \001(\010\022\020\n\010emot"
  "ions\030\006 \001(\010\022\022\n\nanimations\030\007 \001(\010\022\026\n\016turn_b"
  "ased_stt\030\010 \001(\010\022\031\n\021emotion_streaming\030\t \001("
  "\010\022\026\n\016silence_events\030\n \001(\010\022\024\n\014phoneme_inf"
  "o\030\013 \001(\010\"\'\n\013UserRequest\022\014\n\004name\030\001 \001(\t\022\n\n\002"
  "id\030\002 \001(\t\",\n\rClientRequest\022\n\n\002id\030\001 \001(\t\022\017\n"
  "\007version\030\002 \001(\t\"\341\003\n\022CreateWorldRequest\022\030\n"
  "\020proto_world_name\030\001 \001(\t\022W\n\025create_agent_"
  "requests\030\002 \003(\01328.ai.inworld.engine.Creat"
  "eWorldRequest.CreateAgentRequest\022<\n\014capa"
  "bilities\030\003 \001(\0132&.ai.inworld.engine.Capab"
  "ilitiesRequest\022,\n\004user\030\004 \001(\0132\036.ai.inworl"
  "d.engine.UserRequest\022C\n\006client\030\005 \001(\01323.a"
  "i.inworld.engine.CreateWorldRequest.Clie"
  "ntRequest\032u\n\022CreateAgentRequest\022\022\n\nbrain"
  "_name\030\001 \001(\t\022\025\n\rlanguage_code\030\002 \001(\t\0224\n\014vo"
  "ice_preset\030\003 \001(\0162\036.ai.inworld.engine.Voi"
  "cePreset\032,\n\rClientRequest\022\n\n\002id\030\001 \001(\t\022\017\n"
  "\007version\030\002 \001(\t:\002\030\001\"\217\001\n\023CreateWorldRespon"
  "se\022<\n\006agents\030\001 \003(\0132,.ai.inworld.engine.C"
  "reateWorldResponse.Agent\022\013\n\003key\030\003 \001(\t\032-\n"
  "\005Agent\022\020\n\010agent_id\030\001 \001(\t\022\022\n\nbrain_name\030\002"
  " \001(\t\"\370\001\n\020LoadSceneRequest\022\014\n\004name\030\001 \001(\t\022"
  "<\n\014capabilities\030\002 \001(\0132&.ai.inworld.engin"
  "e.CapabilitiesRequest\022,\n\004user\030\003 \001(\0132\036.ai"
  ".inworld.engine.UserRequest\0220\n\006client\030\004 "
  "\001(\0132 .ai.inworld.engine.ClientRequest\0228\n"
  "\016audio_settings\030\005 \001(\0132 .ai.inworld.engin"
  "e.AudioSettings\"M\n\rAudioSettings\022\035\n\025stt_"
  "sample_rate_hertz\030\001 \001(\r\022\035\n\025tts_sample_ra"
  "te_hertz\030\002 \001(\r\"\337\002\n\021LoadSceneResponse\022:\n\006"
  "agents\030\001 \003(\0132*.ai.inworld.engine.LoadSce"
  "neResponse.Agent\022\013\n\003key\030\002 \001(\t\032\200\002\n\005Agent\022"
  "\020\n\010agent_id\030\001 \001(\t\022\022\n\nbrain_name\030\002 \001(\t\022\022\n"
  "\ngiven_name\030\003 \001(\t\022T\n\020character_assets\030\004 "
  "\001(\0132:.ai.inworld.engine.LoadSceneRespons"
  "e.Agent.CharacterAssets\032g\n\017CharacterAsse"
  "ts\022\025\n\rrpm_model_uri\030\001 \001(\t\022\036\n\026rpm_image_u"
  "ri_portrait\030\002 \001(\t\022\035\n\025rpm_image_uri_postu"
  "re\030\003 \001(\t\"/\n\017LogErrorRequest\022\013\n\003key\030\001 \001(\t"
  "\022\017\n\007message\030\002 \001(\t\"\206\001\n\023VoicePreviewReques"
  "t\022\014\n\004text\030\001 \001(\t\0222\n\010emotions\030\002 \001(\0132 .ai.i"
  "nworld.packets.EmotionEvent\022\'\n\005voice\030\003 \001"
  "(\0132\030.ai.inworld.voices.VoiceJ\004\010\004\020\005\"%\n\024Vo"
  "icePreviewResponse\022\r\n\005audio\030\001 \001(\014\"]\n\025Lis"
  "tBaseVoicesRequest\022\025\n\rlanguage_code\030\001 \001("
  "\t\022-\n\ttts_types\030\002 \003(\0162\032.ai.inworld.voices"
  ".TTSType\"\255\002\n\026ListBaseVoicesResponce\022I\n\014g"
  "oogleVoices\030\001 \003(\01323.ai.inworld.engine.Li"
  "stBaseVoicesResponce.BaseVoice\022J\n\rinworl"
  "dVoices\030\002 \003(\01323.ai.inworld.engine.ListBa"
  "seVoicesResponce.BaseVoice\032|\n\tBaseVoice\022"
  "\026\n\016language_codes\030\001 \003(\t\022\014\n\004name\030\002 \001(\t\022)\n"
  "\006gender\030\003 \001(\0162\031.ai.inworld.voices.Gender"
  "\022\036\n\026naturalSampleRateHertz\030\004 \001(\005\"s\n\013Acce"
  "ssToken\022\r\n\005token\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\0223\n\017"
  "expiration_time\030\003 \001(\0132\032.google.protobuf."
  "Timestamp\022\022\n\nsession_id\030\004 \001(\t\"#\n\024Generat"
  "eTokenRequest\022\013\n\003key\030\001 \001(\t*\251\t\n\013VoicePres"
  "et\022\034\n\030VOICE_PRESET_UNSPECIFIED\020\000\022\031\n\025VOIC"
  "E_PRESET_FEMALE_1\020\001\022\031\n\025VOICE_PRESET_FEMA"
  "LE_2\020\002\022\031\n\025VOICE_PRESET_FEMALE_3\020\003\022\031\n\025VOI"
  "CE_PRESET_FEMALE_4\020\004\022\031\n\025VOICE_PRESET_FEM"
  "ALE_5\020\005\022\027\n\023VOICE_PRESET_MALE_1\020\006\022\027\n\023VOIC"
  "E_PRESET_MALE_2\020\007\022\027\n\023VOICE_PRESET_MALE_3"
  "\020\010\022\027\n\023VOICE_PRESET_MALE_4\020\t\022\027\n\023VOICE_PRE"
  "SET_MALE_5\020\n\022\037\n\033INWORLD_VOICE_PRESET_MAL"
  "E_1\020\013\022\037\n\033INWORLD_VOICE_PRESET_MALE_2\020\014\022!"
  "\n\035INWORLD_VOICE_PRESET_FEMALE_1\020\r\022!\n\035INW"
  "ORLD_VOICE_PRESET_FEMALE_2\020\016\022\037\n\033INWORLD_"
  "VOICE_PRESET_MALE_3\020\017\022\037\n\033INWORLD_VOICE_P"
  "RESET_MALE_4\020\020\022\037\n\033INWORLD_VOICE_PRESET_M"
  "ALE_5\020\021\022!\n\035INWORLD_VOICE_PRESET_FEMALE_3"
  "\020\022\022!\n\035INWORLD_VOICE_PRESET_FEMALE_4\020\023\022%\n"
  "!INWORLD_VOICE_PRESET_ROBOT_MALE_1\020\024\022%\n!"
  "INWORLD_VOICE_PRESET_ROBOT_MALE_2\020\025\022%\n!I"
  "NWORLD_VOICE_PRESET_ROBOT_MALE_3\020\026\022%\n!IN"
  "WORLD_VOICE_PRESET_ROBOT_MALE_4\020\027\022%\n!INW"
  "ORLD_VOICE_PRESET_ROBOT_MALE_5\020\030\022\'\n#INWO"
  "RLD_VOICE_PRESET_ROBOT_FEMALE_1\020\031\022\'\n#INW"
  "ORLD_VOICE_PRESET_ROBOT_FEMALE_2\020\032\022\'\n#IN"
  "WORLD_VOICE_PRESET_ROBOT_FEMALE_3\020\033\022\'\n#I"
  "NWORLD_VOICE_PRESET_ROBOT_FEMALE_4\020\034\022\036\n\032"
  "INWORLD_VOICE_PRESET_SPIKE\020\035\022!\n\035INWORLD_"
  "VOICE_PRESET_TWILIGHT\020\036\022#\n\037INWORLD_VOICE"
  "_PRESET_FLUTTERSHY\020\037\022$\n INWORLD_VOICE_PR"
  "ESET_ROBOT_SPIKE\020 \022\'\n#INWORLD_VOICE_PRES"
  "ET_ROBOT_TWILIGHT\020!\022)\n%INWORLD_VOICE_PRE"
  "SET_ROBOT_FLUTTERSHY\020\"2\270\007\n\013WorldEngine\022\177"
  "\n\007Session\022!.ai.inworld.packets.InworldPa"
  "cket\032!.ai.inworld.packets.InworldPacket\""
  "*\202\323\344\223\002$\022\023/v1/session/defaultZ\r\022\013/v1/sess"
  "ion(\0010\001\022\206\001\n\013CreateWorld\022%.ai.inworld.eng"
  "ine.CreateWorldRequest\032&.ai.inworld.engi"
  "ne.CreateWorldResponse\"(\202\323\344\223\002\"\"\035/v1/worl"
  "ds/{proto_world_name}:\001*\022\270\001\n\tLoadScene\022#"
  ".ai.inworld.engine.LoadSceneRequest\032$.ai"
  ".inworld.engine.LoadSceneResponse\"`\202\323\344\223\002"
  "Z\"%/v1/{name=workspaces/*/scenes/*}:load"
  ":\001*Z.\")/v1/{name=workspaces/*/characters"
  "/*}:load:\001*\022`\n\010LogError\022\".ai.inworld.eng"
  "ine.LogErrorRequest\032\026.google.protobuf.Em"
  "pty\"\030\202\323\344\223\002\022\"\r/v1/log:error:\001*\022}\n\014VoicePr"
  "eview\022&.ai.inworld.engine.VoicePreviewRe"
  "quest\032\'.ai.inworld.engine.VoicePreviewRe"
  "sponse\"\034\202\323\344\223\002\026\"\021/v1/voice:preview:\001*\022}\n\016"
  "ListBaseVoices\022(.ai.inworld.engine.ListB"
  "aseVoicesRequest\032).ai.inworld.engine.Lis"
  "tBaseVoicesResponce\"\026\202\323\344\223\002\020\022\016/v1/voice:b"
  "ase\022\203\001\n\rGenerateToken\022\'.ai.inworld.engin"
  "e.GenerateTokenRequest\032\036.ai.inworld.engi"
  "ne.AccessToken\")\202\323\344\223\002#\"\036/auth/v1/tokens/"
  "token:generate:\001*B\210\001\n\017ai.inworld.grpcB\027W"
  "orldEngineGrpcProtocolZMgithub.com/inwor"
  "ld-ai/inworld/serving/grpc-gateway/build"
  "/proto/engine/v1alpha\252\002\014Inworld.Grpcb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_world_2dengine_2eproto_deps[5] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_packets_2eproto,
  &::descriptor_table_voices_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_world_2dengine_2eproto_sccs[21] = {
  &scc_info_AccessToken_world_2dengine_2eproto.base,
  &scc_info_AudioSettings_world_2dengine_2eproto.base,
  &scc_info_CapabilitiesRequest_world_2dengine_2eproto.base,
  &scc_info_ClientRequest_world_2dengine_2eproto.base,
  &scc_info_CreateWorldRequest_world_2dengine_2eproto.base,
  &scc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto.base,
  &scc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto.base,
  &scc_info_CreateWorldResponse_world_2dengine_2eproto.base,
  &scc_info_CreateWorldResponse_Agent_world_2dengine_2eproto.base,
  &scc_info_GenerateTokenRequest_world_2dengine_2eproto.base,
  &scc_info_ListBaseVoicesRequest_world_2dengine_2eproto.base,
  &scc_info_ListBaseVoicesResponce_world_2dengine_2eproto.base,
  &scc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto.base,
  &scc_info_LoadSceneRequest_world_2dengine_2eproto.base,
  &scc_info_LoadSceneResponse_world_2dengine_2eproto.base,
  &scc_info_LoadSceneResponse_Agent_world_2dengine_2eproto.base,
  &scc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto.base,
  &scc_info_LogErrorRequest_world_2dengine_2eproto.base,
  &scc_info_UserRequest_world_2dengine_2eproto.base,
  &scc_info_VoicePreviewRequest_world_2dengine_2eproto.base,
  &scc_info_VoicePreviewResponse_world_2dengine_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_world_2dengine_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_world_2dengine_2eproto = {
  false, false, descriptor_table_protodef_world_2dengine_2eproto, "world-engine.proto", 4884,
  &descriptor_table_world_2dengine_2eproto_once, descriptor_table_world_2dengine_2eproto_sccs, descriptor_table_world_2dengine_2eproto_deps, 21, 5,
  schemas, file_default_instances, TableStruct_world_2dengine_2eproto::offsets,
  file_level_metadata_world_2dengine_2eproto, 21, file_level_enum_descriptors_world_2dengine_2eproto, file_level_service_descriptors_world_2dengine_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_world_2dengine_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_world_2dengine_2eproto)), true);
namespace ai {
namespace inworld {
namespace engine {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VoicePreset_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_world_2dengine_2eproto);
  return file_level_enum_descriptors_world_2dengine_2eproto[0];
}
bool VoicePreset_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CapabilitiesRequest::_Internal {
 public:
};

CapabilitiesRequest::CapabilitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CapabilitiesRequest)
}
CapabilitiesRequest::CapabilitiesRequest(const CapabilitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&audio_, &from.audio_,
    static_cast<size_t>(reinterpret_cast<char*>(&phoneme_info_) -
    reinterpret_cast<char*>(&audio_)) + sizeof(phoneme_info_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CapabilitiesRequest)
}

void CapabilitiesRequest::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&audio_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&phoneme_info_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(phoneme_info_));
}

CapabilitiesRequest::~CapabilitiesRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CapabilitiesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CapabilitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CapabilitiesRequest::ArenaDtor(void* object) {
  CapabilitiesRequest* _this = reinterpret_cast< CapabilitiesRequest* >(object);
  (void)_this;
}
void CapabilitiesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CapabilitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CapabilitiesRequest& CapabilitiesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CapabilitiesRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void CapabilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CapabilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phoneme_info_) -
      reinterpret_cast<char*>(&audio_)) + sizeof(phoneme_info_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CapabilitiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool audio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          audio_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          text_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool gestures = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          gestures_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool interruptions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          interruptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool triggers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          triggers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool emotions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          emotions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool animations = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          animations_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool turn_based_stt = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          turn_based_stt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool emotion_streaming = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          emotion_streaming_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool silence_events = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          silence_events_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool phoneme_info = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          phoneme_info_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CapabilitiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CapabilitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool audio = 1;
  if (this->audio() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_audio(), target);
  }

  // bool text = 2;
  if (this->text() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_text(), target);
  }

  // bool gestures = 3;
  if (this->gestures() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_gestures(), target);
  }

  // bool interruptions = 4;
  if (this->interruptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_interruptions(), target);
  }

  // bool triggers = 5;
  if (this->triggers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_triggers(), target);
  }

  // bool emotions = 6;
  if (this->emotions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_emotions(), target);
  }

  // bool animations = 7;
  if (this->animations() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_animations(), target);
  }

  // bool turn_based_stt = 8;
  if (this->turn_based_stt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_turn_based_stt(), target);
  }

  // bool emotion_streaming = 9;
  if (this->emotion_streaming() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_emotion_streaming(), target);
  }

  // bool silence_events = 10;
  if (this->silence_events() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_silence_events(), target);
  }

  // bool phoneme_info = 11;
  if (this->phoneme_info() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_phoneme_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CapabilitiesRequest)
  return target;
}

size_t CapabilitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CapabilitiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool audio = 1;
  if (this->audio() != 0) {
    total_size += 1 + 1;
  }

  // bool text = 2;
  if (this->text() != 0) {
    total_size += 1 + 1;
  }

  // bool gestures = 3;
  if (this->gestures() != 0) {
    total_size += 1 + 1;
  }

  // bool interruptions = 4;
  if (this->interruptions() != 0) {
    total_size += 1 + 1;
  }

  // bool triggers = 5;
  if (this->triggers() != 0) {
    total_size += 1 + 1;
  }

  // bool emotions = 6;
  if (this->emotions() != 0) {
    total_size += 1 + 1;
  }

  // bool animations = 7;
  if (this->animations() != 0) {
    total_size += 1 + 1;
  }

  // bool turn_based_stt = 8;
  if (this->turn_based_stt() != 0) {
    total_size += 1 + 1;
  }

  // bool emotion_streaming = 9;
  if (this->emotion_streaming() != 0) {
    total_size += 1 + 1;
  }

  // bool silence_events = 10;
  if (this->silence_events() != 0) {
    total_size += 1 + 1;
  }

  // bool phoneme_info = 11;
  if (this->phoneme_info() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CapabilitiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.CapabilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilitiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CapabilitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.CapabilitiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.CapabilitiesRequest)
    MergeFrom(*source);
  }
}

void CapabilitiesRequest::MergeFrom(const CapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CapabilitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio() != 0) {
    _internal_set_audio(from._internal_audio());
  }
  if (from.text() != 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.gestures() != 0) {
    _internal_set_gestures(from._internal_gestures());
  }
  if (from.interruptions() != 0) {
    _internal_set_interruptions(from._internal_interruptions());
  }
  if (from.triggers() != 0) {
    _internal_set_triggers(from._internal_triggers());
  }
  if (from.emotions() != 0) {
    _internal_set_emotions(from._internal_emotions());
  }
  if (from.animations() != 0) {
    _internal_set_animations(from._internal_animations());
  }
  if (from.turn_based_stt() != 0) {
    _internal_set_turn_based_stt(from._internal_turn_based_stt());
  }
  if (from.emotion_streaming() != 0) {
    _internal_set_emotion_streaming(from._internal_emotion_streaming());
  }
  if (from.silence_events() != 0) {
    _internal_set_silence_events(from._internal_silence_events());
  }
  if (from.phoneme_info() != 0) {
    _internal_set_phoneme_info(from._internal_phoneme_info());
  }
}

void CapabilitiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.CapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilitiesRequest::CopyFrom(const CapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilitiesRequest::IsInitialized() const {
  return true;
}

void CapabilitiesRequest::InternalSwap(CapabilitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapabilitiesRequest, phoneme_info_)
      + sizeof(CapabilitiesRequest::phoneme_info_)
      - PROTOBUF_FIELD_OFFSET(CapabilitiesRequest, audio_)>(
          reinterpret_cast<char*>(&audio_),
          reinterpret_cast<char*>(&other->audio_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CapabilitiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UserRequest::_Internal {
 public:
};

UserRequest::UserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.UserRequest)
}

void UserRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserRequest_world_2dengine_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.UserRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserRequest::ArenaDtor(void* object) {
  UserRequest* _this = reinterpret_cast< UserRequest* >(object);
  (void)_this;
}
void UserRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserRequest& UserRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.UserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.UserRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.UserRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UserRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.UserRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.UserRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.UserRequest.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.UserRequest)
  return target;
}

size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.UserRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UserRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.UserRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.UserRequest)
    MergeFrom(*source);
  }
}

void UserRequest::MergeFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void UserRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::InternalSwap(UserRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UserRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClientRequest::_Internal {
 public:
};

ClientRequest::ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ClientRequest)
}
ClientRequest::ClientRequest(const ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ClientRequest)
}

void ClientRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientRequest_world_2dengine_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ClientRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientRequest::ArenaDtor(void* object) {
  ClientRequest* _this = reinterpret_cast< ClientRequest* >(object);
  (void)_this;
}
void ClientRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientRequest& ClientRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.ClientRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.ClientRequest.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ClientRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ClientRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ClientRequest)
  return target;
}

size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ClientRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.ClientRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.ClientRequest)
    MergeFrom(*source);
  }
}

void ClientRequest::MergeFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void ClientRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequest::IsInitialized() const {
  return true;
}

void ClientRequest::InternalSwap(ClientRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateWorldRequest_CreateAgentRequest::_Internal {
 public:
};

CreateWorldRequest_CreateAgentRequest::CreateWorldRequest_CreateAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
}
CreateWorldRequest_CreateAgentRequest::CreateWorldRequest_CreateAgentRequest(const CreateWorldRequest_CreateAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  brain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_brain_name().empty()) {
    brain_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_brain_name(), 
      GetArena());
  }
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_language_code().empty()) {
    language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_language_code(), 
      GetArena());
  }
  voice_preset_ = from.voice_preset_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
}

void CreateWorldRequest_CreateAgentRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto.base);
  brain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  voice_preset_ = 0;
}

CreateWorldRequest_CreateAgentRequest::~CreateWorldRequest_CreateAgentRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateWorldRequest_CreateAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  brain_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateWorldRequest_CreateAgentRequest::ArenaDtor(void* object) {
  CreateWorldRequest_CreateAgentRequest* _this = reinterpret_cast< CreateWorldRequest_CreateAgentRequest* >(object);
  (void)_this;
}
void CreateWorldRequest_CreateAgentRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateWorldRequest_CreateAgentRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateWorldRequest_CreateAgentRequest& CreateWorldRequest_CreateAgentRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateWorldRequest_CreateAgentRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void CreateWorldRequest_CreateAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  brain_name_.ClearToEmpty();
  language_code_.ClearToEmpty();
  voice_preset_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldRequest_CreateAgentRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string brain_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_brain_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.brain_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string language_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_language_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.language_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.VoicePreset voice_preset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_voice_preset(static_cast<::ai::inworld::engine::VoicePreset>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateWorldRequest_CreateAgentRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string brain_name = 1;
  if (this->brain_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_brain_name().data(), static_cast<int>(this->_internal_brain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.brain_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_brain_name(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.language_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_language_code(), target);
  }

  // .ai.inworld.engine.VoicePreset voice_preset = 3;
  if (this->voice_preset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_voice_preset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  return target;
}

size_t CreateWorldRequest_CreateAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string brain_name = 1;
  if (this->brain_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_brain_name());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // .ai.inworld.engine.VoicePreset voice_preset = 3;
  if (this->voice_preset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_voice_preset());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorldRequest_CreateAgentRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorldRequest_CreateAgentRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateWorldRequest_CreateAgentRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
    MergeFrom(*source);
  }
}

void CreateWorldRequest_CreateAgentRequest::MergeFrom(const CreateWorldRequest_CreateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.brain_name().size() > 0) {
    _internal_set_brain_name(from._internal_brain_name());
  }
  if (from.language_code().size() > 0) {
    _internal_set_language_code(from._internal_language_code());
  }
  if (from.voice_preset() != 0) {
    _internal_set_voice_preset(from._internal_voice_preset());
  }
}

void CreateWorldRequest_CreateAgentRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorldRequest_CreateAgentRequest::CopyFrom(const CreateWorldRequest_CreateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldRequest_CreateAgentRequest::IsInitialized() const {
  return true;
}

void CreateWorldRequest_CreateAgentRequest::InternalSwap(CreateWorldRequest_CreateAgentRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  brain_name_.Swap(&other->brain_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  language_code_.Swap(&other->language_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(voice_preset_, other->voice_preset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldRequest_CreateAgentRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateWorldRequest_ClientRequest::_Internal {
 public:
};

CreateWorldRequest_ClientRequest::CreateWorldRequest_ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldRequest.ClientRequest)
}
CreateWorldRequest_ClientRequest::CreateWorldRequest_ClientRequest(const CreateWorldRequest_ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldRequest.ClientRequest)
}

void CreateWorldRequest_ClientRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateWorldRequest_ClientRequest::~CreateWorldRequest_ClientRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateWorldRequest_ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateWorldRequest_ClientRequest::ArenaDtor(void* object) {
  CreateWorldRequest_ClientRequest* _this = reinterpret_cast< CreateWorldRequest_ClientRequest* >(object);
  (void)_this;
}
void CreateWorldRequest_ClientRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateWorldRequest_ClientRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateWorldRequest_ClientRequest& CreateWorldRequest_ClientRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateWorldRequest_ClientRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void CreateWorldRequest_ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldRequest_ClientRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.ClientRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.ClientRequest.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateWorldRequest_ClientRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.ClientRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.ClientRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  return target;
}

size_t CreateWorldRequest_ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorldRequest_ClientRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorldRequest_ClientRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateWorldRequest_ClientRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.CreateWorldRequest.ClientRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.CreateWorldRequest.ClientRequest)
    MergeFrom(*source);
  }
}

void CreateWorldRequest_ClientRequest::MergeFrom(const CreateWorldRequest_ClientRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
}

void CreateWorldRequest_ClientRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorldRequest_ClientRequest::CopyFrom(const CreateWorldRequest_ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldRequest_ClientRequest::IsInitialized() const {
  return true;
}

void CreateWorldRequest_ClientRequest::InternalSwap(CreateWorldRequest_ClientRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldRequest_ClientRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateWorldRequest::_Internal {
 public:
  static const ::ai::inworld::engine::CapabilitiesRequest& capabilities(const CreateWorldRequest* msg);
  static const ::ai::inworld::engine::UserRequest& user(const CreateWorldRequest* msg);
  static const ::ai::inworld::engine::CreateWorldRequest_ClientRequest& client(const CreateWorldRequest* msg);
};

const ::ai::inworld::engine::CapabilitiesRequest&
CreateWorldRequest::_Internal::capabilities(const CreateWorldRequest* msg) {
  return *msg->capabilities_;
}
const ::ai::inworld::engine::UserRequest&
CreateWorldRequest::_Internal::user(const CreateWorldRequest* msg) {
  return *msg->user_;
}
const ::ai::inworld::engine::CreateWorldRequest_ClientRequest&
CreateWorldRequest::_Internal::client(const CreateWorldRequest* msg) {
  return *msg->client_;
}
CreateWorldRequest::CreateWorldRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  create_agent_requests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldRequest)
}
CreateWorldRequest::CreateWorldRequest(const CreateWorldRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      create_agent_requests_(from.create_agent_requests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  proto_world_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_proto_world_name().empty()) {
    proto_world_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_proto_world_name(), 
      GetArena());
  }
  if (from._internal_has_capabilities()) {
    capabilities_ = new ::ai::inworld::engine::CapabilitiesRequest(*from.capabilities_);
  } else {
    capabilities_ = nullptr;
  }
  if (from._internal_has_user()) {
    user_ = new ::ai::inworld::engine::UserRequest(*from.user_);
  } else {
    user_ = nullptr;
  }
  if (from._internal_has_client()) {
    client_ = new ::ai::inworld::engine::CreateWorldRequest_ClientRequest(*from.client_);
  } else {
    client_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldRequest)
}

void CreateWorldRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateWorldRequest_world_2dengine_2eproto.base);
  proto_world_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&capabilities_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&client_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(client_));
}

CreateWorldRequest::~CreateWorldRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateWorldRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  proto_world_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete capabilities_;
  if (this != internal_default_instance()) delete user_;
  if (this != internal_default_instance()) delete client_;
}

void CreateWorldRequest::ArenaDtor(void* object) {
  CreateWorldRequest* _this = reinterpret_cast< CreateWorldRequest* >(object);
  (void)_this;
}
void CreateWorldRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateWorldRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateWorldRequest& CreateWorldRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateWorldRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void CreateWorldRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  create_agent_requests_.Clear();
  proto_world_name_.ClearToEmpty();
  if (GetArena() == nullptr && capabilities_ != nullptr) {
    delete capabilities_;
  }
  capabilities_ = nullptr;
  if (GetArena() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  if (GetArena() == nullptr && client_ != nullptr) {
    delete client_;
  }
  client_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string proto_world_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_proto_world_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.proto_world_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.CreateWorldRequest.CreateAgentRequest create_agent_requests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_create_agent_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.CapabilitiesRequest capabilities = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.UserRequest user = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.CreateWorldRequest.ClientRequest client = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_client(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateWorldRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string proto_world_name = 1;
  if (this->proto_world_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto_world_name().data(), static_cast<int>(this->_internal_proto_world_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.proto_world_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_proto_world_name(), target);
  }

  // repeated .ai.inworld.engine.CreateWorldRequest.CreateAgentRequest create_agent_requests = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_create_agent_requests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_create_agent_requests(i), target, stream);
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 3;
  if (this->has_capabilities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::capabilities(this), target, stream);
  }

  // .ai.inworld.engine.UserRequest user = 4;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::user(this), target, stream);
  }

  // .ai.inworld.engine.CreateWorldRequest.ClientRequest client = 5;
  if (this->has_client()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::client(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldRequest)
  return target;
}

size_t CreateWorldRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.CreateWorldRequest.CreateAgentRequest create_agent_requests = 2;
  total_size += 1UL * this->_internal_create_agent_requests_size();
  for (const auto& msg : this->create_agent_requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string proto_world_name = 1;
  if (this->proto_world_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto_world_name());
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 3;
  if (this->has_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *capabilities_);
  }

  // .ai.inworld.engine.UserRequest user = 4;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // .ai.inworld.engine.CreateWorldRequest.ClientRequest client = 5;
  if (this->has_client()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *client_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorldRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.CreateWorldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorldRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateWorldRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.CreateWorldRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.CreateWorldRequest)
    MergeFrom(*source);
  }
}

void CreateWorldRequest::MergeFrom(const CreateWorldRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  create_agent_requests_.MergeFrom(from.create_agent_requests_);
  if (from.proto_world_name().size() > 0) {
    _internal_set_proto_world_name(from._internal_proto_world_name());
  }
  if (from.has_capabilities()) {
    _internal_mutable_capabilities()->::ai::inworld::engine::CapabilitiesRequest::MergeFrom(from._internal_capabilities());
  }
  if (from.has_user()) {
    _internal_mutable_user()->::ai::inworld::engine::UserRequest::MergeFrom(from._internal_user());
  }
  if (from.has_client()) {
    _internal_mutable_client()->::ai::inworld::engine::CreateWorldRequest_ClientRequest::MergeFrom(from._internal_client());
  }
}

void CreateWorldRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.CreateWorldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorldRequest::CopyFrom(const CreateWorldRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldRequest::IsInitialized() const {
  return true;
}

void CreateWorldRequest::InternalSwap(CreateWorldRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  create_agent_requests_.InternalSwap(&other->create_agent_requests_);
  proto_world_name_.Swap(&other->proto_world_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateWorldRequest, client_)
      + sizeof(CreateWorldRequest::client_)
      - PROTOBUF_FIELD_OFFSET(CreateWorldRequest, capabilities_)>(
          reinterpret_cast<char*>(&capabilities_),
          reinterpret_cast<char*>(&other->capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateWorldResponse_Agent::_Internal {
 public:
};

CreateWorldResponse_Agent::CreateWorldResponse_Agent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldResponse.Agent)
}
CreateWorldResponse_Agent::CreateWorldResponse_Agent(const CreateWorldResponse_Agent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  agent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_id().empty()) {
    agent_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_agent_id(), 
      GetArena());
  }
  brain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_brain_name().empty()) {
    brain_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_brain_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldResponse.Agent)
}

void CreateWorldResponse_Agent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateWorldResponse_Agent_world_2dengine_2eproto.base);
  agent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  brain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateWorldResponse_Agent::~CreateWorldResponse_Agent() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldResponse.Agent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateWorldResponse_Agent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  agent_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  brain_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateWorldResponse_Agent::ArenaDtor(void* object) {
  CreateWorldResponse_Agent* _this = reinterpret_cast< CreateWorldResponse_Agent* >(object);
  (void)_this;
}
void CreateWorldResponse_Agent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateWorldResponse_Agent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateWorldResponse_Agent& CreateWorldResponse_Agent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateWorldResponse_Agent_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void CreateWorldResponse_Agent::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldResponse.Agent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agent_id_.ClearToEmpty();
  brain_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldResponse_Agent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string agent_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldResponse.Agent.agent_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string brain_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_brain_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldResponse.Agent.brain_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateWorldResponse_Agent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldResponse.Agent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_id = 1;
  if (this->agent_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldResponse.Agent.agent_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_id(), target);
  }

  // string brain_name = 2;
  if (this->brain_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_brain_name().data(), static_cast<int>(this->_internal_brain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldResponse.Agent.brain_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_brain_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldResponse.Agent)
  return target;
}

size_t CreateWorldResponse_Agent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldResponse.Agent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_id = 1;
  if (this->agent_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // string brain_name = 2;
  if (this->brain_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_brain_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorldResponse_Agent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.CreateWorldResponse.Agent)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorldResponse_Agent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateWorldResponse_Agent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.CreateWorldResponse.Agent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.CreateWorldResponse.Agent)
    MergeFrom(*source);
  }
}

void CreateWorldResponse_Agent::MergeFrom(const CreateWorldResponse_Agent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldResponse.Agent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.agent_id().size() > 0) {
    _internal_set_agent_id(from._internal_agent_id());
  }
  if (from.brain_name().size() > 0) {
    _internal_set_brain_name(from._internal_brain_name());
  }
}

void CreateWorldResponse_Agent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.CreateWorldResponse.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorldResponse_Agent::CopyFrom(const CreateWorldResponse_Agent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldResponse.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldResponse_Agent::IsInitialized() const {
  return true;
}

void CreateWorldResponse_Agent::InternalSwap(CreateWorldResponse_Agent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  agent_id_.Swap(&other->agent_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  brain_name_.Swap(&other->brain_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldResponse_Agent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateWorldResponse::_Internal {
 public:
};

CreateWorldResponse::CreateWorldResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  agents_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldResponse)
}
CreateWorldResponse::CreateWorldResponse(const CreateWorldResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      agents_(from.agents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldResponse)
}

void CreateWorldResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateWorldResponse_world_2dengine_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateWorldResponse::~CreateWorldResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateWorldResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateWorldResponse::ArenaDtor(void* object) {
  CreateWorldResponse* _this = reinterpret_cast< CreateWorldResponse* >(object);
  (void)_this;
}
void CreateWorldResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateWorldResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateWorldResponse& CreateWorldResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateWorldResponse_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void CreateWorldResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agents_.Clear();
  key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.CreateWorldResponse.Agent agents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.CreateWorldResponse.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateWorldResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.CreateWorldResponse.Agent agents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_agents_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_agents(i), target, stream);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldResponse.key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldResponse)
  return target;
}

size_t CreateWorldResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.CreateWorldResponse.Agent agents = 1;
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateWorldResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.CreateWorldResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateWorldResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateWorldResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.CreateWorldResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.CreateWorldResponse)
    MergeFrom(*source);
  }
}

void CreateWorldResponse::MergeFrom(const CreateWorldResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  agents_.MergeFrom(from.agents_);
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
}

void CreateWorldResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.CreateWorldResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateWorldResponse::CopyFrom(const CreateWorldResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldResponse::IsInitialized() const {
  return true;
}

void CreateWorldResponse::InternalSwap(CreateWorldResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  agents_.InternalSwap(&other->agents_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoadSceneRequest::_Internal {
 public:
  static const ::ai::inworld::engine::CapabilitiesRequest& capabilities(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::UserRequest& user(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::ClientRequest& client(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::AudioSettings& audio_settings(const LoadSceneRequest* msg);
};

const ::ai::inworld::engine::CapabilitiesRequest&
LoadSceneRequest::_Internal::capabilities(const LoadSceneRequest* msg) {
  return *msg->capabilities_;
}
const ::ai::inworld::engine::UserRequest&
LoadSceneRequest::_Internal::user(const LoadSceneRequest* msg) {
  return *msg->user_;
}
const ::ai::inworld::engine::ClientRequest&
LoadSceneRequest::_Internal::client(const LoadSceneRequest* msg) {
  return *msg->client_;
}
const ::ai::inworld::engine::AudioSettings&
LoadSceneRequest::_Internal::audio_settings(const LoadSceneRequest* msg) {
  return *msg->audio_settings_;
}
LoadSceneRequest::LoadSceneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneRequest)
}
LoadSceneRequest::LoadSceneRequest(const LoadSceneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_capabilities()) {
    capabilities_ = new ::ai::inworld::engine::CapabilitiesRequest(*from.capabilities_);
  } else {
    capabilities_ = nullptr;
  }
  if (from._internal_has_user()) {
    user_ = new ::ai::inworld::engine::UserRequest(*from.user_);
  } else {
    user_ = nullptr;
  }
  if (from._internal_has_client()) {
    client_ = new ::ai::inworld::engine::ClientRequest(*from.client_);
  } else {
    client_ = nullptr;
  }
  if (from._internal_has_audio_settings()) {
    audio_settings_ = new ::ai::inworld::engine::AudioSettings(*from.audio_settings_);
  } else {
    audio_settings_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneRequest)
}

void LoadSceneRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadSceneRequest_world_2dengine_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&capabilities_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&audio_settings_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(audio_settings_));
}

LoadSceneRequest::~LoadSceneRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadSceneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete capabilities_;
  if (this != internal_default_instance()) delete user_;
  if (this != internal_default_instance()) delete client_;
  if (this != internal_default_instance()) delete audio_settings_;
}

void LoadSceneRequest::ArenaDtor(void* object) {
  LoadSceneRequest* _this = reinterpret_cast< LoadSceneRequest* >(object);
  (void)_this;
}
void LoadSceneRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadSceneRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadSceneRequest& LoadSceneRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadSceneRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void LoadSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && capabilities_ != nullptr) {
    delete capabilities_;
  }
  capabilities_ = nullptr;
  if (GetArena() == nullptr && user_ != nullptr) {
    delete user_;
  }
  user_ = nullptr;
  if (GetArena() == nullptr && client_ != nullptr) {
    delete client_;
  }
  client_ = nullptr;
  if (GetArena() == nullptr && audio_settings_ != nullptr) {
    delete audio_settings_;
  }
  audio_settings_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.CapabilitiesRequest capabilities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_capabilities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.UserRequest user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.ClientRequest client = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_client(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.AudioSettings audio_settings = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadSceneRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 2;
  if (this->has_capabilities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::capabilities(this), target, stream);
  }

  // .ai.inworld.engine.UserRequest user = 3;
  if (this->has_user()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::user(this), target, stream);
  }

  // .ai.inworld.engine.ClientRequest client = 4;
  if (this->has_client()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::client(this), target, stream);
  }

  // .ai.inworld.engine.AudioSettings audio_settings = 5;
  if (this->has_audio_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::audio_settings(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneRequest)
  return target;
}

size_t LoadSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 2;
  if (this->has_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *capabilities_);
  }

  // .ai.inworld.engine.UserRequest user = 3;
  if (this->has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // .ai.inworld.engine.ClientRequest client = 4;
  if (this->has_client()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *client_);
  }

  // .ai.inworld.engine.AudioSettings audio_settings = 5;
  if (this->has_audio_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_settings_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadSceneRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.LoadSceneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadSceneRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadSceneRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.LoadSceneRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.LoadSceneRequest)
    MergeFrom(*source);
  }
}

void LoadSceneRequest::MergeFrom(const LoadSceneRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_capabilities()) {
    _internal_mutable_capabilities()->::ai::inworld::engine::CapabilitiesRequest::MergeFrom(from._internal_capabilities());
  }
  if (from.has_user()) {
    _internal_mutable_user()->::ai::inworld::engine::UserRequest::MergeFrom(from._internal_user());
  }
  if (from.has_client()) {
    _internal_mutable_client()->::ai::inworld::engine::ClientRequest::MergeFrom(from._internal_client());
  }
  if (from.has_audio_settings()) {
    _internal_mutable_audio_settings()->::ai::inworld::engine::AudioSettings::MergeFrom(from._internal_audio_settings());
  }
}

void LoadSceneRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.LoadSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadSceneRequest::CopyFrom(const LoadSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneRequest::IsInitialized() const {
  return true;
}

void LoadSceneRequest::InternalSwap(LoadSceneRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadSceneRequest, audio_settings_)
      + sizeof(LoadSceneRequest::audio_settings_)
      - PROTOBUF_FIELD_OFFSET(LoadSceneRequest, capabilities_)>(
          reinterpret_cast<char*>(&capabilities_),
          reinterpret_cast<char*>(&other->capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AudioSettings::_Internal {
 public:
};

AudioSettings::AudioSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.AudioSettings)
}
AudioSettings::AudioSettings(const AudioSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&stt_sample_rate_hertz_, &from.stt_sample_rate_hertz_,
    static_cast<size_t>(reinterpret_cast<char*>(&tts_sample_rate_hertz_) -
    reinterpret_cast<char*>(&stt_sample_rate_hertz_)) + sizeof(tts_sample_rate_hertz_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.AudioSettings)
}

void AudioSettings::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&stt_sample_rate_hertz_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&tts_sample_rate_hertz_) -
      reinterpret_cast<char*>(&stt_sample_rate_hertz_)) + sizeof(tts_sample_rate_hertz_));
}

AudioSettings::~AudioSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.AudioSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AudioSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AudioSettings::ArenaDtor(void* object) {
  AudioSettings* _this = reinterpret_cast< AudioSettings* >(object);
  (void)_this;
}
void AudioSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AudioSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AudioSettings& AudioSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AudioSettings_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void AudioSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.AudioSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stt_sample_rate_hertz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tts_sample_rate_hertz_) -
      reinterpret_cast<char*>(&stt_sample_rate_hertz_)) + sizeof(tts_sample_rate_hertz_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AudioSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 stt_sample_rate_hertz = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          stt_sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 tts_sample_rate_hertz = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          tts_sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AudioSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.AudioSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stt_sample_rate_hertz = 1;
  if (this->stt_sample_rate_hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_stt_sample_rate_hertz(), target);
  }

  // uint32 tts_sample_rate_hertz = 2;
  if (this->tts_sample_rate_hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_tts_sample_rate_hertz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.AudioSettings)
  return target;
}

size_t AudioSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.AudioSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 stt_sample_rate_hertz = 1;
  if (this->stt_sample_rate_hertz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stt_sample_rate_hertz());
  }

  // uint32 tts_sample_rate_hertz = 2;
  if (this->tts_sample_rate_hertz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tts_sample_rate_hertz());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.AudioSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AudioSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.AudioSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.AudioSettings)
    MergeFrom(*source);
  }
}

void AudioSettings::MergeFrom(const AudioSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.AudioSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stt_sample_rate_hertz() != 0) {
    _internal_set_stt_sample_rate_hertz(from._internal_stt_sample_rate_hertz());
  }
  if (from.tts_sample_rate_hertz() != 0) {
    _internal_set_tts_sample_rate_hertz(from._internal_tts_sample_rate_hertz());
  }
}

void AudioSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.AudioSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioSettings::CopyFrom(const AudioSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.AudioSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioSettings::IsInitialized() const {
  return true;
}

void AudioSettings::InternalSwap(AudioSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioSettings, tts_sample_rate_hertz_)
      + sizeof(AudioSettings::tts_sample_rate_hertz_)
      - PROTOBUF_FIELD_OFFSET(AudioSettings, stt_sample_rate_hertz_)>(
          reinterpret_cast<char*>(&stt_sample_rate_hertz_),
          reinterpret_cast<char*>(&other->stt_sample_rate_hertz_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoadSceneResponse_Agent_CharacterAssets::_Internal {
 public:
};

LoadSceneResponse_Agent_CharacterAssets::LoadSceneResponse_Agent_CharacterAssets(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
}
LoadSceneResponse_Agent_CharacterAssets::LoadSceneResponse_Agent_CharacterAssets(const LoadSceneResponse_Agent_CharacterAssets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_model_uri().empty()) {
    rpm_model_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_model_uri(), 
      GetArena());
  }
  rpm_image_uri_portrait_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    rpm_image_uri_portrait_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri_portrait(), 
      GetArena());
  }
  rpm_image_uri_posture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri_posture().empty()) {
    rpm_image_uri_posture_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri_posture(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
}

void LoadSceneResponse_Agent_CharacterAssets::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto.base);
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_portrait_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_posture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LoadSceneResponse_Agent_CharacterAssets::~LoadSceneResponse_Agent_CharacterAssets() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadSceneResponse_Agent_CharacterAssets::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rpm_model_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_portrait_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_posture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoadSceneResponse_Agent_CharacterAssets::ArenaDtor(void* object) {
  LoadSceneResponse_Agent_CharacterAssets* _this = reinterpret_cast< LoadSceneResponse_Agent_CharacterAssets* >(object);
  (void)_this;
}
void LoadSceneResponse_Agent_CharacterAssets::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadSceneResponse_Agent_CharacterAssets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadSceneResponse_Agent_CharacterAssets& LoadSceneResponse_Agent_CharacterAssets::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadSceneResponse_Agent_CharacterAssets_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void LoadSceneResponse_Agent_CharacterAssets::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rpm_model_uri_.ClearToEmpty();
  rpm_image_uri_portrait_.ClearToEmpty();
  rpm_image_uri_posture_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneResponse_Agent_CharacterAssets::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rpm_model_uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_model_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri_portrait = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rpm_image_uri_portrait();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_portrait"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri_posture = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_rpm_image_uri_posture();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_posture"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadSceneResponse_Agent_CharacterAssets::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpm_model_uri = 1;
  if (this->rpm_model_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rpm_model_uri(), target);
  }

  // string rpm_image_uri_portrait = 2;
  if (this->rpm_image_uri_portrait().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_portrait().data(), static_cast<int>(this->_internal_rpm_image_uri_portrait().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_portrait");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_image_uri_portrait(), target);
  }

  // string rpm_image_uri_posture = 3;
  if (this->rpm_image_uri_posture().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_posture().data(), static_cast<int>(this->_internal_rpm_image_uri_posture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_posture");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rpm_image_uri_posture(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  return target;
}

size_t LoadSceneResponse_Agent_CharacterAssets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rpm_model_uri = 1;
  if (this->rpm_model_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  // string rpm_image_uri_portrait = 2;
  if (this->rpm_image_uri_portrait().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_portrait());
  }

  // string rpm_image_uri_posture = 3;
  if (this->rpm_image_uri_posture().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_posture());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadSceneResponse_Agent_CharacterAssets::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadSceneResponse_Agent_CharacterAssets* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadSceneResponse_Agent_CharacterAssets>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
    MergeFrom(*source);
  }
}

void LoadSceneResponse_Agent_CharacterAssets::MergeFrom(const LoadSceneResponse_Agent_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rpm_model_uri().size() > 0) {
    _internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
  if (from.rpm_image_uri_portrait().size() > 0) {
    _internal_set_rpm_image_uri_portrait(from._internal_rpm_image_uri_portrait());
  }
  if (from.rpm_image_uri_posture().size() > 0) {
    _internal_set_rpm_image_uri_posture(from._internal_rpm_image_uri_posture());
  }
}

void LoadSceneResponse_Agent_CharacterAssets::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadSceneResponse_Agent_CharacterAssets::CopyFrom(const LoadSceneResponse_Agent_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneResponse_Agent_CharacterAssets::IsInitialized() const {
  return true;
}

void LoadSceneResponse_Agent_CharacterAssets::InternalSwap(LoadSceneResponse_Agent_CharacterAssets* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rpm_model_uri_.Swap(&other->rpm_model_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_portrait_.Swap(&other->rpm_image_uri_portrait_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_posture_.Swap(&other->rpm_image_uri_posture_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneResponse_Agent_CharacterAssets::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoadSceneResponse_Agent::_Internal {
 public:
  static const ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets& character_assets(const LoadSceneResponse_Agent* msg);
};

const ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets&
LoadSceneResponse_Agent::_Internal::character_assets(const LoadSceneResponse_Agent* msg) {
  return *msg->character_assets_;
}
LoadSceneResponse_Agent::LoadSceneResponse_Agent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneResponse.Agent)
}
LoadSceneResponse_Agent::LoadSceneResponse_Agent(const LoadSceneResponse_Agent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  agent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_agent_id().empty()) {
    agent_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_agent_id(), 
      GetArena());
  }
  brain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_brain_name().empty()) {
    brain_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_brain_name(), 
      GetArena());
  }
  given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_given_name().empty()) {
    given_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_given_name(), 
      GetArena());
  }
  if (from._internal_has_character_assets()) {
    character_assets_ = new ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets(*from.character_assets_);
  } else {
    character_assets_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneResponse.Agent)
}

void LoadSceneResponse_Agent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadSceneResponse_Agent_world_2dengine_2eproto.base);
  agent_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  brain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  character_assets_ = nullptr;
}

LoadSceneResponse_Agent::~LoadSceneResponse_Agent() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneResponse.Agent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadSceneResponse_Agent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  agent_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  brain_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  given_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete character_assets_;
}

void LoadSceneResponse_Agent::ArenaDtor(void* object) {
  LoadSceneResponse_Agent* _this = reinterpret_cast< LoadSceneResponse_Agent* >(object);
  (void)_this;
}
void LoadSceneResponse_Agent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadSceneResponse_Agent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadSceneResponse_Agent& LoadSceneResponse_Agent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadSceneResponse_Agent_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void LoadSceneResponse_Agent::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneResponse.Agent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agent_id_.ClearToEmpty();
  brain_name_.ClearToEmpty();
  given_name_.ClearToEmpty();
  if (GetArena() == nullptr && character_assets_ != nullptr) {
    delete character_assets_;
  }
  character_assets_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneResponse_Agent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string agent_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.agent_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string brain_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_brain_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.brain_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string given_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_given_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.given_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets character_assets = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_assets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadSceneResponse_Agent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneResponse.Agent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_id = 1;
  if (this->agent_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.agent_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_id(), target);
  }

  // string brain_name = 2;
  if (this->brain_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_brain_name().data(), static_cast<int>(this->_internal_brain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.brain_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_brain_name(), target);
  }

  // string given_name = 3;
  if (this->given_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_given_name().data(), static_cast<int>(this->_internal_given_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.given_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_given_name(), target);
  }

  // .ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets character_assets = 4;
  if (this->has_character_assets()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::character_assets(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneResponse.Agent)
  return target;
}

size_t LoadSceneResponse_Agent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneResponse.Agent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_id = 1;
  if (this->agent_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // string brain_name = 2;
  if (this->brain_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_brain_name());
  }

  // string given_name = 3;
  if (this->given_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_given_name());
  }

  // .ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets character_assets = 4;
  if (this->has_character_assets()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *character_assets_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadSceneResponse_Agent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.LoadSceneResponse.Agent)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadSceneResponse_Agent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadSceneResponse_Agent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.LoadSceneResponse.Agent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.LoadSceneResponse.Agent)
    MergeFrom(*source);
  }
}

void LoadSceneResponse_Agent::MergeFrom(const LoadSceneResponse_Agent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneResponse.Agent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.agent_id().size() > 0) {
    _internal_set_agent_id(from._internal_agent_id());
  }
  if (from.brain_name().size() > 0) {
    _internal_set_brain_name(from._internal_brain_name());
  }
  if (from.given_name().size() > 0) {
    _internal_set_given_name(from._internal_given_name());
  }
  if (from.has_character_assets()) {
    _internal_mutable_character_assets()->::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets::MergeFrom(from._internal_character_assets());
  }
}

void LoadSceneResponse_Agent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.LoadSceneResponse.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadSceneResponse_Agent::CopyFrom(const LoadSceneResponse_Agent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneResponse.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneResponse_Agent::IsInitialized() const {
  return true;
}

void LoadSceneResponse_Agent::InternalSwap(LoadSceneResponse_Agent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  agent_id_.Swap(&other->agent_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  brain_name_.Swap(&other->brain_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  given_name_.Swap(&other->given_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(character_assets_, other->character_assets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneResponse_Agent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LoadSceneResponse::_Internal {
 public:
};

LoadSceneResponse::LoadSceneResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  agents_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneResponse)
}
LoadSceneResponse::LoadSceneResponse(const LoadSceneResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      agents_(from.agents_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneResponse)
}

void LoadSceneResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadSceneResponse_world_2dengine_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LoadSceneResponse::~LoadSceneResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadSceneResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoadSceneResponse::ArenaDtor(void* object) {
  LoadSceneResponse* _this = reinterpret_cast< LoadSceneResponse* >(object);
  (void)_this;
}
void LoadSceneResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadSceneResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadSceneResponse& LoadSceneResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadSceneResponse_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void LoadSceneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  agents_.Clear();
  key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.LoadSceneResponse.Agent agents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadSceneResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.LoadSceneResponse.Agent agents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_agents_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_agents(i), target, stream);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneResponse)
  return target;
}

size_t LoadSceneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.LoadSceneResponse.Agent agents = 1;
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadSceneResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.LoadSceneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadSceneResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadSceneResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.LoadSceneResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.LoadSceneResponse)
    MergeFrom(*source);
  }
}

void LoadSceneResponse::MergeFrom(const LoadSceneResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  agents_.MergeFrom(from.agents_);
  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
}

void LoadSceneResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.LoadSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadSceneResponse::CopyFrom(const LoadSceneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneResponse::IsInitialized() const {
  return true;
}

void LoadSceneResponse::InternalSwap(LoadSceneResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  agents_.InternalSwap(&other->agents_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class LogErrorRequest::_Internal {
 public:
};

LogErrorRequest::LogErrorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LogErrorRequest)
}
LogErrorRequest::LogErrorRequest(const LogErrorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LogErrorRequest)
}

void LogErrorRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogErrorRequest_world_2dengine_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LogErrorRequest::~LogErrorRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LogErrorRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LogErrorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LogErrorRequest::ArenaDtor(void* object) {
  LogErrorRequest* _this = reinterpret_cast< LogErrorRequest* >(object);
  (void)_this;
}
void LogErrorRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogErrorRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogErrorRequest& LogErrorRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogErrorRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void LogErrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LogErrorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogErrorRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LogErrorRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.LogErrorRequest.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogErrorRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LogErrorRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LogErrorRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LogErrorRequest.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LogErrorRequest)
  return target;
}

size_t LogErrorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LogErrorRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogErrorRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.LogErrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogErrorRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogErrorRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.LogErrorRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.LogErrorRequest)
    MergeFrom(*source);
  }
}

void LogErrorRequest::MergeFrom(const LogErrorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LogErrorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void LogErrorRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.LogErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogErrorRequest::CopyFrom(const LogErrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LogErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogErrorRequest::IsInitialized() const {
  return true;
}

void LogErrorRequest::InternalSwap(LogErrorRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata LogErrorRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoicePreviewRequest::_Internal {
 public:
  static const ::ai::inworld::packets::EmotionEvent& emotions(const VoicePreviewRequest* msg);
  static const ::ai::inworld::voices::Voice& voice(const VoicePreviewRequest* msg);
};

const ::ai::inworld::packets::EmotionEvent&
VoicePreviewRequest::_Internal::emotions(const VoicePreviewRequest* msg) {
  return *msg->emotions_;
}
const ::ai::inworld::voices::Voice&
VoicePreviewRequest::_Internal::voice(const VoicePreviewRequest* msg) {
  return *msg->voice_;
}
void VoicePreviewRequest::clear_emotions() {
  if (GetArena() == nullptr && emotions_ != nullptr) {
    delete emotions_;
  }
  emotions_ = nullptr;
}
void VoicePreviewRequest::clear_voice() {
  if (GetArena() == nullptr && voice_ != nullptr) {
    delete voice_;
  }
  voice_ = nullptr;
}
VoicePreviewRequest::VoicePreviewRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.VoicePreviewRequest)
}
VoicePreviewRequest::VoicePreviewRequest(const VoicePreviewRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  if (from._internal_has_emotions()) {
    emotions_ = new ::ai::inworld::packets::EmotionEvent(*from.emotions_);
  } else {
    emotions_ = nullptr;
  }
  if (from._internal_has_voice()) {
    voice_ = new ::ai::inworld::voices::Voice(*from.voice_);
  } else {
    voice_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.VoicePreviewRequest)
}

void VoicePreviewRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VoicePreviewRequest_world_2dengine_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&emotions_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&voice_) -
      reinterpret_cast<char*>(&emotions_)) + sizeof(voice_));
}

VoicePreviewRequest::~VoicePreviewRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.VoicePreviewRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoicePreviewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete emotions_;
  if (this != internal_default_instance()) delete voice_;
}

void VoicePreviewRequest::ArenaDtor(void* object) {
  VoicePreviewRequest* _this = reinterpret_cast< VoicePreviewRequest* >(object);
  (void)_this;
}
void VoicePreviewRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoicePreviewRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoicePreviewRequest& VoicePreviewRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VoicePreviewRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void VoicePreviewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.VoicePreviewRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty();
  if (GetArena() == nullptr && emotions_ != nullptr) {
    delete emotions_;
  }
  emotions_ = nullptr;
  if (GetArena() == nullptr && voice_ != nullptr) {
    delete voice_;
  }
  voice_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoicePreviewRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.VoicePreviewRequest.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.packets.EmotionEvent emotions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_emotions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.voices.Voice voice = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_voice(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoicePreviewRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.VoicePreviewRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.VoicePreviewRequest.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // .ai.inworld.packets.EmotionEvent emotions = 2;
  if (this->has_emotions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::emotions(this), target, stream);
  }

  // .ai.inworld.voices.Voice voice = 3;
  if (this->has_voice()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::voice(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.VoicePreviewRequest)
  return target;
}

size_t VoicePreviewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.VoicePreviewRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // .ai.inworld.packets.EmotionEvent emotions = 2;
  if (this->has_emotions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *emotions_);
  }

  // .ai.inworld.voices.Voice voice = 3;
  if (this->has_voice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *voice_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoicePreviewRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.VoicePreviewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VoicePreviewRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoicePreviewRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.VoicePreviewRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.VoicePreviewRequest)
    MergeFrom(*source);
  }
}

void VoicePreviewRequest::MergeFrom(const VoicePreviewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.VoicePreviewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.has_emotions()) {
    _internal_mutable_emotions()->::ai::inworld::packets::EmotionEvent::MergeFrom(from._internal_emotions());
  }
  if (from.has_voice()) {
    _internal_mutable_voice()->::ai::inworld::voices::Voice::MergeFrom(from._internal_voice());
  }
}

void VoicePreviewRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.VoicePreviewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoicePreviewRequest::CopyFrom(const VoicePreviewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.VoicePreviewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoicePreviewRequest::IsInitialized() const {
  return true;
}

void VoicePreviewRequest::InternalSwap(VoicePreviewRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoicePreviewRequest, voice_)
      + sizeof(VoicePreviewRequest::voice_)
      - PROTOBUF_FIELD_OFFSET(VoicePreviewRequest, emotions_)>(
          reinterpret_cast<char*>(&emotions_),
          reinterpret_cast<char*>(&other->emotions_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VoicePreviewRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class VoicePreviewResponse::_Internal {
 public:
};

VoicePreviewResponse::VoicePreviewResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.VoicePreviewResponse)
}
VoicePreviewResponse::VoicePreviewResponse(const VoicePreviewResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  audio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_audio().empty()) {
    audio_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_audio(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.VoicePreviewResponse)
}

void VoicePreviewResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VoicePreviewResponse_world_2dengine_2eproto.base);
  audio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

VoicePreviewResponse::~VoicePreviewResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.VoicePreviewResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void VoicePreviewResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  audio_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VoicePreviewResponse::ArenaDtor(void* object) {
  VoicePreviewResponse* _this = reinterpret_cast< VoicePreviewResponse* >(object);
  (void)_this;
}
void VoicePreviewResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void VoicePreviewResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VoicePreviewResponse& VoicePreviewResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VoicePreviewResponse_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void VoicePreviewResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.VoicePreviewResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoicePreviewResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes audio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_audio();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VoicePreviewResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.VoicePreviewResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio = 1;
  if (this->audio().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_audio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.VoicePreviewResponse)
  return target;
}

size_t VoicePreviewResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.VoicePreviewResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes audio = 1;
  if (this->audio().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_audio());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VoicePreviewResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.VoicePreviewResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VoicePreviewResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VoicePreviewResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.VoicePreviewResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.VoicePreviewResponse)
    MergeFrom(*source);
  }
}

void VoicePreviewResponse::MergeFrom(const VoicePreviewResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.VoicePreviewResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio().size() > 0) {
    _internal_set_audio(from._internal_audio());
  }
}

void VoicePreviewResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.VoicePreviewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VoicePreviewResponse::CopyFrom(const VoicePreviewResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.VoicePreviewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoicePreviewResponse::IsInitialized() const {
  return true;
}

void VoicePreviewResponse::InternalSwap(VoicePreviewResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  audio_.Swap(&other->audio_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata VoicePreviewResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListBaseVoicesRequest::_Internal {
 public:
};

ListBaseVoicesRequest::ListBaseVoicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tts_types_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ListBaseVoicesRequest)
}
ListBaseVoicesRequest::ListBaseVoicesRequest(const ListBaseVoicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tts_types_(from.tts_types_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_language_code().empty()) {
    language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_language_code(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ListBaseVoicesRequest)
}

void ListBaseVoicesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListBaseVoicesRequest_world_2dengine_2eproto.base);
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListBaseVoicesRequest::~ListBaseVoicesRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ListBaseVoicesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListBaseVoicesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  language_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBaseVoicesRequest::ArenaDtor(void* object) {
  ListBaseVoicesRequest* _this = reinterpret_cast< ListBaseVoicesRequest* >(object);
  (void)_this;
}
void ListBaseVoicesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBaseVoicesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListBaseVoicesRequest& ListBaseVoicesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListBaseVoicesRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void ListBaseVoicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ListBaseVoicesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tts_types_.Clear();
  language_code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBaseVoicesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string language_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_language_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.ListBaseVoicesRequest.language_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.voices.TTSType tts_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_tts_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_tts_types(static_cast<::ai::inworld::voices::TTSType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListBaseVoicesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ListBaseVoicesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ListBaseVoicesRequest.language_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_language_code(), target);
  }

  // repeated .ai.inworld.voices.TTSType tts_types = 2;
  {
    int byte_size = _tts_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, tts_types_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ListBaseVoicesRequest)
  return target;
}

size_t ListBaseVoicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ListBaseVoicesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.voices.TTSType tts_types = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_tts_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_tts_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _tts_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string language_code = 1;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBaseVoicesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.ListBaseVoicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBaseVoicesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListBaseVoicesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.ListBaseVoicesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.ListBaseVoicesRequest)
    MergeFrom(*source);
  }
}

void ListBaseVoicesRequest::MergeFrom(const ListBaseVoicesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ListBaseVoicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tts_types_.MergeFrom(from.tts_types_);
  if (from.language_code().size() > 0) {
    _internal_set_language_code(from._internal_language_code());
  }
}

void ListBaseVoicesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.ListBaseVoicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBaseVoicesRequest::CopyFrom(const ListBaseVoicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ListBaseVoicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBaseVoicesRequest::IsInitialized() const {
  return true;
}

void ListBaseVoicesRequest::InternalSwap(ListBaseVoicesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tts_types_.InternalSwap(&other->tts_types_);
  language_code_.Swap(&other->language_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBaseVoicesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListBaseVoicesResponce_BaseVoice::_Internal {
 public:
};

ListBaseVoicesResponce_BaseVoice::ListBaseVoicesResponce_BaseVoice(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  language_codes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
}
ListBaseVoicesResponce_BaseVoice::ListBaseVoicesResponce_BaseVoice(const ListBaseVoicesResponce_BaseVoice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      language_codes_(from.language_codes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  ::memcpy(&gender_, &from.gender_,
    static_cast<size_t>(reinterpret_cast<char*>(&naturalsampleratehertz_) -
    reinterpret_cast<char*>(&gender_)) + sizeof(naturalsampleratehertz_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
}

void ListBaseVoicesResponce_BaseVoice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&gender_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&naturalsampleratehertz_) -
      reinterpret_cast<char*>(&gender_)) + sizeof(naturalsampleratehertz_));
}

ListBaseVoicesResponce_BaseVoice::~ListBaseVoicesResponce_BaseVoice() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListBaseVoicesResponce_BaseVoice::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListBaseVoicesResponce_BaseVoice::ArenaDtor(void* object) {
  ListBaseVoicesResponce_BaseVoice* _this = reinterpret_cast< ListBaseVoicesResponce_BaseVoice* >(object);
  (void)_this;
}
void ListBaseVoicesResponce_BaseVoice::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBaseVoicesResponce_BaseVoice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListBaseVoicesResponce_BaseVoice& ListBaseVoicesResponce_BaseVoice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListBaseVoicesResponce_BaseVoice_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void ListBaseVoicesResponce_BaseVoice::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_codes_.Clear();
  name_.ClearToEmpty();
  ::memset(&gender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&naturalsampleratehertz_) -
      reinterpret_cast<char*>(&gender_)) + sizeof(naturalsampleratehertz_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBaseVoicesResponce_BaseVoice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string language_codes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_language_codes();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.language_codes"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.voices.Gender gender = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_gender(static_cast<::ai::inworld::voices::Gender>(val));
        } else goto handle_unusual;
        continue;
      // int32 naturalSampleRateHertz = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          naturalsampleratehertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListBaseVoicesResponce_BaseVoice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string language_codes = 1;
  for (int i = 0, n = this->_internal_language_codes_size(); i < n; i++) {
    const auto& s = this->_internal_language_codes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.language_codes");
    target = stream->WriteString(1, s, target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .ai.inworld.voices.Gender gender = 3;
  if (this->gender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_gender(), target);
  }

  // int32 naturalSampleRateHertz = 4;
  if (this->naturalsampleratehertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_naturalsampleratehertz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  return target;
}

size_t ListBaseVoicesResponce_BaseVoice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string language_codes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(language_codes_.size());
  for (int i = 0, n = language_codes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      language_codes_.Get(i));
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.voices.Gender gender = 3;
  if (this->gender() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_gender());
  }

  // int32 naturalSampleRateHertz = 4;
  if (this->naturalsampleratehertz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_naturalsampleratehertz());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBaseVoicesResponce_BaseVoice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBaseVoicesResponce_BaseVoice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListBaseVoicesResponce_BaseVoice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
    MergeFrom(*source);
  }
}

void ListBaseVoicesResponce_BaseVoice::MergeFrom(const ListBaseVoicesResponce_BaseVoice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  language_codes_.MergeFrom(from.language_codes_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.gender() != 0) {
    _internal_set_gender(from._internal_gender());
  }
  if (from.naturalsampleratehertz() != 0) {
    _internal_set_naturalsampleratehertz(from._internal_naturalsampleratehertz());
  }
}

void ListBaseVoicesResponce_BaseVoice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBaseVoicesResponce_BaseVoice::CopyFrom(const ListBaseVoicesResponce_BaseVoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBaseVoicesResponce_BaseVoice::IsInitialized() const {
  return true;
}

void ListBaseVoicesResponce_BaseVoice::InternalSwap(ListBaseVoicesResponce_BaseVoice* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  language_codes_.InternalSwap(&other->language_codes_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListBaseVoicesResponce_BaseVoice, naturalsampleratehertz_)
      + sizeof(ListBaseVoicesResponce_BaseVoice::naturalsampleratehertz_)
      - PROTOBUF_FIELD_OFFSET(ListBaseVoicesResponce_BaseVoice, gender_)>(
          reinterpret_cast<char*>(&gender_),
          reinterpret_cast<char*>(&other->gender_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBaseVoicesResponce_BaseVoice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListBaseVoicesResponce::_Internal {
 public:
};

ListBaseVoicesResponce::ListBaseVoicesResponce(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  googlevoices_(arena),
  inworldvoices_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ListBaseVoicesResponce)
}
ListBaseVoicesResponce::ListBaseVoicesResponce(const ListBaseVoicesResponce& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      googlevoices_(from.googlevoices_),
      inworldvoices_(from.inworldvoices_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ListBaseVoicesResponce)
}

void ListBaseVoicesResponce::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListBaseVoicesResponce_world_2dengine_2eproto.base);
}

ListBaseVoicesResponce::~ListBaseVoicesResponce() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ListBaseVoicesResponce)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListBaseVoicesResponce::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ListBaseVoicesResponce::ArenaDtor(void* object) {
  ListBaseVoicesResponce* _this = reinterpret_cast< ListBaseVoicesResponce* >(object);
  (void)_this;
}
void ListBaseVoicesResponce::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListBaseVoicesResponce::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListBaseVoicesResponce& ListBaseVoicesResponce::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListBaseVoicesResponce_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void ListBaseVoicesResponce::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ListBaseVoicesResponce)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  googlevoices_.Clear();
  inworldvoices_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBaseVoicesResponce::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice googleVoices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_googlevoices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice inworldVoices = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inworldvoices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListBaseVoicesResponce::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ListBaseVoicesResponce)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice googleVoices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_googlevoices_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_googlevoices(i), target, stream);
  }

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice inworldVoices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_inworldvoices_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_inworldvoices(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ListBaseVoicesResponce)
  return target;
}

size_t ListBaseVoicesResponce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ListBaseVoicesResponce)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice googleVoices = 1;
  total_size += 1UL * this->_internal_googlevoices_size();
  for (const auto& msg : this->googlevoices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice inworldVoices = 2;
  total_size += 1UL * this->_internal_inworldvoices_size();
  for (const auto& msg : this->inworldvoices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListBaseVoicesResponce::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.ListBaseVoicesResponce)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBaseVoicesResponce* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListBaseVoicesResponce>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.ListBaseVoicesResponce)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.ListBaseVoicesResponce)
    MergeFrom(*source);
  }
}

void ListBaseVoicesResponce::MergeFrom(const ListBaseVoicesResponce& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ListBaseVoicesResponce)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  googlevoices_.MergeFrom(from.googlevoices_);
  inworldvoices_.MergeFrom(from.inworldvoices_);
}

void ListBaseVoicesResponce::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.ListBaseVoicesResponce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBaseVoicesResponce::CopyFrom(const ListBaseVoicesResponce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ListBaseVoicesResponce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBaseVoicesResponce::IsInitialized() const {
  return true;
}

void ListBaseVoicesResponce::InternalSwap(ListBaseVoicesResponce* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  googlevoices_.InternalSwap(&other->googlevoices_);
  inworldvoices_.InternalSwap(&other->inworldvoices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBaseVoicesResponce::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AccessToken::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& expiration_time(const AccessToken* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
AccessToken::_Internal::expiration_time(const AccessToken* msg) {
  return *msg->expiration_time_;
}
void AccessToken::clear_expiration_time() {
  if (GetArena() == nullptr && expiration_time_ != nullptr) {
    delete expiration_time_;
  }
  expiration_time_ = nullptr;
}
AccessToken::AccessToken(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.AccessToken)
}
AccessToken::AccessToken(const AccessToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArena());
  }
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_type().empty()) {
    type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_type(), 
      GetArena());
  }
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session_id(), 
      GetArena());
  }
  if (from._internal_has_expiration_time()) {
    expiration_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.expiration_time_);
  } else {
    expiration_time_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.AccessToken)
}

void AccessToken::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AccessToken_world_2dengine_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiration_time_ = nullptr;
}

AccessToken::~AccessToken() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.AccessToken)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AccessToken::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete expiration_time_;
}

void AccessToken::ArenaDtor(void* object) {
  AccessToken* _this = reinterpret_cast< AccessToken* >(object);
  (void)_this;
}
void AccessToken::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AccessToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AccessToken& AccessToken::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AccessToken_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void AccessToken::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.AccessToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  type_.ClearToEmpty();
  session_id_.ClearToEmpty();
  if (GetArena() == nullptr && expiration_time_ != nullptr) {
    delete expiration_time_;
  }
  expiration_time_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccessToken::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.AccessToken.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.AccessToken.type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expiration_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.AccessToken.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AccessToken::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.AccessToken)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.AccessToken.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.AccessToken.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // .google.protobuf.Timestamp expiration_time = 3;
  if (this->has_expiration_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::expiration_time(this), target, stream);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.AccessToken.session_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.AccessToken)
  return target;
}

size_t AccessToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.AccessToken)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // .google.protobuf.Timestamp expiration_time = 3;
  if (this->has_expiration_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expiration_time_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccessToken::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.AccessToken)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessToken* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AccessToken>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.AccessToken)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.AccessToken)
    MergeFrom(*source);
  }
}

void AccessToken::MergeFrom(const AccessToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.AccessToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.type().size() > 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from.has_expiration_time()) {
    _internal_mutable_expiration_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expiration_time());
  }
}

void AccessToken::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.AccessToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessToken::CopyFrom(const AccessToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.AccessToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessToken::IsInitialized() const {
  return true;
}

void AccessToken::InternalSwap(AccessToken* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_.Swap(&other->type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(expiration_time_, other->expiration_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccessToken::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GenerateTokenRequest::_Internal {
 public:
};

GenerateTokenRequest::GenerateTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.GenerateTokenRequest)
}
GenerateTokenRequest::GenerateTokenRequest(const GenerateTokenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.GenerateTokenRequest)
}

void GenerateTokenRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenerateTokenRequest_world_2dengine_2eproto.base);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenerateTokenRequest::~GenerateTokenRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.GenerateTokenRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GenerateTokenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenerateTokenRequest::ArenaDtor(void* object) {
  GenerateTokenRequest* _this = reinterpret_cast< GenerateTokenRequest* >(object);
  (void)_this;
}
void GenerateTokenRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GenerateTokenRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateTokenRequest& GenerateTokenRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenerateTokenRequest_world_2dengine_2eproto.base);
  return *internal_default_instance();
}


void GenerateTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.GenerateTokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerateTokenRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.GenerateTokenRequest.key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerateTokenRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.GenerateTokenRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.GenerateTokenRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.GenerateTokenRequest)
  return target;
}

size_t GenerateTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.GenerateTokenRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateTokenRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.GenerateTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateTokenRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerateTokenRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.GenerateTokenRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.GenerateTokenRequest)
    MergeFrom(*source);
  }
}

void GenerateTokenRequest::MergeFrom(const GenerateTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.GenerateTokenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {
    _internal_set_key(from._internal_key());
  }
}

void GenerateTokenRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.GenerateTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateTokenRequest::CopyFrom(const GenerateTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.GenerateTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateTokenRequest::IsInitialized() const {
  return true;
}

void GenerateTokenRequest::InternalSwap(GenerateTokenRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateTokenRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace engine
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CapabilitiesRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::CapabilitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CapabilitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::UserRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::UserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::UserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ClientRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldRequest_ClientRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldRequest_ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldRequest_ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldResponse_Agent* Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldResponse_Agent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldResponse_Agent >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldResponse* Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::AudioSettings* Arena::CreateMaybeMessage< ::ai::inworld::engine::AudioSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::AudioSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets* Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneResponse_Agent* Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneResponse_Agent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneResponse_Agent >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneResponse* Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LogErrorRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::LogErrorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LogErrorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::VoicePreviewRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::VoicePreviewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::VoicePreviewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::VoicePreviewResponse* Arena::CreateMaybeMessage< ::ai::inworld::engine::VoicePreviewResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::VoicePreviewResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ListBaseVoicesRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::ListBaseVoicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ListBaseVoicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice* Arena::CreateMaybeMessage< ::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ListBaseVoicesResponce* Arena::CreateMaybeMessage< ::ai::inworld::engine::ListBaseVoicesResponce >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ListBaseVoicesResponce >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::AccessToken* Arena::CreateMaybeMessage< ::ai::inworld::engine::AccessToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::AccessToken >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::GenerateTokenRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::GenerateTokenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::GenerateTokenRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
