#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/characters.proto

#include "ai/inworld/studio/v1alpha/characters.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_BehavioralContext_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<12> scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterInitialMood_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterPersonality_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Meta_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_SafetyConfigEntry_DoNotUse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_SharedPortalInfo_InteractionCountStat_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_SafetySpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Scene_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_voices_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Voice_voices_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ffield_5fmask_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto;
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
class Character_CharacterDescription_CustomDialogStyleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterDescription_CustomDialogStyle> _instance;
} _Character_CharacterDescription_CustomDialogStyle_default_instance_;
class Character_CharacterDescriptionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterDescription> _instance;
} _Character_CharacterDescription_default_instance_;
class Character_BrainSettings_ConversationConfig_FillerSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainSettings_ConversationConfig_FillerSpec> _instance;
} _Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_;
class Character_BrainSettings_ConversationConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainSettings_ConversationConfig> _instance;
} _Character_BrainSettings_ConversationConfig_default_instance_;
class Character_BrainSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainSettings> _instance;
} _Character_BrainSettings_default_instance_;
class Character_BrainTriggerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_BrainTrigger> _instance;
} _Character_BrainTrigger_default_instance_;
class Character_CharacterAssetsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterAssets> _instance;
} _Character_CharacterAssets_default_instance_;
class Character_CharacterInitialMoodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterInitialMood> _instance;
} _Character_CharacterInitialMood_default_instance_;
class Character_CharacterPersonalityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_CharacterPersonality> _instance;
} _Character_CharacterPersonality_default_instance_;
class Character_FactDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_Fact> _instance;
} _Character_Fact_default_instance_;
class Character_MetaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_Meta> _instance;
} _Character_Meta_default_instance_;
class Character_SharedPortalInfo_InteractionCountStatDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_SharedPortalInfo_InteractionCountStat> _instance;
} _Character_SharedPortalInfo_InteractionCountStat_default_instance_;
class Character_SharedPortalInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_SharedPortalInfo> _instance;
} _Character_SharedPortalInfo_default_instance_;
class Character_SafetyConfigEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character_SafetyConfigEntry_DoNotUse> _instance;
} _Character_SafetyConfigEntry_DoNotUse_default_instance_;
class CharacterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Character> _instance;
} _Character_default_instance_;
class GetCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterRequest> _instance;
} _GetCharacterRequest_default_instance_;
class GetCharacterAdvancedSettingsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterAdvancedSettingsRequest> _instance;
} _GetCharacterAdvancedSettingsRequest_default_instance_;
class UpdateCharacterAdvancedSettingsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCharacterAdvancedSettingsRequest> _instance;
} _UpdateCharacterAdvancedSettingsRequest_default_instance_;
class ListCharactersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCharactersRequest> _instance;
} _ListCharactersRequest_default_instance_;
class CreateCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCharacterRequest> _instance;
} _CreateCharacterRequest_default_instance_;
class UpdateCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateCharacterRequest> _instance;
} _UpdateCharacterRequest_default_instance_;
class DeleteCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteCharacterRequest> _instance;
} _DeleteCharacterRequest_default_instance_;
class DeployCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeployCharacterRequest> _instance;
} _DeployCharacterRequest_default_instance_;
class CloneCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloneCharacterRequest> _instance;
} _CloneCharacterRequest_default_instance_;
class ListCharactersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListCharactersResponse> _instance;
} _ListCharactersResponse_default_instance_;
class ReplaceCharacterRpmModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReplaceCharacterRpmModelRequest> _instance;
} _ReplaceCharacterRpmModelRequest_default_instance_;
class ReplaceCharacterImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReplaceCharacterImageRequest> _instance;
} _ReplaceCharacterImageRequest_default_instance_;
class PreviewPromptTemplateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewPromptTemplateRequest> _instance;
} _PreviewPromptTemplateRequest_default_instance_;
class PreviewPromptTempalteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreviewPromptTempalteResponse> _instance;
} _PreviewPromptTempalteResponse_default_instance_;
class ShareCharacterRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShareCharacterRequest> _instance;
} _ShareCharacterRequest_default_instance_;
class ShareCharacterPortalRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShareCharacterPortalRequest> _instance;
} _ShareCharacterPortalRequest_default_instance_;
class UnshareCharacterPortalRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnshareCharacterPortalRequest> _instance;
} _UnshareCharacterPortalRequest_default_instance_;
class ListSharedCharactersRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListSharedCharactersRequest> _instance;
} _ListSharedCharactersRequest_default_instance_;
class ListSharedCharactersResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListSharedCharactersResponse> _instance;
} _ListSharedCharactersResponse_default_instance_;
class CharacterAdvancedSettings_ConversationConfig_EngineSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings_ConversationConfig_EngineSpec> _instance;
} _CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_;
class CharacterAdvancedSettings_ConversationConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings_ConversationConfig> _instance;
} _CharacterAdvancedSettings_ConversationConfig_default_instance_;
class CharacterAdvancedSettings_SafetySpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings_SafetySpec> _instance;
} _CharacterAdvancedSettings_SafetySpec_default_instance_;
class CharacterAdvancedSettingsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterAdvancedSettings> _instance;
} _CharacterAdvancedSettings_default_instance_;
class GetCharacterShareInfoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetCharacterShareInfoRequest> _instance;
} _GetCharacterShareInfoRequest_default_instance_;
class CharacterShareInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CharacterShareInfo> _instance;
} _CharacterShareInfo_default_instance_;
class CheckDeployInfoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckDeployInfoRequest> _instance;
} _CheckDeployInfoRequest_default_instance_;
class DeployCharacterAsyncMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeployCharacterAsyncMetadata> _instance;
} _DeployCharacterAsyncMetadata_default_instance_;
class DeployCharacterAsyncResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeployCharacterAsyncResponse> _instance;
} _DeployCharacterAsyncResponse_default_instance_;
class CreateCharacterMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateCharacterMetadata> _instance;
} _CreateCharacterMetadata_default_instance_;
class CheckDeployInfoResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckDeployInfoResponse> _instance;
} _CheckDeployInfoResponse_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static void InitDefaultsscc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<12> scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 12, 0, InitDefaultsscc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Character_CharacterInitialMood_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Character_CharacterPersonality_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Scene_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto.base,
      &scc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_BehavioralContext_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto.base,
      &scc_info_Character_Meta_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_Character_SafetyConfigEntry_DoNotUse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainSettings_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_FillerSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_BrainSettings_ConversationConfig_FillerSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_BrainTrigger_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_BrainTrigger();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterAssets_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterAssets();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Voice_voices_2eproto.base,}};

static void InitDefaultsscc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterDescription_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterDescription();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterDescription_CustomDialogStyle_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_CharacterInitialMood_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterInitialMood_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterInitialMood_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_CharacterInitialMood_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_CharacterPersonality_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_CharacterPersonality_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_CharacterPersonality();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_CharacterPersonality_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_CharacterPersonality_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_Fact_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_Fact();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_Meta_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_Meta_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_Meta();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_Meta_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_Meta_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_SafetyConfigEntry_DoNotUse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_SafetyConfigEntry_DoNotUse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_SafetyConfigEntry_DoNotUse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_SafetyConfigEntry_DoNotUse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_SharedPortalInfo_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_SharedPortalInfo_InteractionCountStat_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_Character_SharedPortalInfo_InteractionCountStat_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_Character_SharedPortalInfo_InteractionCountStat_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Character_SharedPortalInfo_InteractionCountStat_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Character_SharedPortalInfo_InteractionCountStat_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_CharacterAdvancedSettings_SafetySpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CharacterAdvancedSettings_SafetySpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_SafetySpec_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterAdvancedSettings_SafetySpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CharacterAdvancedSettings_SafetySpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CharacterShareInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CharacterShareInfo_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CharacterShareInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CharacterShareInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CharacterShareInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CheckDeployInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CheckDeployInfoRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckDeployInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckDeployInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CheckDeployInfoResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CheckDeployInfoResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckDeployInfoResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckDeployInfoResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CloneCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CloneCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CloneCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CloneCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CloneCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CreateCharacterMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CreateCharacterMetadata_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CreateCharacterMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateCharacterMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateCharacterMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_CreateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_CreateCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::CreateCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_DeleteCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_DeleteCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::DeleteCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_DeployCharacterAsyncMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_DeployCharacterAsyncMetadata_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeployCharacterAsyncMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeployCharacterAsyncMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_DeployCharacterAsyncResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_DeployCharacterAsyncResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeployCharacterAsyncResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeployCharacterAsyncResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_DeployCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_DeployCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::DeployCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeployCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeployCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_GetCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_GetCharacterAdvancedSettingsRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_GetCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_GetCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::GetCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_GetCharacterShareInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_GetCharacterShareInfoRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetCharacterShareInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetCharacterShareInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_ListCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListCharactersRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListCharactersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_ListCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListCharactersResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListCharactersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_ListSharedCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListSharedCharactersRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListSharedCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListSharedCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_ListSharedCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ListSharedCharactersResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListSharedCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListSharedCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,}};

static void InitDefaultsscc_info_PreviewPromptTempalteResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_PreviewPromptTempalteResponse_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewPromptTempalteResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewPromptTempalteResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_PreviewPromptTemplateRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_PreviewPromptTemplateRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreviewPromptTemplateRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreviewPromptTemplateRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_ReplaceCharacterImageRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ReplaceCharacterImageRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReplaceCharacterImageRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReplaceCharacterImageRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_ReplaceCharacterRpmModelRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ReplaceCharacterRpmModelRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReplaceCharacterRpmModelRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReplaceCharacterRpmModelRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_ShareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ShareCharacterPortalRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_ShareCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_ShareCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::ShareCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShareCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShareCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_UnshareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_UnshareCharacterPortalRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnshareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnshareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {}};

static void InitDefaultsscc_info_UpdateCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_UpdateCharacterAdvancedSettingsRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static void InitDefaultsscc_info_UpdateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::studio::v1alpha::_UpdateCharacterRequest_default_instance_;
    new (ptr) ::ai::inworld::studio::v1alpha::UpdateCharacterRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto}, {
      &scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
      &scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[45];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, uuid_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, display_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, is_active_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, adjectives_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, adverbs_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, colloquialism_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, given_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, pronoun_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, nicknames_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, motivation_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, wikipedia_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, player_role_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, default_context_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, example_dialog_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, example_dialog_style_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, personality_adjectives_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, life_stage_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, hobby_or_interests_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, character_role_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, narrative_actions_enabled_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, custom_dialog_styles_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, flaws_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec, fillers_disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, filler_spec_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, emotions_disabled_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, behavioral_contexts_disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings, conversation_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, trigger_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, situation_description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, start_conversation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_model_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_image_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_image_uri_portrait_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, rpm_image_uri_posture_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, voice_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, avatar_img_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, avatar_img_original_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, avatar_background_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, avatar_material_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, joy_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, fear_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, trust_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, surprise_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, positive_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, peaceful_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, open_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, extravert_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, uuid_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, text_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, total_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, total_common_knowledge_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, goals_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, total_count_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, total_unread_count_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, total_read_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, is_shared_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, byline_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, prompt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, short_alias_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, allowed_on_showcase_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, interaction_count_stat_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, language_code_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, default_character_description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, brain_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, brain_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, default_character_assets_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, initial_mood_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, personality_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, common_knowledges_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, social_rank_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, scenes_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, facts_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, behavioral_contexts_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, meta_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, emotional_fluidity_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, share_portal_info_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, yaml_config_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, safety_config_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, relationship_fluidity_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, fourth_wall_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, character_advanced_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, view_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, skip_auto_create_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteCharacterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, workspace_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, new_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, characters_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, rpm_model_uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, template__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, prompt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, errors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, external_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, byline_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, prompt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, allowed_on_showcase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, shared_characters_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, engine_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, temperature_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, max_tokens_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, frequency_penalty_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, presence_penalty_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, top_p_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, repetition_penalty_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig, engine_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec, allowed_topics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, conversation_config_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, custom_prompt_template_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, speech_safety_spec_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, additional_agent_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterShareInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterShareInfo, external_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, character_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, is_fresh_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle)},
  { 11, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterDescription)},
  { 33, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec)},
  { 39, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig)},
  { 47, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings)},
  { 53, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainTrigger)},
  { 61, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterAssets)},
  { 75, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood)},
  { 84, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterPersonality)},
  { 93, -1, sizeof(::ai::inworld::studio::v1alpha::Character_Fact)},
  { 101, -1, sizeof(::ai::inworld::studio::v1alpha::Character_Meta)},
  { 109, -1, sizeof(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat)},
  { 117, -1, sizeof(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo)},
  { 128, 135, sizeof(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse)},
  { 137, -1, sizeof(::ai::inworld::studio::v1alpha::Character)},
  { 162, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterRequest)},
  { 169, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest)},
  { 175, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest)},
  { 182, -1, sizeof(::ai::inworld::studio::v1alpha::ListCharactersRequest)},
  { 192, -1, sizeof(::ai::inworld::studio::v1alpha::CreateCharacterRequest)},
  { 200, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateCharacterRequest)},
  { 207, -1, sizeof(::ai::inworld::studio::v1alpha::DeleteCharacterRequest)},
  { 213, -1, sizeof(::ai::inworld::studio::v1alpha::DeployCharacterRequest)},
  { 219, -1, sizeof(::ai::inworld::studio::v1alpha::CloneCharacterRequest)},
  { 227, -1, sizeof(::ai::inworld::studio::v1alpha::ListCharactersResponse)},
  { 234, -1, sizeof(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest)},
  { 241, -1, sizeof(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest)},
  { 248, -1, sizeof(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest)},
  { 255, -1, sizeof(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse)},
  { 262, -1, sizeof(::ai::inworld::studio::v1alpha::ShareCharacterRequest)},
  { 269, -1, sizeof(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest)},
  { 278, -1, sizeof(::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest)},
  { 284, -1, sizeof(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest)},
  { 292, -1, sizeof(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse)},
  { 299, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec)},
  { 311, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig)},
  { 317, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec)},
  { 323, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings)},
  { 333, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest)},
  { 340, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterShareInfo)},
  { 346, -1, sizeof(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest)},
  { 352, -1, sizeof(::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata)},
  { 357, -1, sizeof(::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse)},
  { 362, -1, sizeof(::ai::inworld::studio::v1alpha::CreateCharacterMetadata)},
  { 367, -1, sizeof(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterDescription_CustomDialogStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterDescription_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_BrainTrigger_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterAssets_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterInitialMood_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_CharacterPersonality_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_Fact_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_Meta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_SharedPortalInfo_InteractionCountStat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_SharedPortalInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_SafetyConfigEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_Character_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_GetCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_GetCharacterAdvancedSettingsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_UpdateCharacterAdvancedSettingsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListCharactersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CreateCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_UpdateCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_DeleteCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_DeployCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CloneCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListCharactersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ReplaceCharacterRpmModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ReplaceCharacterImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_PreviewPromptTemplateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_PreviewPromptTempalteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ShareCharacterRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ShareCharacterPortalRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_UnshareCharacterPortalRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListSharedCharactersRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_ListSharedCharactersResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_SafetySpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_GetCharacterShareInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CharacterShareInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CheckDeployInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_DeployCharacterAsyncMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_DeployCharacterAsyncResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CreateCharacterMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::studio::v1alpha::_CheckDeployInfoResponse_default_instance_),
};

const char descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*ai/inworld/studio/v1alpha/characters.p"
  "roto\022\031ai.inworld.studio.v1alpha\032\034google/"
  "api/annotations.proto\032\027google/api/client"
  ".proto\032\037google/api/field_behavior.proto\032"
  "\031google/api/resource.proto\032#google/longr"
  "unning/operations.proto\032\033google/protobuf"
  "/empty.proto\032 google/protobuf/field_mask"
  ".proto\032\roptions.proto\0323ai/inworld/studio"
  "/v1alpha/behavioral_contexts.proto\032&ai/i"
  "nworld/studio/v1alpha/scenes.proto\032\014voic"
  "es.proto\"\327\'\n\tCharacter\022C\n\004name\030\001 \001(\tB5\242\317"
  "\"1\n/\032-workspaces/workspace-1/characters/"
  "character-1\022\025\n\rlanguage_code\030\002 \001(\t\022`\n\035de"
  "fault_character_description\030\003 \001(\01329.ai.i"
  "nworld.studio.v1alpha.Character.Characte"
  "rDescription\022J\n\016brain_settings\030\004 \001(\01322.a"
  "i.inworld.studio.v1alpha.Character.Brain"
  "Settings\022I\n\016brain_triggers\030\005 \003(\01321.ai.in"
  "world.studio.v1alpha.Character.BrainTrig"
  "ger\022V\n\030default_character_assets\030\007 \001(\01324."
  "ai.inworld.studio.v1alpha.Character.Char"
  "acterAssets\022O\n\014initial_mood\030\t \001(\01329.ai.i"
  "nworld.studio.v1alpha.Character.Characte"
  "rInitialMood\022N\n\013personality\030\n \001(\01329.ai.i"
  "nworld.studio.v1alpha.Character.Characte"
  "rPersonality\022\031\n\021common_knowledges\030\013 \003(\t\022"
  "\023\n\013social_rank\030\014 \001(\002\0220\n\006scenes\030\r \003(\0132 .a"
  "i.inworld.studio.v1alpha.Scene\0228\n\005facts\030"
  "\016 \003(\0132).ai.inworld.studio.v1alpha.Charac"
  "ter.Fact\022I\n\023behavioral_contexts\030\017 \003(\0132,."
  "ai.inworld.studio.v1alpha.BehavioralCont"
  "ext\022<\n\004meta\030\020 \001(\0132).ai.inworld.studio.v1"
  "alpha.Character.MetaB\003\340A\003\022\032\n\022emotional_f"
  "luidity\030\021 \001(\002\022U\n\021share_portal_info\030\022 \001(\013"
  "25.ai.inworld.studio.v1alpha.Character.S"
  "haredPortalInfoB\003\340A\003\022\023\n\013yaml_config\030\023 \001("
  "\t\022M\n\rsafety_config\030\025 \003(\01326.ai.inworld.st"
  "udio.v1alpha.Character.SafetyConfigEntry"
  "\022\035\n\025relationship_fluidity\030\026 \001(\002\022O\n\013fourt"
  "h_wall\030\027 \001(\0162:.ai.inworld.studio.v1alpha"
  ".Character.FourthWallContainment\032\305\017\n\024Cha"
  "racterDescription\022)\n\ngiven_name\030\001 \001(\tB\025\242"
  "\317\"\021\n\017\032\rgiven name #1\022\023\n\013description\030\002 \001("
  "\t\022R\n\007pronoun\030\003 \001(\0162A.ai.inworld.studio.v"
  "1alpha.Character.CharacterDescription.Pr"
  "onoun\022\021\n\tnicknames\030\004 \003(\t\022\022\n\nmotivation\030\005"
  " \001(\t\022\025\n\rwikipedia_uri\030\006 \001(\t\022\023\n\013player_ro"
  "le\030\007 \001(\t\022\027\n\017default_context\030\010 \001(\t\022\026\n\016exa"
  "mple_dialog\030\t \001(\t\022j\n\024example_dialog_styl"
  "e\030\n \001(\0162L.ai.inworld.studio.v1alpha.Char"
  "acter.CharacterDescription.ExampleDialog"
  "Style\022\036\n\026personality_adjectives\030\013 \003(\t\022W\n"
  "\nlife_stage\030\014 \001(\0162C.ai.inworld.studio.v1"
  "alpha.Character.CharacterDescription.Lif"
  "eStage\022\032\n\022hobby_or_interests\030\r \003(\t\022\026\n\016ch"
  "aracter_role\030\016 \001(\t\022!\n\031narrative_actions_"
  "enabled\030\017 \001(\010\022i\n\024custom_dialog_styles\030\020 "
  "\003(\0132K.ai.inworld.studio.v1alpha.Characte"
  "r.CharacterDescription.CustomDialogStyle"
  "\022\r\n\005flaws\030\021 \001(\t\032\206\001\n\021CustomDialogStyle\022\014\n"
  "\004uuid\030\001 \001(\t\022\024\n\014display_name\030\002 \001(\t\022\021\n\tis_"
  "active\030\003 \001(\010\022\022\n\nadjectives\030\004 \003(\t\022\017\n\007adve"
  "rbs\030\005 \003(\t\022\025\n\rcolloquialism\030\006 \001(\t\"[\n\007Pron"
  "oun\022\027\n\023PRONOUN_UNSPECIFIED\020\000\022\022\n\016PRONOUN_"
  "FEMALE\020\001\022\020\n\014PRONOUN_MALE\020\002\022\021\n\rPRONOUN_OT"
  "HER\020\003\"\275\005\n\022ExampleDialogStyle\022$\n EXAMPLE_"
  "DIALOG_STYLE_UNSPECIFIED\020\000\022 \n\034EXAMPLE_DI"
  "ALOG_STYLE_DEFAULT\020\001\022\037\n\033EXAMPLE_DIALOG_S"
  "TYLE_BUBBLY\020\002\022\037\n\033EXAMPLE_DIALOG_STYLE_FO"
  "RMAL\020\003\022\036\n\032EXAMPLE_DIALOG_STYLE_BLUNT\020\004\022$"
  "\n EXAMPLE_DIALOG_STYLE_INQUISITIVE\020\005\022#\n\037"
  "EXAMPLE_DIALOG_STYLE_COMMANDING\020\006\022#\n\037EXA"
  "MPLE_DIALOG_STYLE_EMPATHETIC\020\007\022%\n!EXAMPL"
  "E_DIALOG_STYLE_ENTERTAINING\020\010\022&\n\"EXAMPLE"
  "_DIALOG_STYLE_HYPOCHONDRIAC\020\t\022!\n\035EXAMPLE"
  "_DIALOG_STYLE_LAIDBACK\020\n\022$\n EXAMPLE_DIAL"
  "OG_STYLE_LONG_WINDED\020\013\022\036\n\032EXAMPLE_DIALOG"
  "_STYLE_MORAL\020\014\022#\n\037EXAMPLE_DIALOG_STYLE_M"
  "YSTERIOUS\020\r\022\"\n\036EXAMPLE_DIALOG_STYLE_RACO"
  "NTEUR\020\016\022\"\n\036EXAMPLE_DIALOG_STYLE_SARCASTI"
  "C\020\017\022\"\n\036EXAMPLE_DIALOG_STYLE_TENACIOUS\020\020\022"
  "#\n\037EXAMPLE_DIALOG_STYLE_VILLAINOUS\020\021\022\037\n\033"
  "EXAMPLE_DIALOG_STYLE_CUSTOM\020\022\"\270\002\n\tLifeSt"
  "age\022\032\n\026LIFE_STAGE_UNSPECIFIED\020\000\022\032\n\022LIFE_"
  "STAGE_INFANCY\020\001\032\002\010\001\022\036\n\026LIFE_STAGE_TODDLE"
  "RHOOD\020\002\032\002\010\001\022\034\n\024LIFE_STAGE_PRESCHOOL\020\003\032\002\010"
  "\001\022\037\n\027LIFE_STAGE_EARLY_SCHOOL\020\004\032\002\010\001\022\032\n\026LI"
  "FE_STAGE_ADOLESCENCE\020\005\022\036\n\032LIFE_STAGE_YOU"
  "NG_ADULTHOOD\020\006\022\037\n\033LIFE_STAGE_MIDDLE_ADUL"
  "THOOD\020\007\022\035\n\031LIFE_STAGE_LATE_ADULTHOOD\020\010\022\030"
  "\n\024LIFE_STAGE_CHILDHOOD\020\t\032\362\002\n\rBrainSettin"
  "gs\022b\n\023conversation_config\030\001 \001(\0132E.ai.inw"
  "orld.studio.v1alpha.Character.BrainSetti"
  "ngs.ConversationConfig\032\360\001\n\022ConversationC"
  "onfig\022e\n\013filler_spec\030\002 \001(\0132P.ai.inworld."
  "studio.v1alpha.Character.BrainSettings.C"
  "onversationConfig.FillerSpec\022\031\n\021emotions"
  "_disabled\030\004 \001(\010\022$\n\034behavioral_contexts_d"
  "isabled\030\005 \001(\010\032&\n\nFillerSpec\022\030\n\020fillers_d"
  "isabled\030\001 \001(\010J\004\010\001\020\002J\004\010\003\020\004J\004\010\002\020\003J\004\010\003\020\004\032w\n"
  "\014BrainTrigger\022,\n\007trigger\030\001 \001(\tB\033\372A\030\n\026api"
  ".inworld.ai/Trigger\022\035\n\025situation_descrip"
  "tion\030\002 \001(\t\022\032\n\022start_conversation\030\003 \001(\010\032\242"
  "\002\n\017CharacterAssets\022\032\n\rrpm_model_uri\030\002 \001("
  "\tB\003\340A\003\022\034\n\rrpm_image_uri\030\003 \001(\tB\005\030\001\340A\003\022#\n\026"
  "rpm_image_uri_portrait\030\004 \001(\tB\003\340A\003\022\"\n\025rpm"
  "_image_uri_posture\030\005 \001(\tB\003\340A\003\022\'\n\005voice\030\006"
  " \001(\0132\030.ai.inworld.voices.Voice\022\022\n\navatar"
  "_img\030\007 \001(\t\022\033\n\023avatar_img_original\030\010 \001(\t\022"
  "\031\n\021avatar_background\030\t \001(\t\022\027\n\017avatar_mat"
  "erial\030\n \001(\t\032R\n\024CharacterInitialMood\022\013\n\003j"
  "oy\030\001 \001(\005\022\014\n\004fear\030\002 \001(\005\022\r\n\005trust\030\003 \001(\005\022\020\n"
  "\010surprise\030\004 \001(\005\032[\n\024CharacterPersonality\022"
  "\020\n\010positive\030\001 \001(\005\022\020\n\010peaceful\030\002 \001(\005\022\014\n\004o"
  "pen\030\003 \001(\005\022\021\n\textravert\030\004 \001(\005\032Z\n\004Fact\022\014\n\004"
  "uuid\030\001 \001(\t\022\014\n\004text\030\002 \003(\t\0226\n\004tags\030\003 \003(\0162("
  ".ai.inworld.studio.v1alpha.Character.Tag"
  "\032U\n\004Meta\022\026\n\016total_triggers\030\001 \001(\005\022\036\n\026tota"
  "l_common_knowledge\030\002 \001(\005\022\025\n\rgoals_versio"
  "n\030\003 \001(\005\032\306\002\n\020SharedPortalInfo\022\021\n\tis_share"
  "d\030\001 \001(\010\022\016\n\006byline\030\002 \001(\t\022\016\n\006prompt\030\003 \001(\t\022"
  "\023\n\013short_alias\030\004 \001(\t\022\033\n\023allowed_on_showc"
  "ase\030\005 \001(\010\022j\n\026interaction_count_stat\030\006 \001("
  "\0132J.ai.inworld.studio.v1alpha.Character."
  "SharedPortalInfo.InteractionCountStat\032a\n"
  "\024InteractionCountStat\022\023\n\013total_count\030\001 \001"
  "(\005\022\032\n\022total_unread_count\030\002 \001(\005\022\030\n\020total_"
  "read_count\030\003 \001(\005\032[\n\021SafetyConfigEntry\022\013\n"
  "\003key\030\001 \001(\t\0225\n\005value\030\002 \001(\0162&.ai.inworld.s"
  "tudio.v1alpha.SafetyLevel:\0028\001\">\n\003Tag\022\023\n\017"
  "TAG_UNSPECIFIED\020\000\022\016\n\nTAG_MEMORY\020\001\022\022\n\016TAG"
  "_APPEARANCE\020\002\"\220\001\n\025FourthWallContainment\022"
  "\'\n#FOURTH_WALL_CONTAINMENT_UNSPECIFIED\020\000"
  "\022$\n FOURTH_WALL_CONTAINMENT_DISABLED\020\001\022("
  "\n$FOURTH_WALL_CONTAINMENT_EXPERIMENTAL\020\002"
  ":L\352AI\n\030api.inworld.ai/Character\022-workspa"
  "ces/{workspace}/characters/{character}J\004"
  "\010\006\020\007J\004\010\024\020\025\"\201\001\n\023GetCharacterRequest\022.\n\004na"
  "me\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Charact"
  "er\022:\n\004view\030\002 \001(\0162,.ai.inworld.studio.v1a"
  "lpha.CharacterItemView\"U\n#GetCharacterAd"
  "vancedSettingsRequest\022.\n\004name\030\001 \001(\tB \340A\002"
  "\372A\032\n\030api.inworld.ai/Character\"\276\001\n&Update"
  "CharacterAdvancedSettingsRequest\022^\n\033char"
  "acter_advanced_settings\030\001 \001(\01324.ai.inwor"
  "ld.studio.v1alpha.CharacterAdvancedSetti"
  "ngsB\003\340A\002\0224\n\013update_mask\030\002 \001(\0132\032.google.p"
  "rotobuf.FieldMaskB\003\340A\002\"\322\001\n\025ListCharacter"
  "sRequest\022J\n\006parent\030\001 \001(\tB:\340A\002\372A4\n\030api.in"
  "world.ai/Workspace\022\030api.inworld.ai/Chara"
  "cter\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 "
  "\001(\t\0226\n\004view\030\004 \001(\0162(.ai.inworld.studio.v1"
  "alpha.CharacterView\022\016\n\006filter\030\005 \001(\t\"\274\001\n\026"
  "CreateCharacterRequest\022J\n\006parent\030\001 \001(\tB:"
  "\340A\002\372A4\n\030api.inworld.ai/Workspace\022\030api.in"
  "world.ai/Character\022<\n\tcharacter\030\002 \001(\0132$."
  "ai.inworld.studio.v1alpha.CharacterB\003\340A\002"
  "\022\030\n\020skip_auto_create\030\003 \001(\010\"\214\001\n\026UpdateCha"
  "racterRequest\022<\n\tcharacter\030\001 \001(\0132$.ai.in"
  "world.studio.v1alpha.CharacterB\003\340A\002\0224\n\013u"
  "pdate_mask\030\002 \001(\0132\032.google.protobuf.Field"
  "MaskB\003\340A\002\"H\n\026DeleteCharacterRequest\022.\n\004n"
  "ame\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Charac"
  "ter\"H\n\026DeployCharacterRequest\022.\n\004name\030\001 "
  "\001(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\"\223\001"
  "\n\025CloneCharacterRequest\022.\n\004name\030\001 \001(\tB \340"
  "A\002\372A\032\n\030api.inworld.ai/Character\0223\n\tworks"
  "pace\030\002 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Works"
  "pace\022\025\n\010new_name\030\003 \001(\tB\003\340A\002\"k\n\026ListChara"
  "ctersResponse\0228\n\ncharacters\030\001 \003(\0132$.ai.i"
  "nworld.studio.v1alpha.Character\022\027\n\017next_"
  "page_token\030\002 \001(\t\"\202\001\n\037ReplaceCharacterRpm"
  "ModelRequest\022H\n\tcharacter\030\001 \001(\tB5\242\317\"1\n/\032"
  "-workspaces/workspace-1/characters/chara"
  "cter-1\022\025\n\rrpm_model_uri\030\002 \001(\t\"y\n\034Replace"
  "CharacterImageRequest\022H\n\tcharacter\030\001 \001(\t"
  "B5\242\317\"1\n/\032-workspaces/workspace-1/charact"
  "ers/character-1\022\017\n\007content\030\002 \001(\014\"e\n\034Prev"
  "iewPromptTemplateRequest\0223\n\tcharacter\030\001 "
  "\001(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\022\020\n"
  "\010template\030\002 \001(\t\"D\n\035PreviewPromptTempalte"
  "Response\022\016\n\006prompt\030\001 \001(\t\022\023\n\006errors\030\002 \003(\t"
  "B\003\340A\003\"]\n\025ShareCharacterRequest\022.\n\004name\030\001"
  " \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\022\024"
  "\n\014external_ids\030\002 \003(\t\"\212\001\n\033ShareCharacterP"
  "ortalRequest\022.\n\004name\030\001 \001(\tB \340A\002\372A\032\n\030api."
  "inworld.ai/Character\022\016\n\006byline\030\002 \001(\t\022\016\n\006"
  "prompt\030\003 \001(\t\022\033\n\023allowed_on_showcase\030\004 \001("
  "\010\"O\n\035UnshareCharacterPortalRequest\022.\n\004na"
  "me\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Charact"
  "er\"v\n\033ListSharedCharactersRequest\0220\n\006par"
  "ent\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Worksp"
  "ace\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001"
  "(\t\"x\n\034ListSharedCharactersResponse\022\?\n\021sh"
  "ared_characters\030\001 \003(\0132$.ai.inworld.studi"
  "o.v1alpha.Character\022\027\n\017next_page_token\030\002"
  " \001(\t\"\361\t\n\031CharacterAdvancedSettings\022U\n\004na"
  "me\030\001 \001(\tBG\242\317\"C\nA\032\?workspaces/workspace-1"
  "/characters/character-1/advanced-setting"
  "s\022d\n\023conversation_config\030\002 \001(\0132G.ai.inwo"
  "rld.studio.v1alpha.CharacterAdvancedSett"
  "ings.ConversationConfig\022\036\n\026custom_prompt"
  "_template\030\004 \001(\t\022[\n\022speech_safety_spec\030\005 "
  "\001(\0132\?.ai.inworld.studio.v1alpha.Characte"
  "rAdvancedSettings.SafetySpec\022\035\n\025addition"
  "al_agent_info\030\006 \001(\t\032\245\002\n\022ConversationConf"
  "ig\022g\n\013engine_spec\030\001 \001(\0132R.ai.inworld.stu"
  "dio.v1alpha.CharacterAdvancedSettings.Co"
  "nversationConfig.EngineSpec\032\245\001\n\nEngineSp"
  "ec\022\016\n\006engine\030\001 \001(\t\022\023\n\013temperature\030\002 \001(\002\022"
  "\022\n\nmax_tokens\030\003 \001(\005\022\031\n\021frequency_penalty"
  "\030\004 \001(\002\022\030\n\020presence_penalty\030\005 \001(\002\022\r\n\005top_"
  "p\030\006 \001(\002\022\032\n\022repetition_penalty\030\007 \001(\002\032j\n\nS"
  "afetySpec\022\\\n\016allowed_topics\030\001 \003(\0162D.ai.i"
  "nworld.studio.v1alpha.CharacterAdvancedS"
  "ettings.SafetyTopicName\"\360\002\n\017SafetyTopicN"
  "ame\022!\n\035SAFETY_TOPIC_NAME_UNSPECIFIED\020\000\022 "
  "\n\034SAFETY_TOPIC_NAME_SAFE_TOPIC\020\001\022\036\n\032SAFE"
  "TY_TOPIC_NAME_POLITICS\020\002\022\036\n\032SAFETY_TOPIC"
  "_NAME_FINANCES\020\003\022&\n\"SAFETY_TOPIC_NAME_DI"
  "SGUSTING_STUFF\020\004\022!\n\035SAFETY_TOPIC_NAME_GE"
  "NDER_BIAS\020\005\022#\n\037SAFETY_TOPIC_NAME_SUBSTAN"
  "CE_USE\020\006\022#\n\037SAFETY_TOPIC_NAME_HEALTH_ADV"
  "ICE\020\007\022\036\n\032SAFETY_TOPIC_NAME_RELIGION\020\010\022#\n"
  "\037SAFETY_TOPIC_NAME_RELATIONSHIPS\020\t:n\352Ak\n"
  "(api.inworld.ai/CharacterAdvancedSetting"
  "s\022\?workspaces/{workspace}/characters/{ch"
  "aracter}/advanced-settingsJ\004\010\003\020\004\"\216\001\n\034Get"
  "CharacterShareInfoRequest\022.\n\004name\030\001 \001(\tB"
  " \340A\002\372A\032\n\030api.inworld.ai/Character\022>\n\004vie"
  "w\030\002 \001(\01620.ai.inworld.studio.v1alpha.Char"
  "acterSharePurpose\"*\n\022CharacterShareInfo\022"
  "\024\n\014external_ids\030\001 \003(\t\"M\n\026CheckDeployInfo"
  "Request\0223\n\tcharacter\030\001 \001(\tB \340A\002\372A\032\n\030api."
  "inworld.ai/Character\"\036\n\034DeployCharacterA"
  "syncMetadata\"\036\n\034DeployCharacterAsyncResp"
  "onse\"\031\n\027CreateCharacterMetadata\"+\n\027Check"
  "DeployInfoResponse\022\020\n\010is_fresh\030\001 \001(\010*k\n\r"
  "CharacterView\022\036\n\032CHARACTER_VIEW_UNSPECIF"
  "IED\020\000\022\032\n\026CHARACTER_VIEW_DEFAULT\020\001\022\036\n\032CHA"
  "RACTER_VIEW_WITH_SCENES\020\002*|\n\021CharacterIt"
  "emView\022#\n\037CHARACTER_ITEM_VIEW_UNSPECIFIE"
  "D\020\000\022\037\n\033CHARACTER_ITEM_VIEW_DEFAULT\020\001\022!\n\035"
  "CHARACTER_ITEM_VIEW_WITH_META\020\002*\210\001\n\025Char"
  "acterSharePurpose\022\'\n#CHARACTER_SHARE_PUR"
  "POSE_UNSPECIFIED\020\000\022\"\n\036CHARACTER_SHARE_PU"
  "RPOSE_OCULUS\020\001\022\"\n\036CHARACTER_SHARE_PURPOS"
  "E_PORTAL\020\002*\210\001\n\013SafetyLevel\022\034\n\030SAFETY_LEV"
  "EL_UNSPECIFIED\020\000\022\033\n\027SAFETY_LEVEL_NO_CONT"
  "ROL\020\001\022\035\n\031SAFETY_LEVEL_MILD_CONTROL\020\002\022\037\n\033"
  "SAFETY_LEVEL_STRICT_CONTROL\020\0032\216\036\n\nCharac"
  "ters\022\231\001\n\017DeployCharacter\0221.ai.inworld.st"
  "udio.v1alpha.DeployCharacterRequest\032\026.go"
  "ogle.protobuf.Empty\";\202\323\344\223\0025\"0/v1alpha/{n"
  "ame=workspaces/*/characters/*}:deploy:\001*"
  "\022\244\001\n\016CloneCharacter\0220.ai.inworld.studio."
  "v1alpha.CloneCharacterRequest\032$.ai.inwor"
  "ld.studio.v1alpha.Character\":\202\323\344\223\0024\"//v1"
  "alpha/{name=workspaces/*/characters/*}:c"
  "lone:\001*\022\374\001\n\035DeployCharacterAsynchronousl"
  "y\0221.ai.inworld.studio.v1alpha.DeployChar"
  "acterRequest\032\035.google.longrunning.Operat"
  "ion\"\210\001\202\323\344\223\002C\">/v1alpha/{name=workspaces/"
  "*/characters/*}:deployAsynchronously:\001*\312"
  "A<\n\034DeployCharacterAsyncResponse\022\034Deploy"
  "CharacterAsyncMetadata\022\236\001\n\014GetCharacter\022"
  "..ai.inworld.studio.v1alpha.GetCharacter"
  "Request\032$.ai.inworld.studio.v1alpha.Char"
  "acter\"8\202\323\344\223\002+\022)/v1alpha/{name=workspaces"
  "/*/characters/*}\332A\004name\022\261\001\n\016ListCharacte"
  "rs\0220.ai.inworld.studio.v1alpha.ListChara"
  "ctersRequest\0321.ai.inworld.studio.v1alpha"
  ".ListCharactersResponse\":\202\323\344\223\002+\022)/v1alph"
  "a/{parent=workspaces/*}/characters\332A\006par"
  "ent\022\312\001\n\017UpdateCharacter\0221.ai.inworld.stu"
  "dio.v1alpha.UpdateCharacterRequest\032$.ai."
  "inworld.studio.v1alpha.Character\"^\202\323\344\223\002@"
  "23/v1alpha/{character.name=workspaces/*/"
  "characters/*}:\tcharacter\332A\025character,upd"
  "ate_mask\022\333\001\n\017CreateCharacter\0221.ai.inworl"
  "d.studio.v1alpha.CreateCharacterRequest\032"
  "\035.google.longrunning.Operation\"v\202\323\344\223\0026\")"
  "/v1alpha/{parent=workspaces/*}/character"
  "s:\tcharacter\332A\020parent,character\312A$\n\tChar"
  "acter\022\027CreateCharacterMetadata\022\226\001\n\017Delet"
  "eCharacter\0221.ai.inworld.studio.v1alpha.D"
  "eleteCharacterRequest\032\026.google.protobuf."
  "Empty\"8\202\323\344\223\002+*)/v1alpha/{name=workspaces"
  "/*/characters/*}\332A\004name\022\334\001\n\030ReplaceChara"
  "cterRpmModel\022:.ai.inworld.studio.v1alpha"
  ".ReplaceCharacterRpmModelRequest\032$.ai.in"
  "world.studio.v1alpha.Character\"^\202\323\344\223\002L\"G"
  "/v1alpha/{character=workspaces/*/charact"
  "ers/*}:replaceCharacterRpmModel:\001*\332A\tcha"
  "racter\022\323\001\n\025ReplaceCharacterImage\0227.ai.in"
  "world.studio.v1alpha.ReplaceCharacterIma"
  "geRequest\032$.ai.inworld.studio.v1alpha.Ch"
  "aracter\"[\202\323\344\223\002I\"D/v1alpha/{character=wor"
  "kspaces/*/characters/*}:replaceCharacter"
  "Image:\001*\332A\tcharacter\022\333\001\n\025PreviewPromptTe"
  "mplate\0227.ai.inworld.studio.v1alpha.Previ"
  "ewPromptTemplateRequest\0328.ai.inworld.stu"
  "dio.v1alpha.PreviewPromptTempalteRespons"
  "e\"O\202\323\344\223\002I\"D/v1alpha/{character=workspace"
  "s/*/characters/*}:previewPromptTemplate:"
  "\001*\022\300\001\n\017CheckDeployInfo\0221.ai.inworld.stud"
  "io.v1alpha.CheckDeployInfoRequest\0322.ai.i"
  "nworld.studio.v1alpha.CheckDeployInfoRes"
  "ponse\"F\202\323\344\223\002@\022>/v1alpha/{character=works"
  "paces/*/characters/*}:checkDeployInfo\022\340\001"
  "\n\034GetCharacterAdvancedSettings\022>.ai.inwo"
  "rld.studio.v1alpha.GetCharacterAdvancedS"
  "ettingsRequest\0324.ai.inworld.studio.v1alp"
  "ha.CharacterAdvancedSettings\"J\202\323\344\223\002=\022;/v"
  "1alpha/{name=workspaces/*/characters/*/a"
  "dvanced-settings}\332A\004name\022\303\002\n\037UpdateChara"
  "cterAdvancedSettings\022A.ai.inworld.studio"
  ".v1alpha.UpdateCharacterAdvancedSettings"
  "Request\0324.ai.inworld.studio.v1alpha.Char"
  "acterAdvancedSettings\"\246\001\202\323\344\223\002v2W/v1alpha"
  "/{character_advanced_settings.name=works"
  "paces/*/characters/*/advanced-settings}:"
  "\033character_advanced_settings\332A\'character"
  "_advanced_settings,update_mask\022\235\001\n\016Share"
  "Character\0220.ai.inworld.studio.v1alpha.Sh"
  "areCharacterRequest\032\026.google.protobuf.Em"
  "pty\"A\202\323\344\223\0024\"//v1alpha/{name=workspaces/*"
  "/characters/*}:share:\001*\332A\004name\022\260\001\n\024Share"
  "CharacterPortal\0226.ai.inworld.studio.v1al"
  "pha.ShareCharacterPortalRequest\032\026.google"
  ".protobuf.Empty\"H\202\323\344\223\002;\"6/v1alpha/{name="
  "workspaces/*/characters/*/portal}:share:"
  "\001*\332A\004name\022\266\001\n\026UnshareCharacterPortal\0228.a"
  "i.inworld.studio.v1alpha.UnshareCharacte"
  "rPortalRequest\032\026.google.protobuf.Empty\"J"
  "\202\323\344\223\002=\"8/v1alpha/{name=workspaces/*/char"
  "acters/*/portal}:unshare:\001*\332A\004name\022\312\001\n\024L"
  "istSharedCharacters\0226.ai.inworld.studio."
  "v1alpha.ListSharedCharactersRequest\0327.ai"
  ".inworld.studio.v1alpha.ListSharedCharac"
  "tersResponse\"A\202\323\344\223\0022\0220/v1alpha/{parent=w"
  "orkspaces/*}/characters:shared\332A\006parent\022"
  "\314\001\n\025GetCharacterShareInfo\0227.ai.inworld.s"
  "tudio.v1alpha.GetCharacterShareInfoReque"
  "st\032-.ai.inworld.studio.v1alpha.Character"
  "ShareInfo\"K\202\323\344\223\002>\022</v1alpha/{name=worksp"
  "aces/*/characters/*/characterShareInfo}\332"
  "A\004nameB\231\001\n\031ai.inworld.studio.v1alphaB\017Ch"
  "aractersProtoP\001ZMgithub.com/inworld-ai/i"
  "nworld/serving/grpc-gateway/build/proto/"
  "studio/v1alpha\252\002\031Ai.Inworld.Studio.V1Alp"
  "hab\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_deps[11] = {
  &::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto,
  &::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_options_2eproto,
  &::descriptor_table_voices_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_sccs[45] = {
  &scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_CharacterInitialMood_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_CharacterPersonality_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_Meta_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_SafetyConfigEntry_DoNotUse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_Character_SharedPortalInfo_InteractionCountStat_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CharacterAdvancedSettings_SafetySpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CharacterShareInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CheckDeployInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CheckDeployInfoResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CloneCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CreateCharacterMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_CreateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_DeleteCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_DeployCharacterAsyncMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_DeployCharacterAsyncResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_DeployCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_GetCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_GetCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_GetCharacterShareInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ListCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ListCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ListSharedCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ListSharedCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_PreviewPromptTempalteResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_PreviewPromptTemplateRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ReplaceCharacterImageRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ReplaceCharacterRpmModelRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ShareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_ShareCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_UnshareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_UpdateCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
  &scc_info_UpdateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto = {
  false, false, descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto, "ai/inworld/studio/v1alpha/characters.proto", 14050,
  &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once, descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_sccs, descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_deps, 45, 11,
  schemas, file_default_instances, TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto::offsets,
  file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto, 45, file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto, file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto)), true);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_Pronoun_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[0];
}
bool Character_CharacterDescription_Pronoun_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_UNSPECIFIED;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_FEMALE;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_MALE;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_OTHER;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::Pronoun_MIN;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::Pronoun_MAX;
constexpr int Character_CharacterDescription::Pronoun_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_ExampleDialogStyle_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[1];
}
bool Character_CharacterDescription_ExampleDialogStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_UNSPECIFIED;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_DEFAULT;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_BUBBLY;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_FORMAL;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_BLUNT;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_INQUISITIVE;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_COMMANDING;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_EMPATHETIC;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_ENTERTAINING;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_HYPOCHONDRIAC;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_LAIDBACK;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_LONG_WINDED;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_MORAL;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_MYSTERIOUS;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_RACONTEUR;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_SARCASTIC;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_TENACIOUS;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_VILLAINOUS;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_CUSTOM;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::ExampleDialogStyle_MIN;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::ExampleDialogStyle_MAX;
constexpr int Character_CharacterDescription::ExampleDialogStyle_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_LifeStage_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[2];
}
bool Character_CharacterDescription_LifeStage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_UNSPECIFIED;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_INFANCY;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_TODDLERHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_PRESCHOOL;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_EARLY_SCHOOL;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_ADOLESCENCE;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_YOUNG_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_MIDDLE_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_LATE_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_CHILDHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LifeStage_MIN;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LifeStage_MAX;
constexpr int Character_CharacterDescription::LifeStage_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_Tag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[3];
}
bool Character_Tag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_Tag Character::TAG_UNSPECIFIED;
constexpr Character_Tag Character::TAG_MEMORY;
constexpr Character_Tag Character::TAG_APPEARANCE;
constexpr Character_Tag Character::Tag_MIN;
constexpr Character_Tag Character::Tag_MAX;
constexpr int Character::Tag_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_FourthWallContainment_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[4];
}
bool Character_FourthWallContainment_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Character_FourthWallContainment Character::FOURTH_WALL_CONTAINMENT_UNSPECIFIED;
constexpr Character_FourthWallContainment Character::FOURTH_WALL_CONTAINMENT_DISABLED;
constexpr Character_FourthWallContainment Character::FOURTH_WALL_CONTAINMENT_EXPERIMENTAL;
constexpr Character_FourthWallContainment Character::FourthWallContainment_MIN;
constexpr Character_FourthWallContainment Character::FourthWallContainment_MAX;
constexpr int Character::FourthWallContainment_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterAdvancedSettings_SafetyTopicName_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[5];
}
bool CharacterAdvancedSettings_SafetyTopicName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_UNSPECIFIED;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_SAFE_TOPIC;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_POLITICS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_FINANCES;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_DISGUSTING_STUFF;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_GENDER_BIAS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_SUBSTANCE_USE;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_HEALTH_ADVICE;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_RELIGION;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_RELATIONSHIPS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SafetyTopicName_MIN;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SafetyTopicName_MAX;
constexpr int CharacterAdvancedSettings::SafetyTopicName_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[6];
}
bool CharacterView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterItemView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[7];
}
bool CharacterItemView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterSharePurpose_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[8];
}
bool CharacterSharePurpose_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SafetyLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[9];
}
bool SafetyLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Character_CharacterDescription_CustomDialogStyle::_Internal {
 public:
};

Character_CharacterDescription_CustomDialogStyle::Character_CharacterDescription_CustomDialogStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  adjectives_(arena),
  adverbs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
}
Character_CharacterDescription_CustomDialogStyle::Character_CharacterDescription_CustomDialogStyle(const Character_CharacterDescription_CustomDialogStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      adjectives_(from.adjectives_),
      adverbs_(from.adverbs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_display_name().empty()) {
    display_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_display_name(), 
      GetArena());
  }
  colloquialism_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_colloquialism().empty()) {
    colloquialism_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_colloquialism(), 
      GetArena());
  }
  is_active_ = from.is_active_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
}

void Character_CharacterDescription_CustomDialogStyle::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  colloquialism_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_active_ = false;
}

Character_CharacterDescription_CustomDialogStyle::~Character_CharacterDescription_CustomDialogStyle() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterDescription_CustomDialogStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  colloquialism_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Character_CharacterDescription_CustomDialogStyle::ArenaDtor(void* object) {
  Character_CharacterDescription_CustomDialogStyle* _this = reinterpret_cast< Character_CharacterDescription_CustomDialogStyle* >(object);
  (void)_this;
}
void Character_CharacterDescription_CustomDialogStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterDescription_CustomDialogStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterDescription_CustomDialogStyle& Character_CharacterDescription_CustomDialogStyle::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterDescription_CustomDialogStyle_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterDescription_CustomDialogStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  adjectives_.Clear();
  adverbs_.Clear();
  uuid_.ClearToEmpty();
  display_name_.ClearToEmpty();
  colloquialism_.ClearToEmpty();
  is_active_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterDescription_CustomDialogStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string display_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_display_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.display_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_active = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string adjectives = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_adjectives();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adjectives"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string adverbs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_adverbs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adverbs"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // string colloquialism = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_colloquialism();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.colloquialism"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterDescription_CustomDialogStyle::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.display_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_display_name(), target);
  }

  // bool is_active = 3;
  if (this->is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_active(), target);
  }

  // repeated string adjectives = 4;
  for (int i = 0, n = this->_internal_adjectives_size(); i < n; i++) {
    const auto& s = this->_internal_adjectives(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adjectives");
    target = stream->WriteString(4, s, target);
  }

  // repeated string adverbs = 5;
  for (int i = 0, n = this->_internal_adverbs_size(); i < n; i++) {
    const auto& s = this->_internal_adverbs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adverbs");
    target = stream->WriteString(5, s, target);
  }

  // string colloquialism = 6;
  if (this->colloquialism().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_colloquialism().data(), static_cast<int>(this->_internal_colloquialism().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.colloquialism");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_colloquialism(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  return target;
}

size_t Character_CharacterDescription_CustomDialogStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string adjectives = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(adjectives_.size());
  for (int i = 0, n = adjectives_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      adjectives_.Get(i));
  }

  // repeated string adverbs = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(adverbs_.size());
  for (int i = 0, n = adverbs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      adverbs_.Get(i));
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string colloquialism = 6;
  if (this->colloquialism().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_colloquialism());
  }

  // bool is_active = 3;
  if (this->is_active() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterDescription_CustomDialogStyle::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterDescription_CustomDialogStyle* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterDescription_CustomDialogStyle>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
    MergeFrom(*source);
  }
}

void Character_CharacterDescription_CustomDialogStyle::MergeFrom(const Character_CharacterDescription_CustomDialogStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  adjectives_.MergeFrom(from.adjectives_);
  adverbs_.MergeFrom(from.adverbs_);
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.display_name().size() > 0) {
    _internal_set_display_name(from._internal_display_name());
  }
  if (from.colloquialism().size() > 0) {
    _internal_set_colloquialism(from._internal_colloquialism());
  }
  if (from.is_active() != 0) {
    _internal_set_is_active(from._internal_is_active());
  }
}

void Character_CharacterDescription_CustomDialogStyle::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterDescription_CustomDialogStyle::CopyFrom(const Character_CharacterDescription_CustomDialogStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterDescription_CustomDialogStyle::IsInitialized() const {
  return true;
}

void Character_CharacterDescription_CustomDialogStyle::InternalSwap(Character_CharacterDescription_CustomDialogStyle* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  adjectives_.InternalSwap(&other->adjectives_);
  adverbs_.InternalSwap(&other->adverbs_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.Swap(&other->display_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  colloquialism_.Swap(&other->colloquialism_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(is_active_, other->is_active_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterDescription_CustomDialogStyle::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_CharacterDescription::_Internal {
 public:
};

Character_CharacterDescription::Character_CharacterDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  nicknames_(arena),
  personality_adjectives_(arena),
  hobby_or_interests_(arena),
  custom_dialog_styles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
}
Character_CharacterDescription::Character_CharacterDescription(const Character_CharacterDescription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      nicknames_(from.nicknames_),
      personality_adjectives_(from.personality_adjectives_),
      hobby_or_interests_(from.hobby_or_interests_),
      custom_dialog_styles_(from.custom_dialog_styles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_given_name().empty()) {
    given_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_given_name(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  motivation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_motivation().empty()) {
    motivation_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_motivation(), 
      GetArena());
  }
  wikipedia_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_wikipedia_uri().empty()) {
    wikipedia_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_wikipedia_uri(), 
      GetArena());
  }
  player_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_player_role().empty()) {
    player_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_player_role(), 
      GetArena());
  }
  default_context_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_default_context().empty()) {
    default_context_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_default_context(), 
      GetArena());
  }
  example_dialog_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_example_dialog().empty()) {
    example_dialog_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_example_dialog(), 
      GetArena());
  }
  character_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character_role().empty()) {
    character_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character_role(), 
      GetArena());
  }
  flaws_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_flaws().empty()) {
    flaws_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_flaws(), 
      GetArena());
  }
  ::memcpy(&pronoun_, &from.pronoun_,
    static_cast<size_t>(reinterpret_cast<char*>(&narrative_actions_enabled_) -
    reinterpret_cast<char*>(&pronoun_)) + sizeof(narrative_actions_enabled_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
}

void Character_CharacterDescription::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  given_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  motivation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wikipedia_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  player_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_context_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_dialog_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  character_role_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flaws_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&pronoun_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&narrative_actions_enabled_) -
      reinterpret_cast<char*>(&pronoun_)) + sizeof(narrative_actions_enabled_));
}

Character_CharacterDescription::~Character_CharacterDescription() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterDescription::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  given_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  motivation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  wikipedia_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  player_role_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_context_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  example_dialog_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  character_role_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flaws_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Character_CharacterDescription::ArenaDtor(void* object) {
  Character_CharacterDescription* _this = reinterpret_cast< Character_CharacterDescription* >(object);
  (void)_this;
}
void Character_CharacterDescription::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterDescription::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterDescription& Character_CharacterDescription::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterDescription_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nicknames_.Clear();
  personality_adjectives_.Clear();
  hobby_or_interests_.Clear();
  custom_dialog_styles_.Clear();
  given_name_.ClearToEmpty();
  description_.ClearToEmpty();
  motivation_.ClearToEmpty();
  wikipedia_uri_.ClearToEmpty();
  player_role_.ClearToEmpty();
  default_context_.ClearToEmpty();
  example_dialog_.ClearToEmpty();
  character_role_.ClearToEmpty();
  flaws_.ClearToEmpty();
  ::memset(&pronoun_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&narrative_actions_enabled_) -
      reinterpret_cast<char*>(&pronoun_)) + sizeof(narrative_actions_enabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterDescription::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string given_name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_given_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.given_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pronoun(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_Pronoun>(val));
        } else goto handle_unusual;
        continue;
      // repeated string nicknames = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_nicknames();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.nicknames"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string motivation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_motivation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.motivation"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string wikipedia_uri = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_wikipedia_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.wikipedia_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string player_role = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_player_role();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.player_role"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string default_context = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_default_context();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.default_context"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string example_dialog = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_example_dialog();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.example_dialog"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_example_dialog_style(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_ExampleDialogStyle>(val));
        } else goto handle_unusual;
        continue;
      // repeated string personality_adjectives = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_personality_adjectives();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.personality_adjectives"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_life_stage(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_LifeStage>(val));
        } else goto handle_unusual;
        continue;
      // repeated string hobby_or_interests = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_hobby_or_interests();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.hobby_or_interests"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // string character_role = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_character_role();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.character_role"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool narrative_actions_enabled = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          narrative_actions_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle custom_dialog_styles = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_custom_dialog_styles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else goto handle_unusual;
        continue;
      // string flaws = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_flaws();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.flaws"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterDescription::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string given_name = 1 [(.ai.inworld.options.examples) = {
  if (this->given_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_given_name().data(), static_cast<int>(this->_internal_given_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.given_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_given_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
  if (this->pronoun() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_pronoun(), target);
  }

  // repeated string nicknames = 4;
  for (int i = 0, n = this->_internal_nicknames_size(); i < n; i++) {
    const auto& s = this->_internal_nicknames(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.nicknames");
    target = stream->WriteString(4, s, target);
  }

  // string motivation = 5;
  if (this->motivation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_motivation().data(), static_cast<int>(this->_internal_motivation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.motivation");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_motivation(), target);
  }

  // string wikipedia_uri = 6;
  if (this->wikipedia_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wikipedia_uri().data(), static_cast<int>(this->_internal_wikipedia_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.wikipedia_uri");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_wikipedia_uri(), target);
  }

  // string player_role = 7;
  if (this->player_role().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_player_role().data(), static_cast<int>(this->_internal_player_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.player_role");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_player_role(), target);
  }

  // string default_context = 8;
  if (this->default_context().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_context().data(), static_cast<int>(this->_internal_default_context().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.default_context");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_default_context(), target);
  }

  // string example_dialog = 9;
  if (this->example_dialog().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_example_dialog().data(), static_cast<int>(this->_internal_example_dialog().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.example_dialog");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_example_dialog(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
  if (this->example_dialog_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_example_dialog_style(), target);
  }

  // repeated string personality_adjectives = 11;
  for (int i = 0, n = this->_internal_personality_adjectives_size(); i < n; i++) {
    const auto& s = this->_internal_personality_adjectives(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.personality_adjectives");
    target = stream->WriteString(11, s, target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
  if (this->life_stage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_life_stage(), target);
  }

  // repeated string hobby_or_interests = 13;
  for (int i = 0, n = this->_internal_hobby_or_interests_size(); i < n; i++) {
    const auto& s = this->_internal_hobby_or_interests(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.hobby_or_interests");
    target = stream->WriteString(13, s, target);
  }

  // string character_role = 14;
  if (this->character_role().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character_role().data(), static_cast<int>(this->_internal_character_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.character_role");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_character_role(), target);
  }

  // bool narrative_actions_enabled = 15;
  if (this->narrative_actions_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_narrative_actions_enabled(), target);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle custom_dialog_styles = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_custom_dialog_styles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, this->_internal_custom_dialog_styles(i), target, stream);
  }

  // string flaws = 17;
  if (this->flaws().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flaws().data(), static_cast<int>(this->_internal_flaws().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.flaws");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_flaws(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  return target;
}

size_t Character_CharacterDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string nicknames = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(nicknames_.size());
  for (int i = 0, n = nicknames_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      nicknames_.Get(i));
  }

  // repeated string personality_adjectives = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(personality_adjectives_.size());
  for (int i = 0, n = personality_adjectives_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      personality_adjectives_.Get(i));
  }

  // repeated string hobby_or_interests = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(hobby_or_interests_.size());
  for (int i = 0, n = hobby_or_interests_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      hobby_or_interests_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle custom_dialog_styles = 16;
  total_size += 2UL * this->_internal_custom_dialog_styles_size();
  for (const auto& msg : this->custom_dialog_styles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string given_name = 1 [(.ai.inworld.options.examples) = {
  if (this->given_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_given_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string motivation = 5;
  if (this->motivation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_motivation());
  }

  // string wikipedia_uri = 6;
  if (this->wikipedia_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wikipedia_uri());
  }

  // string player_role = 7;
  if (this->player_role().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_role());
  }

  // string default_context = 8;
  if (this->default_context().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_context());
  }

  // string example_dialog = 9;
  if (this->example_dialog().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_example_dialog());
  }

  // string character_role = 14;
  if (this->character_role().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character_role());
  }

  // string flaws = 17;
  if (this->flaws().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flaws());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
  if (this->pronoun() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_pronoun());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
  if (this->example_dialog_style() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_example_dialog_style());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
  if (this->life_stage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_life_stage());
  }

  // bool narrative_actions_enabled = 15;
  if (this->narrative_actions_enabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterDescription::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterDescription* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterDescription>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterDescription)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterDescription)
    MergeFrom(*source);
  }
}

void Character_CharacterDescription::MergeFrom(const Character_CharacterDescription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nicknames_.MergeFrom(from.nicknames_);
  personality_adjectives_.MergeFrom(from.personality_adjectives_);
  hobby_or_interests_.MergeFrom(from.hobby_or_interests_);
  custom_dialog_styles_.MergeFrom(from.custom_dialog_styles_);
  if (from.given_name().size() > 0) {
    _internal_set_given_name(from._internal_given_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.motivation().size() > 0) {
    _internal_set_motivation(from._internal_motivation());
  }
  if (from.wikipedia_uri().size() > 0) {
    _internal_set_wikipedia_uri(from._internal_wikipedia_uri());
  }
  if (from.player_role().size() > 0) {
    _internal_set_player_role(from._internal_player_role());
  }
  if (from.default_context().size() > 0) {
    _internal_set_default_context(from._internal_default_context());
  }
  if (from.example_dialog().size() > 0) {
    _internal_set_example_dialog(from._internal_example_dialog());
  }
  if (from.character_role().size() > 0) {
    _internal_set_character_role(from._internal_character_role());
  }
  if (from.flaws().size() > 0) {
    _internal_set_flaws(from._internal_flaws());
  }
  if (from.pronoun() != 0) {
    _internal_set_pronoun(from._internal_pronoun());
  }
  if (from.example_dialog_style() != 0) {
    _internal_set_example_dialog_style(from._internal_example_dialog_style());
  }
  if (from.life_stage() != 0) {
    _internal_set_life_stage(from._internal_life_stage());
  }
  if (from.narrative_actions_enabled() != 0) {
    _internal_set_narrative_actions_enabled(from._internal_narrative_actions_enabled());
  }
}

void Character_CharacterDescription::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterDescription::CopyFrom(const Character_CharacterDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterDescription::IsInitialized() const {
  return true;
}

void Character_CharacterDescription::InternalSwap(Character_CharacterDescription* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  nicknames_.InternalSwap(&other->nicknames_);
  personality_adjectives_.InternalSwap(&other->personality_adjectives_);
  hobby_or_interests_.InternalSwap(&other->hobby_or_interests_);
  custom_dialog_styles_.InternalSwap(&other->custom_dialog_styles_);
  given_name_.Swap(&other->given_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  motivation_.Swap(&other->motivation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  wikipedia_uri_.Swap(&other->wikipedia_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  player_role_.Swap(&other->player_role_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  default_context_.Swap(&other->default_context_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  example_dialog_.Swap(&other->example_dialog_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  character_role_.Swap(&other->character_role_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flaws_.Swap(&other->flaws_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterDescription, narrative_actions_enabled_)
      + sizeof(Character_CharacterDescription::narrative_actions_enabled_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterDescription, pronoun_)>(
          reinterpret_cast<char*>(&pronoun_),
          reinterpret_cast<char*>(&other->pronoun_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterDescription::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainSettings_ConversationConfig_FillerSpec::_Internal {
 public:
};

Character_BrainSettings_ConversationConfig_FillerSpec::Character_BrainSettings_ConversationConfig_FillerSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
}
Character_BrainSettings_ConversationConfig_FillerSpec::Character_BrainSettings_ConversationConfig_FillerSpec(const Character_BrainSettings_ConversationConfig_FillerSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fillers_disabled_ = from.fillers_disabled_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
}

void Character_BrainSettings_ConversationConfig_FillerSpec::SharedCtor() {
  fillers_disabled_ = false;
}

Character_BrainSettings_ConversationConfig_FillerSpec::~Character_BrainSettings_ConversationConfig_FillerSpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainSettings_ConversationConfig_FillerSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_BrainSettings_ConversationConfig_FillerSpec::ArenaDtor(void* object) {
  Character_BrainSettings_ConversationConfig_FillerSpec* _this = reinterpret_cast< Character_BrainSettings_ConversationConfig_FillerSpec* >(object);
  (void)_this;
}
void Character_BrainSettings_ConversationConfig_FillerSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainSettings_ConversationConfig_FillerSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainSettings_ConversationConfig_FillerSpec& Character_BrainSettings_ConversationConfig_FillerSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainSettings_ConversationConfig_FillerSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainSettings_ConversationConfig_FillerSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fillers_disabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings_ConversationConfig_FillerSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool fillers_disabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          fillers_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainSettings_ConversationConfig_FillerSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fillers_disabled = 1;
  if (this->fillers_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_fillers_disabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  return target;
}

size_t Character_BrainSettings_ConversationConfig_FillerSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool fillers_disabled = 1;
  if (this->fillers_disabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainSettings_ConversationConfig_FillerSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainSettings_ConversationConfig_FillerSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainSettings_ConversationConfig_FillerSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
    MergeFrom(*source);
  }
}

void Character_BrainSettings_ConversationConfig_FillerSpec::MergeFrom(const Character_BrainSettings_ConversationConfig_FillerSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fillers_disabled() != 0) {
    _internal_set_fillers_disabled(from._internal_fillers_disabled());
  }
}

void Character_BrainSettings_ConversationConfig_FillerSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainSettings_ConversationConfig_FillerSpec::CopyFrom(const Character_BrainSettings_ConversationConfig_FillerSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings_ConversationConfig_FillerSpec::IsInitialized() const {
  return true;
}

void Character_BrainSettings_ConversationConfig_FillerSpec::InternalSwap(Character_BrainSettings_ConversationConfig_FillerSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(fillers_disabled_, other->fillers_disabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings_ConversationConfig_FillerSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainSettings_ConversationConfig::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec& filler_spec(const Character_BrainSettings_ConversationConfig* msg);
};

const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec&
Character_BrainSettings_ConversationConfig::_Internal::filler_spec(const Character_BrainSettings_ConversationConfig* msg) {
  return *msg->filler_spec_;
}
Character_BrainSettings_ConversationConfig::Character_BrainSettings_ConversationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
}
Character_BrainSettings_ConversationConfig::Character_BrainSettings_ConversationConfig(const Character_BrainSettings_ConversationConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_filler_spec()) {
    filler_spec_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec(*from.filler_spec_);
  } else {
    filler_spec_ = nullptr;
  }
  ::memcpy(&emotions_disabled_, &from.emotions_disabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&behavioral_contexts_disabled_) -
    reinterpret_cast<char*>(&emotions_disabled_)) + sizeof(behavioral_contexts_disabled_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
}

void Character_BrainSettings_ConversationConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&filler_spec_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&behavioral_contexts_disabled_) -
      reinterpret_cast<char*>(&filler_spec_)) + sizeof(behavioral_contexts_disabled_));
}

Character_BrainSettings_ConversationConfig::~Character_BrainSettings_ConversationConfig() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainSettings_ConversationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete filler_spec_;
}

void Character_BrainSettings_ConversationConfig::ArenaDtor(void* object) {
  Character_BrainSettings_ConversationConfig* _this = reinterpret_cast< Character_BrainSettings_ConversationConfig* >(object);
  (void)_this;
}
void Character_BrainSettings_ConversationConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainSettings_ConversationConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainSettings_ConversationConfig& Character_BrainSettings_ConversationConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainSettings_ConversationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && filler_spec_ != nullptr) {
    delete filler_spec_;
  }
  filler_spec_ = nullptr;
  ::memset(&emotions_disabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&behavioral_contexts_disabled_) -
      reinterpret_cast<char*>(&emotions_disabled_)) + sizeof(behavioral_contexts_disabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings_ConversationConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_filler_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool emotions_disabled = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          emotions_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool behavioral_contexts_disabled = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          behavioral_contexts_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainSettings_ConversationConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
  if (this->has_filler_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::filler_spec(this), target, stream);
  }

  // bool emotions_disabled = 4;
  if (this->emotions_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_emotions_disabled(), target);
  }

  // bool behavioral_contexts_disabled = 5;
  if (this->behavioral_contexts_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_behavioral_contexts_disabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  return target;
}

size_t Character_BrainSettings_ConversationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
  if (this->has_filler_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *filler_spec_);
  }

  // bool emotions_disabled = 4;
  if (this->emotions_disabled() != 0) {
    total_size += 1 + 1;
  }

  // bool behavioral_contexts_disabled = 5;
  if (this->behavioral_contexts_disabled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainSettings_ConversationConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainSettings_ConversationConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainSettings_ConversationConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
    MergeFrom(*source);
  }
}

void Character_BrainSettings_ConversationConfig::MergeFrom(const Character_BrainSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filler_spec()) {
    _internal_mutable_filler_spec()->::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec::MergeFrom(from._internal_filler_spec());
  }
  if (from.emotions_disabled() != 0) {
    _internal_set_emotions_disabled(from._internal_emotions_disabled());
  }
  if (from.behavioral_contexts_disabled() != 0) {
    _internal_set_behavioral_contexts_disabled(from._internal_behavioral_contexts_disabled());
  }
}

void Character_BrainSettings_ConversationConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainSettings_ConversationConfig::CopyFrom(const Character_BrainSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings_ConversationConfig::IsInitialized() const {
  return true;
}

void Character_BrainSettings_ConversationConfig::InternalSwap(Character_BrainSettings_ConversationConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_BrainSettings_ConversationConfig, behavioral_contexts_disabled_)
      + sizeof(Character_BrainSettings_ConversationConfig::behavioral_contexts_disabled_)
      - PROTOBUF_FIELD_OFFSET(Character_BrainSettings_ConversationConfig, filler_spec_)>(
          reinterpret_cast<char*>(&filler_spec_),
          reinterpret_cast<char*>(&other->filler_spec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings_ConversationConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainSettings::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig& conversation_config(const Character_BrainSettings* msg);
};

const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig&
Character_BrainSettings::_Internal::conversation_config(const Character_BrainSettings* msg) {
  return *msg->conversation_config_;
}
Character_BrainSettings::Character_BrainSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
}
Character_BrainSettings::Character_BrainSettings(const Character_BrainSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_conversation_config()) {
    conversation_config_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig(*from.conversation_config_);
  } else {
    conversation_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
}

void Character_BrainSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  conversation_config_ = nullptr;
}

Character_BrainSettings::~Character_BrainSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete conversation_config_;
}

void Character_BrainSettings::ArenaDtor(void* object) {
  Character_BrainSettings* _this = reinterpret_cast< Character_BrainSettings* >(object);
  (void)_this;
}
void Character_BrainSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainSettings& Character_BrainSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && conversation_config_ != nullptr) {
    delete conversation_config_;
  }
  conversation_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_conversation_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
  if (this->has_conversation_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::conversation_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings)
  return target;
}

size_t Character_BrainSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
  if (this->has_conversation_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conversation_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainSettings)
    MergeFrom(*source);
  }
}

void Character_BrainSettings::MergeFrom(const Character_BrainSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_conversation_config()) {
    _internal_mutable_conversation_config()->::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig::MergeFrom(from._internal_conversation_config());
  }
}

void Character_BrainSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainSettings::CopyFrom(const Character_BrainSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings::IsInitialized() const {
  return true;
}

void Character_BrainSettings::InternalSwap(Character_BrainSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(conversation_config_, other->conversation_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_BrainTrigger::_Internal {
 public:
};

Character_BrainTrigger::Character_BrainTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
}
Character_BrainTrigger::Character_BrainTrigger(const Character_BrainTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  trigger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_trigger().empty()) {
    trigger_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_trigger(), 
      GetArena());
  }
  situation_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_situation_description().empty()) {
    situation_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_situation_description(), 
      GetArena());
  }
  start_conversation_ = from.start_conversation_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
}

void Character_BrainTrigger::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  trigger_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  situation_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_conversation_ = false;
}

Character_BrainTrigger::~Character_BrainTrigger() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_BrainTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  trigger_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  situation_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Character_BrainTrigger::ArenaDtor(void* object) {
  Character_BrainTrigger* _this = reinterpret_cast< Character_BrainTrigger* >(object);
  (void)_this;
}
void Character_BrainTrigger::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_BrainTrigger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_BrainTrigger& Character_BrainTrigger::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_BrainTrigger_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_BrainTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trigger_.ClearToEmpty();
  situation_description_.ClearToEmpty();
  start_conversation_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainTrigger::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string trigger = 1 [(.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_trigger();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.BrainTrigger.trigger"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string situation_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_situation_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.BrainTrigger.situation_description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool start_conversation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          start_conversation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_BrainTrigger::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (this->trigger().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger().data(), static_cast<int>(this->_internal_trigger().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.BrainTrigger.trigger");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_trigger(), target);
  }

  // string situation_description = 2;
  if (this->situation_description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_situation_description().data(), static_cast<int>(this->_internal_situation_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.BrainTrigger.situation_description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_situation_description(), target);
  }

  // bool start_conversation = 3;
  if (this->start_conversation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_start_conversation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  return target;
}

size_t Character_BrainTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (this->trigger().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger());
  }

  // string situation_description = 2;
  if (this->situation_description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_situation_description());
  }

  // bool start_conversation = 3;
  if (this->start_conversation() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_BrainTrigger::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_BrainTrigger* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_BrainTrigger>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.BrainTrigger)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.BrainTrigger)
    MergeFrom(*source);
  }
}

void Character_BrainTrigger::MergeFrom(const Character_BrainTrigger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trigger().size() > 0) {
    _internal_set_trigger(from._internal_trigger());
  }
  if (from.situation_description().size() > 0) {
    _internal_set_situation_description(from._internal_situation_description());
  }
  if (from.start_conversation() != 0) {
    _internal_set_start_conversation(from._internal_start_conversation());
  }
}

void Character_BrainTrigger::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_BrainTrigger::CopyFrom(const Character_BrainTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainTrigger::IsInitialized() const {
  return true;
}

void Character_BrainTrigger::InternalSwap(Character_BrainTrigger* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  trigger_.Swap(&other->trigger_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  situation_description_.Swap(&other->situation_description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(start_conversation_, other->start_conversation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainTrigger::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_CharacterAssets::_Internal {
 public:
  static const ::ai::inworld::voices::Voice& voice(const Character_CharacterAssets* msg);
};

const ::ai::inworld::voices::Voice&
Character_CharacterAssets::_Internal::voice(const Character_CharacterAssets* msg) {
  return *msg->voice_;
}
void Character_CharacterAssets::clear_voice() {
  if (GetArena() == nullptr && voice_ != nullptr) {
    delete voice_;
  }
  voice_ = nullptr;
}
Character_CharacterAssets::Character_CharacterAssets(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
}
Character_CharacterAssets::Character_CharacterAssets(const Character_CharacterAssets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_model_uri().empty()) {
    rpm_model_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_model_uri(), 
      GetArena());
  }
  rpm_image_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri().empty()) {
    rpm_image_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri(), 
      GetArena());
  }
  rpm_image_uri_portrait_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    rpm_image_uri_portrait_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri_portrait(), 
      GetArena());
  }
  rpm_image_uri_posture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_image_uri_posture().empty()) {
    rpm_image_uri_posture_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_image_uri_posture(), 
      GetArena());
  }
  avatar_img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar_img().empty()) {
    avatar_img_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_avatar_img(), 
      GetArena());
  }
  avatar_img_original_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar_img_original().empty()) {
    avatar_img_original_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_avatar_img_original(), 
      GetArena());
  }
  avatar_background_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar_background().empty()) {
    avatar_background_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_avatar_background(), 
      GetArena());
  }
  avatar_material_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avatar_material().empty()) {
    avatar_material_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_avatar_material(), 
      GetArena());
  }
  if (from._internal_has_voice()) {
    voice_ = new ::ai::inworld::voices::Voice(*from.voice_);
  } else {
    voice_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
}

void Character_CharacterAssets::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_portrait_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_posture_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_img_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_img_original_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_background_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_material_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  voice_ = nullptr;
}

Character_CharacterAssets::~Character_CharacterAssets() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterAssets::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rpm_model_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_portrait_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_image_uri_posture_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_img_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_img_original_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_background_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avatar_material_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete voice_;
}

void Character_CharacterAssets::ArenaDtor(void* object) {
  Character_CharacterAssets* _this = reinterpret_cast< Character_CharacterAssets* >(object);
  (void)_this;
}
void Character_CharacterAssets::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterAssets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterAssets& Character_CharacterAssets::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterAssets_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterAssets::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rpm_model_uri_.ClearToEmpty();
  rpm_image_uri_.ClearToEmpty();
  rpm_image_uri_portrait_.ClearToEmpty();
  rpm_image_uri_posture_.ClearToEmpty();
  avatar_img_.ClearToEmpty();
  avatar_img_original_.ClearToEmpty();
  avatar_background_.ClearToEmpty();
  avatar_material_.ClearToEmpty();
  if (GetArena() == nullptr && voice_ != nullptr) {
    delete voice_;
  }
  voice_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterAssets::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_model_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_rpm_image_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_rpm_image_uri_portrait();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_portrait"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_rpm_image_uri_posture();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_posture"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.voices.Voice voice = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_voice(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avatar_img = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_avatar_img();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avatar_img_original = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_avatar_img_original();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img_original"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avatar_background = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_avatar_background();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_background"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avatar_material = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_avatar_material();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_material"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterAssets::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_model_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_model_uri(), target);
  }

  // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri().data(), static_cast<int>(this->_internal_rpm_image_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rpm_image_uri(), target);
  }

  // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_portrait().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_portrait().data(), static_cast<int>(this->_internal_rpm_image_uri_portrait().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_portrait");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_rpm_image_uri_portrait(), target);
  }

  // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_posture().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_posture().data(), static_cast<int>(this->_internal_rpm_image_uri_posture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_posture");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_rpm_image_uri_posture(), target);
  }

  // .ai.inworld.voices.Voice voice = 6;
  if (this->has_voice()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::voice(this), target, stream);
  }

  // string avatar_img = 7;
  if (this->avatar_img().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_img().data(), static_cast<int>(this->_internal_avatar_img().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_avatar_img(), target);
  }

  // string avatar_img_original = 8;
  if (this->avatar_img_original().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_img_original().data(), static_cast<int>(this->_internal_avatar_img_original().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img_original");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_avatar_img_original(), target);
  }

  // string avatar_background = 9;
  if (this->avatar_background().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_background().data(), static_cast<int>(this->_internal_avatar_background().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_background");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_avatar_background(), target);
  }

  // string avatar_material = 10;
  if (this->avatar_material().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_material().data(), static_cast<int>(this->_internal_avatar_material().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_material");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_avatar_material(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  return target;
}

size_t Character_CharacterAssets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_model_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri());
  }

  // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_portrait().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_portrait());
  }

  // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->rpm_image_uri_posture().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_posture());
  }

  // string avatar_img = 7;
  if (this->avatar_img().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_img());
  }

  // string avatar_img_original = 8;
  if (this->avatar_img_original().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_img_original());
  }

  // string avatar_background = 9;
  if (this->avatar_background().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_background());
  }

  // string avatar_material = 10;
  if (this->avatar_material().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_material());
  }

  // .ai.inworld.voices.Voice voice = 6;
  if (this->has_voice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *voice_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterAssets::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterAssets* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterAssets>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterAssets)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterAssets)
    MergeFrom(*source);
  }
}

void Character_CharacterAssets::MergeFrom(const Character_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rpm_model_uri().size() > 0) {
    _internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
  if (from.rpm_image_uri().size() > 0) {
    _internal_set_rpm_image_uri(from._internal_rpm_image_uri());
  }
  if (from.rpm_image_uri_portrait().size() > 0) {
    _internal_set_rpm_image_uri_portrait(from._internal_rpm_image_uri_portrait());
  }
  if (from.rpm_image_uri_posture().size() > 0) {
    _internal_set_rpm_image_uri_posture(from._internal_rpm_image_uri_posture());
  }
  if (from.avatar_img().size() > 0) {
    _internal_set_avatar_img(from._internal_avatar_img());
  }
  if (from.avatar_img_original().size() > 0) {
    _internal_set_avatar_img_original(from._internal_avatar_img_original());
  }
  if (from.avatar_background().size() > 0) {
    _internal_set_avatar_background(from._internal_avatar_background());
  }
  if (from.avatar_material().size() > 0) {
    _internal_set_avatar_material(from._internal_avatar_material());
  }
  if (from.has_voice()) {
    _internal_mutable_voice()->::ai::inworld::voices::Voice::MergeFrom(from._internal_voice());
  }
}

void Character_CharacterAssets::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterAssets::CopyFrom(const Character_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterAssets::IsInitialized() const {
  return true;
}

void Character_CharacterAssets::InternalSwap(Character_CharacterAssets* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rpm_model_uri_.Swap(&other->rpm_model_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_.Swap(&other->rpm_image_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_portrait_.Swap(&other->rpm_image_uri_portrait_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_image_uri_posture_.Swap(&other->rpm_image_uri_posture_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_img_.Swap(&other->avatar_img_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_img_original_.Swap(&other->avatar_img_original_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_background_.Swap(&other->avatar_background_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avatar_material_.Swap(&other->avatar_material_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(voice_, other->voice_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterAssets::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_CharacterInitialMood::_Internal {
 public:
};

Character_CharacterInitialMood::Character_CharacterInitialMood(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
}
Character_CharacterInitialMood::Character_CharacterInitialMood(const Character_CharacterInitialMood& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&joy_, &from.joy_,
    static_cast<size_t>(reinterpret_cast<char*>(&surprise_) -
    reinterpret_cast<char*>(&joy_)) + sizeof(surprise_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
}

void Character_CharacterInitialMood::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&joy_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&surprise_) -
      reinterpret_cast<char*>(&joy_)) + sizeof(surprise_));
}

Character_CharacterInitialMood::~Character_CharacterInitialMood() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterInitialMood::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_CharacterInitialMood::ArenaDtor(void* object) {
  Character_CharacterInitialMood* _this = reinterpret_cast< Character_CharacterInitialMood* >(object);
  (void)_this;
}
void Character_CharacterInitialMood::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterInitialMood::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterInitialMood& Character_CharacterInitialMood::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterInitialMood_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterInitialMood::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&joy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&surprise_) -
      reinterpret_cast<char*>(&joy_)) + sizeof(surprise_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterInitialMood::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 joy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          joy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 fear = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          fear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 trust = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          trust_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 surprise = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          surprise_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterInitialMood::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 joy = 1;
  if (this->joy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_joy(), target);
  }

  // int32 fear = 2;
  if (this->fear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_fear(), target);
  }

  // int32 trust = 3;
  if (this->trust() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_trust(), target);
  }

  // int32 surprise = 4;
  if (this->surprise() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_surprise(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  return target;
}

size_t Character_CharacterInitialMood::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 joy = 1;
  if (this->joy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_joy());
  }

  // int32 fear = 2;
  if (this->fear() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_fear());
  }

  // int32 trust = 3;
  if (this->trust() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_trust());
  }

  // int32 surprise = 4;
  if (this->surprise() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_surprise());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterInitialMood::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterInitialMood* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterInitialMood>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
    MergeFrom(*source);
  }
}

void Character_CharacterInitialMood::MergeFrom(const Character_CharacterInitialMood& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.joy() != 0) {
    _internal_set_joy(from._internal_joy());
  }
  if (from.fear() != 0) {
    _internal_set_fear(from._internal_fear());
  }
  if (from.trust() != 0) {
    _internal_set_trust(from._internal_trust());
  }
  if (from.surprise() != 0) {
    _internal_set_surprise(from._internal_surprise());
  }
}

void Character_CharacterInitialMood::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterInitialMood::CopyFrom(const Character_CharacterInitialMood& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterInitialMood::IsInitialized() const {
  return true;
}

void Character_CharacterInitialMood::InternalSwap(Character_CharacterInitialMood* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterInitialMood, surprise_)
      + sizeof(Character_CharacterInitialMood::surprise_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterInitialMood, joy_)>(
          reinterpret_cast<char*>(&joy_),
          reinterpret_cast<char*>(&other->joy_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterInitialMood::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_CharacterPersonality::_Internal {
 public:
};

Character_CharacterPersonality::Character_CharacterPersonality(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
}
Character_CharacterPersonality::Character_CharacterPersonality(const Character_CharacterPersonality& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&positive_, &from.positive_,
    static_cast<size_t>(reinterpret_cast<char*>(&extravert_) -
    reinterpret_cast<char*>(&positive_)) + sizeof(extravert_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
}

void Character_CharacterPersonality::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&positive_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&extravert_) -
      reinterpret_cast<char*>(&positive_)) + sizeof(extravert_));
}

Character_CharacterPersonality::~Character_CharacterPersonality() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_CharacterPersonality::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_CharacterPersonality::ArenaDtor(void* object) {
  Character_CharacterPersonality* _this = reinterpret_cast< Character_CharacterPersonality* >(object);
  (void)_this;
}
void Character_CharacterPersonality::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_CharacterPersonality::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_CharacterPersonality& Character_CharacterPersonality::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_CharacterPersonality_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_CharacterPersonality::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&positive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&extravert_) -
      reinterpret_cast<char*>(&positive_)) + sizeof(extravert_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterPersonality::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 positive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          positive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 peaceful = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          peaceful_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 open = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          open_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 extravert = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          extravert_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_CharacterPersonality::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 positive = 1;
  if (this->positive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_positive(), target);
  }

  // int32 peaceful = 2;
  if (this->peaceful() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_peaceful(), target);
  }

  // int32 open = 3;
  if (this->open() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_open(), target);
  }

  // int32 extravert = 4;
  if (this->extravert() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_extravert(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  return target;
}

size_t Character_CharacterPersonality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 positive = 1;
  if (this->positive() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_positive());
  }

  // int32 peaceful = 2;
  if (this->peaceful() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_peaceful());
  }

  // int32 open = 3;
  if (this->open() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_open());
  }

  // int32 extravert = 4;
  if (this->extravert() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_extravert());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_CharacterPersonality::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_CharacterPersonality* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_CharacterPersonality>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
    MergeFrom(*source);
  }
}

void Character_CharacterPersonality::MergeFrom(const Character_CharacterPersonality& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.positive() != 0) {
    _internal_set_positive(from._internal_positive());
  }
  if (from.peaceful() != 0) {
    _internal_set_peaceful(from._internal_peaceful());
  }
  if (from.open() != 0) {
    _internal_set_open(from._internal_open());
  }
  if (from.extravert() != 0) {
    _internal_set_extravert(from._internal_extravert());
  }
}

void Character_CharacterPersonality::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_CharacterPersonality::CopyFrom(const Character_CharacterPersonality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterPersonality::IsInitialized() const {
  return true;
}

void Character_CharacterPersonality::InternalSwap(Character_CharacterPersonality* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterPersonality, extravert_)
      + sizeof(Character_CharacterPersonality::extravert_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterPersonality, positive_)>(
          reinterpret_cast<char*>(&positive_),
          reinterpret_cast<char*>(&other->positive_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterPersonality::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_Fact::_Internal {
 public:
};

Character_Fact::Character_Fact(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  text_(arena),
  tags_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.Fact)
}
Character_Fact::Character_Fact(const Character_Fact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      text_(from.text_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uuid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.Fact)
}

void Character_Fact::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Character_Fact::~Character_Fact() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.Fact)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_Fact::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Character_Fact::ArenaDtor(void* object) {
  Character_Fact* _this = reinterpret_cast< Character_Fact* >(object);
  (void)_this;
}
void Character_Fact::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_Fact::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_Fact& Character_Fact::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_Fact_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_Fact::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.Fact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.Clear();
  tags_.Clear();
  uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_Fact::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.Fact.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_text();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.Fact.text"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_tags(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_tags(static_cast<::ai::inworld::studio::v1alpha::Character_Tag>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_Fact::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.Fact)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.Fact.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // repeated string text = 2;
  for (int i = 0, n = this->_internal_text_size(); i < n; i++) {
    const auto& s = this->_internal_text(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.Fact.text");
    target = stream->WriteString(2, s, target);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
  {
    int byte_size = _tags_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, tags_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.Fact)
  return target;
}

size_t Character_Fact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.Fact)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string text = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(text_.size());
  for (int i = 0, n = text_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      text_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_tags_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_tags(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _tags_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_Fact::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_Fact* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_Fact>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.Fact)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.Fact)
    MergeFrom(*source);
  }
}

void Character_Fact::MergeFrom(const Character_Fact& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  text_.MergeFrom(from.text_);
  tags_.MergeFrom(from.tags_);
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
}

void Character_Fact::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_Fact::CopyFrom(const Character_Fact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_Fact::IsInitialized() const {
  return true;
}

void Character_Fact::InternalSwap(Character_Fact* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.InternalSwap(&other->text_);
  tags_.InternalSwap(&other->tags_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_Fact::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_Meta::_Internal {
 public:
};

Character_Meta::Character_Meta(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.Meta)
}
Character_Meta::Character_Meta(const Character_Meta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_triggers_, &from.total_triggers_,
    static_cast<size_t>(reinterpret_cast<char*>(&goals_version_) -
    reinterpret_cast<char*>(&total_triggers_)) + sizeof(goals_version_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.Meta)
}

void Character_Meta::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&total_triggers_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&goals_version_) -
      reinterpret_cast<char*>(&total_triggers_)) + sizeof(goals_version_));
}

Character_Meta::~Character_Meta() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.Meta)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_Meta::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_Meta::ArenaDtor(void* object) {
  Character_Meta* _this = reinterpret_cast< Character_Meta* >(object);
  (void)_this;
}
void Character_Meta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_Meta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_Meta& Character_Meta::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_Meta_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.Meta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&total_triggers_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goals_version_) -
      reinterpret_cast<char*>(&total_triggers_)) + sizeof(goals_version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_Meta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 total_triggers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          total_triggers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total_common_knowledge = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          total_common_knowledge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 goals_version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          goals_version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_Meta::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.Meta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->total_triggers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_total_triggers(), target);
  }

  // int32 total_common_knowledge = 2;
  if (this->total_common_knowledge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_common_knowledge(), target);
  }

  // int32 goals_version = 3;
  if (this->goals_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_goals_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.Meta)
  return target;
}

size_t Character_Meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.Meta)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->total_triggers() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_triggers());
  }

  // int32 total_common_knowledge = 2;
  if (this->total_common_knowledge() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_common_knowledge());
  }

  // int32 goals_version = 3;
  if (this->goals_version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_goals_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_Meta::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_Meta* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_Meta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.Meta)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.Meta)
    MergeFrom(*source);
  }
}

void Character_Meta::MergeFrom(const Character_Meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.total_triggers() != 0) {
    _internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from.total_common_knowledge() != 0) {
    _internal_set_total_common_knowledge(from._internal_total_common_knowledge());
  }
  if (from.goals_version() != 0) {
    _internal_set_goals_version(from._internal_goals_version());
  }
}

void Character_Meta::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_Meta::CopyFrom(const Character_Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_Meta::IsInitialized() const {
  return true;
}

void Character_Meta::InternalSwap(Character_Meta* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_Meta, goals_version_)
      + sizeof(Character_Meta::goals_version_)
      - PROTOBUF_FIELD_OFFSET(Character_Meta, total_triggers_)>(
          reinterpret_cast<char*>(&total_triggers_),
          reinterpret_cast<char*>(&other->total_triggers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_Meta::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_SharedPortalInfo_InteractionCountStat::_Internal {
 public:
};

Character_SharedPortalInfo_InteractionCountStat::Character_SharedPortalInfo_InteractionCountStat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
}
Character_SharedPortalInfo_InteractionCountStat::Character_SharedPortalInfo_InteractionCountStat(const Character_SharedPortalInfo_InteractionCountStat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_count_, &from.total_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_read_count_) -
    reinterpret_cast<char*>(&total_count_)) + sizeof(total_read_count_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
}

void Character_SharedPortalInfo_InteractionCountStat::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&total_count_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&total_read_count_) -
      reinterpret_cast<char*>(&total_count_)) + sizeof(total_read_count_));
}

Character_SharedPortalInfo_InteractionCountStat::~Character_SharedPortalInfo_InteractionCountStat() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_SharedPortalInfo_InteractionCountStat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Character_SharedPortalInfo_InteractionCountStat::ArenaDtor(void* object) {
  Character_SharedPortalInfo_InteractionCountStat* _this = reinterpret_cast< Character_SharedPortalInfo_InteractionCountStat* >(object);
  (void)_this;
}
void Character_SharedPortalInfo_InteractionCountStat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_SharedPortalInfo_InteractionCountStat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_SharedPortalInfo_InteractionCountStat& Character_SharedPortalInfo_InteractionCountStat::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_SharedPortalInfo_InteractionCountStat_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_SharedPortalInfo_InteractionCountStat::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&total_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_read_count_) -
      reinterpret_cast<char*>(&total_count_)) + sizeof(total_read_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_SharedPortalInfo_InteractionCountStat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 total_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          total_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total_unread_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          total_unread_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 total_read_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          total_read_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_SharedPortalInfo_InteractionCountStat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_count = 1;
  if (this->total_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_total_count(), target);
  }

  // int32 total_unread_count = 2;
  if (this->total_unread_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_unread_count(), target);
  }

  // int32 total_read_count = 3;
  if (this->total_read_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_total_read_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  return target;
}

size_t Character_SharedPortalInfo_InteractionCountStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_count = 1;
  if (this->total_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_count());
  }

  // int32 total_unread_count = 2;
  if (this->total_unread_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_unread_count());
  }

  // int32 total_read_count = 3;
  if (this->total_read_count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_total_read_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_SharedPortalInfo_InteractionCountStat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_SharedPortalInfo_InteractionCountStat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_SharedPortalInfo_InteractionCountStat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
    MergeFrom(*source);
  }
}

void Character_SharedPortalInfo_InteractionCountStat::MergeFrom(const Character_SharedPortalInfo_InteractionCountStat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.total_count() != 0) {
    _internal_set_total_count(from._internal_total_count());
  }
  if (from.total_unread_count() != 0) {
    _internal_set_total_unread_count(from._internal_total_unread_count());
  }
  if (from.total_read_count() != 0) {
    _internal_set_total_read_count(from._internal_total_read_count());
  }
}

void Character_SharedPortalInfo_InteractionCountStat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_SharedPortalInfo_InteractionCountStat::CopyFrom(const Character_SharedPortalInfo_InteractionCountStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_SharedPortalInfo_InteractionCountStat::IsInitialized() const {
  return true;
}

void Character_SharedPortalInfo_InteractionCountStat::InternalSwap(Character_SharedPortalInfo_InteractionCountStat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo_InteractionCountStat, total_read_count_)
      + sizeof(Character_SharedPortalInfo_InteractionCountStat::total_read_count_)
      - PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo_InteractionCountStat, total_count_)>(
          reinterpret_cast<char*>(&total_count_),
          reinterpret_cast<char*>(&other->total_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_SharedPortalInfo_InteractionCountStat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Character_SharedPortalInfo::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat& interaction_count_stat(const Character_SharedPortalInfo* msg);
};

const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat&
Character_SharedPortalInfo::_Internal::interaction_count_stat(const Character_SharedPortalInfo* msg) {
  return *msg->interaction_count_stat_;
}
Character_SharedPortalInfo::Character_SharedPortalInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
}
Character_SharedPortalInfo::Character_SharedPortalInfo(const Character_SharedPortalInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  byline_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_byline().empty()) {
    byline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_byline(), 
      GetArena());
  }
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prompt().empty()) {
    prompt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prompt(), 
      GetArena());
  }
  short_alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_short_alias().empty()) {
    short_alias_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_short_alias(), 
      GetArena());
  }
  if (from._internal_has_interaction_count_stat()) {
    interaction_count_stat_ = new ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat(*from.interaction_count_stat_);
  } else {
    interaction_count_stat_ = nullptr;
  }
  ::memcpy(&is_shared_, &from.is_shared_,
    static_cast<size_t>(reinterpret_cast<char*>(&allowed_on_showcase_) -
    reinterpret_cast<char*>(&is_shared_)) + sizeof(allowed_on_showcase_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
}

void Character_SharedPortalInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  byline_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  short_alias_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&interaction_count_stat_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&allowed_on_showcase_) -
      reinterpret_cast<char*>(&interaction_count_stat_)) + sizeof(allowed_on_showcase_));
}

Character_SharedPortalInfo::~Character_SharedPortalInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character_SharedPortalInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  byline_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prompt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  short_alias_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interaction_count_stat_;
}

void Character_SharedPortalInfo::ArenaDtor(void* object) {
  Character_SharedPortalInfo* _this = reinterpret_cast< Character_SharedPortalInfo* >(object);
  (void)_this;
}
void Character_SharedPortalInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character_SharedPortalInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character_SharedPortalInfo& Character_SharedPortalInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_SharedPortalInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character_SharedPortalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  byline_.ClearToEmpty();
  prompt_.ClearToEmpty();
  short_alias_.ClearToEmpty();
  if (GetArena() == nullptr && interaction_count_stat_ != nullptr) {
    delete interaction_count_stat_;
  }
  interaction_count_stat_ = nullptr;
  ::memset(&is_shared_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allowed_on_showcase_) -
      reinterpret_cast<char*>(&is_shared_)) + sizeof(allowed_on_showcase_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_SharedPortalInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_shared = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_shared_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string byline = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_byline();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.byline"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string prompt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_prompt();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.prompt"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string short_alias = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_short_alias();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.short_alias"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool allowed_on_showcase = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          allowed_on_showcase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat interaction_count_stat = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_interaction_count_stat(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character_SharedPortalInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_shared = 1;
  if (this->is_shared() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_shared(), target);
  }

  // string byline = 2;
  if (this->byline().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_byline().data(), static_cast<int>(this->_internal_byline().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.byline");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_byline(), target);
  }

  // string prompt = 3;
  if (this->prompt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.prompt");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_prompt(), target);
  }

  // string short_alias = 4;
  if (this->short_alias().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_short_alias().data(), static_cast<int>(this->_internal_short_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.short_alias");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_short_alias(), target);
  }

  // bool allowed_on_showcase = 5;
  if (this->allowed_on_showcase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_allowed_on_showcase(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat interaction_count_stat = 6;
  if (this->has_interaction_count_stat()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::interaction_count_stat(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  return target;
}

size_t Character_SharedPortalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string byline = 2;
  if (this->byline().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_byline());
  }

  // string prompt = 3;
  if (this->prompt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  // string short_alias = 4;
  if (this->short_alias().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_short_alias());
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat interaction_count_stat = 6;
  if (this->has_interaction_count_stat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *interaction_count_stat_);
  }

  // bool is_shared = 1;
  if (this->is_shared() != 0) {
    total_size += 1 + 1;
  }

  // bool allowed_on_showcase = 5;
  if (this->allowed_on_showcase() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character_SharedPortalInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const Character_SharedPortalInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character_SharedPortalInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
    MergeFrom(*source);
  }
}

void Character_SharedPortalInfo::MergeFrom(const Character_SharedPortalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.byline().size() > 0) {
    _internal_set_byline(from._internal_byline());
  }
  if (from.prompt().size() > 0) {
    _internal_set_prompt(from._internal_prompt());
  }
  if (from.short_alias().size() > 0) {
    _internal_set_short_alias(from._internal_short_alias());
  }
  if (from.has_interaction_count_stat()) {
    _internal_mutable_interaction_count_stat()->::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat::MergeFrom(from._internal_interaction_count_stat());
  }
  if (from.is_shared() != 0) {
    _internal_set_is_shared(from._internal_is_shared());
  }
  if (from.allowed_on_showcase() != 0) {
    _internal_set_allowed_on_showcase(from._internal_allowed_on_showcase());
  }
}

void Character_SharedPortalInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character_SharedPortalInfo::CopyFrom(const Character_SharedPortalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_SharedPortalInfo::IsInitialized() const {
  return true;
}

void Character_SharedPortalInfo::InternalSwap(Character_SharedPortalInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  byline_.Swap(&other->byline_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prompt_.Swap(&other->prompt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  short_alias_.Swap(&other->short_alias_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo, allowed_on_showcase_)
      + sizeof(Character_SharedPortalInfo::allowed_on_showcase_)
      - PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo, interaction_count_stat_)>(
          reinterpret_cast<char*>(&interaction_count_stat_),
          reinterpret_cast<char*>(&other->interaction_count_stat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_SharedPortalInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Character_SafetyConfigEntry_DoNotUse::Character_SafetyConfigEntry_DoNotUse() {}
Character_SafetyConfigEntry_DoNotUse::Character_SafetyConfigEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Character_SafetyConfigEntry_DoNotUse::MergeFrom(const Character_SafetyConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Character_SafetyConfigEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Character_SafetyConfigEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class Character::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_CharacterDescription& default_character_description(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings& brain_settings(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterAssets& default_character_assets(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood& initial_mood(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterPersonality& personality(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_Meta& meta(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo& share_portal_info(const Character* msg);
};

const ::ai::inworld::studio::v1alpha::Character_CharacterDescription&
Character::_Internal::default_character_description(const Character* msg) {
  return *msg->default_character_description_;
}
const ::ai::inworld::studio::v1alpha::Character_BrainSettings&
Character::_Internal::brain_settings(const Character* msg) {
  return *msg->brain_settings_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterAssets&
Character::_Internal::default_character_assets(const Character* msg) {
  return *msg->default_character_assets_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood&
Character::_Internal::initial_mood(const Character* msg) {
  return *msg->initial_mood_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterPersonality&
Character::_Internal::personality(const Character* msg) {
  return *msg->personality_;
}
const ::ai::inworld::studio::v1alpha::Character_Meta&
Character::_Internal::meta(const Character* msg) {
  return *msg->meta_;
}
const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo&
Character::_Internal::share_portal_info(const Character* msg) {
  return *msg->share_portal_info_;
}
void Character::clear_scenes() {
  scenes_.Clear();
}
void Character::clear_behavioral_contexts() {
  behavioral_contexts_.Clear();
}
Character::Character(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  brain_triggers_(arena),
  common_knowledges_(arena),
  scenes_(arena),
  facts_(arena),
  behavioral_contexts_(arena),
  safety_config_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character)
}
Character::Character(const Character& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      brain_triggers_(from.brain_triggers_),
      common_knowledges_(from.common_knowledges_),
      scenes_(from.scenes_),
      facts_(from.facts_),
      behavioral_contexts_(from.behavioral_contexts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  safety_config_.MergeFrom(from.safety_config_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_language_code().empty()) {
    language_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_language_code(), 
      GetArena());
  }
  yaml_config_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_yaml_config().empty()) {
    yaml_config_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_yaml_config(), 
      GetArena());
  }
  if (from._internal_has_default_character_description()) {
    default_character_description_ = new ::ai::inworld::studio::v1alpha::Character_CharacterDescription(*from.default_character_description_);
  } else {
    default_character_description_ = nullptr;
  }
  if (from._internal_has_brain_settings()) {
    brain_settings_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings(*from.brain_settings_);
  } else {
    brain_settings_ = nullptr;
  }
  if (from._internal_has_default_character_assets()) {
    default_character_assets_ = new ::ai::inworld::studio::v1alpha::Character_CharacterAssets(*from.default_character_assets_);
  } else {
    default_character_assets_ = nullptr;
  }
  if (from._internal_has_initial_mood()) {
    initial_mood_ = new ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood(*from.initial_mood_);
  } else {
    initial_mood_ = nullptr;
  }
  if (from._internal_has_personality()) {
    personality_ = new ::ai::inworld::studio::v1alpha::Character_CharacterPersonality(*from.personality_);
  } else {
    personality_ = nullptr;
  }
  if (from._internal_has_meta()) {
    meta_ = new ::ai::inworld::studio::v1alpha::Character_Meta(*from.meta_);
  } else {
    meta_ = nullptr;
  }
  if (from._internal_has_share_portal_info()) {
    share_portal_info_ = new ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo(*from.share_portal_info_);
  } else {
    share_portal_info_ = nullptr;
  }
  ::memcpy(&social_rank_, &from.social_rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&fourth_wall_) -
    reinterpret_cast<char*>(&social_rank_)) + sizeof(fourth_wall_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character)
}

void Character::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  yaml_config_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&default_character_description_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&fourth_wall_) -
      reinterpret_cast<char*>(&default_character_description_)) + sizeof(fourth_wall_));
}

Character::~Character() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Character::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  language_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  yaml_config_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete default_character_description_;
  if (this != internal_default_instance()) delete brain_settings_;
  if (this != internal_default_instance()) delete default_character_assets_;
  if (this != internal_default_instance()) delete initial_mood_;
  if (this != internal_default_instance()) delete personality_;
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete share_portal_info_;
}

void Character::ArenaDtor(void* object) {
  Character* _this = reinterpret_cast< Character* >(object);
  (void)_this;
}
void Character::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Character::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Character& Character::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Character_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void Character::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  brain_triggers_.Clear();
  common_knowledges_.Clear();
  scenes_.Clear();
  facts_.Clear();
  behavioral_contexts_.Clear();
  safety_config_.Clear();
  name_.ClearToEmpty();
  language_code_.ClearToEmpty();
  yaml_config_.ClearToEmpty();
  if (GetArena() == nullptr && default_character_description_ != nullptr) {
    delete default_character_description_;
  }
  default_character_description_ = nullptr;
  if (GetArena() == nullptr && brain_settings_ != nullptr) {
    delete brain_settings_;
  }
  brain_settings_ = nullptr;
  if (GetArena() == nullptr && default_character_assets_ != nullptr) {
    delete default_character_assets_;
  }
  default_character_assets_ = nullptr;
  if (GetArena() == nullptr && initial_mood_ != nullptr) {
    delete initial_mood_;
  }
  initial_mood_ = nullptr;
  if (GetArena() == nullptr && personality_ != nullptr) {
    delete personality_;
  }
  personality_ = nullptr;
  if (GetArena() == nullptr && meta_ != nullptr) {
    delete meta_;
  }
  meta_ = nullptr;
  if (GetArena() == nullptr && share_portal_info_ != nullptr) {
    delete share_portal_info_;
  }
  share_portal_info_ = nullptr;
  ::memset(&social_rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fourth_wall_) -
      reinterpret_cast<char*>(&social_rank_)) + sizeof(fourth_wall_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string language_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_language_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.language_code"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_description(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_brain_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_brain_triggers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_assets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_mood(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_personality(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string common_knowledges = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_common_knowledges();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.common_knowledges"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else goto handle_unusual;
        continue;
      // float social_rank = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          social_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scenes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_facts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_behavioral_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float emotional_fluidity = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 141)) {
          emotional_fluidity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo share_portal_info = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_share_portal_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string yaml_config = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_yaml_config();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.yaml_config"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .ai.inworld.studio.v1alpha.SafetyLevel> safety_config = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&safety_config_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else goto handle_unusual;
        continue;
      // float relationship_fluidity = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 181)) {
          relationship_fluidity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.FourthWallContainment fourth_wall = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_fourth_wall(static_cast<::ai::inworld::studio::v1alpha::Character_FourthWallContainment>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Character::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.language_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_language_code(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
  if (this->has_default_character_description()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::default_character_description(this), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
  if (this->has_brain_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::brain_settings(this), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_brain_triggers_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_brain_triggers(i), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
  if (this->has_default_character_assets()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::default_character_assets(this), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
  if (this->has_initial_mood()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::initial_mood(this), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
  if (this->has_personality()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::personality(this), target, stream);
  }

  // repeated string common_knowledges = 11;
  for (int i = 0, n = this->_internal_common_knowledges_size(); i < n; i++) {
    const auto& s = this->_internal_common_knowledges(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.common_knowledges");
    target = stream->WriteString(11, s, target);
  }

  // float social_rank = 12;
  if (!(this->social_rank() <= 0 && this->social_rank() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_social_rank(), target);
  }

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_scenes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_scenes(i), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_facts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, this->_internal_facts(i), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_behavioral_contexts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(15, this->_internal_behavioral_contexts(i), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::meta(this), target, stream);
  }

  // float emotional_fluidity = 17;
  if (!(this->emotional_fluidity() <= 0 && this->emotional_fluidity() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(17, this->_internal_emotional_fluidity(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo share_portal_info = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_share_portal_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::share_portal_info(this), target, stream);
  }

  // string yaml_config = 19;
  if (this->yaml_config().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_yaml_config().data(), static_cast<int>(this->_internal_yaml_config().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.yaml_config");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_yaml_config(), target);
  }

  // map<string, .ai.inworld.studio.v1alpha.SafetyLevel> safety_config = 21;
  if (!this->_internal_safety_config().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ai::inworld::studio::v1alpha::SafetyLevel >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "ai.inworld.studio.v1alpha.Character.SafetyConfigEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_safety_config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_safety_config().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ai::inworld::studio::v1alpha::SafetyLevel >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ai::inworld::studio::v1alpha::SafetyLevel >::const_iterator
          it = this->_internal_safety_config().begin();
          it != this->_internal_safety_config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Character_SafetyConfigEntry_DoNotUse::Funcs::InternalSerialize(21, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ai::inworld::studio::v1alpha::SafetyLevel >::const_iterator
          it = this->_internal_safety_config().begin();
          it != this->_internal_safety_config().end(); ++it) {
        target = Character_SafetyConfigEntry_DoNotUse::Funcs::InternalSerialize(21, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // float relationship_fluidity = 22;
  if (!(this->relationship_fluidity() <= 0 && this->relationship_fluidity() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(22, this->_internal_relationship_fluidity(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.FourthWallContainment fourth_wall = 23;
  if (this->fourth_wall() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      23, this->_internal_fourth_wall(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character)
  return target;
}

size_t Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
  total_size += 1UL * this->_internal_brain_triggers_size();
  for (const auto& msg : this->brain_triggers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string common_knowledges = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(common_knowledges_.size());
  for (int i = 0, n = common_knowledges_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      common_knowledges_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
  total_size += 1UL * this->_internal_scenes_size();
  for (const auto& msg : this->scenes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
  total_size += 1UL * this->_internal_facts_size();
  for (const auto& msg : this->facts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
  total_size += 1UL * this->_internal_behavioral_contexts_size();
  for (const auto& msg : this->behavioral_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .ai.inworld.studio.v1alpha.SafetyLevel> safety_config = 21;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_safety_config_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ai::inworld::studio::v1alpha::SafetyLevel >::const_iterator
      it = this->_internal_safety_config().begin();
      it != this->_internal_safety_config().end(); ++it) {
    total_size += Character_SafetyConfigEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string language_code = 2;
  if (this->language_code().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // string yaml_config = 19;
  if (this->yaml_config().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_yaml_config());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
  if (this->has_default_character_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *default_character_description_);
  }

  // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
  if (this->has_brain_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *brain_settings_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
  if (this->has_default_character_assets()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *default_character_assets_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
  if (this->has_initial_mood()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *initial_mood_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
  if (this->has_personality()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *personality_);
  }

  // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_meta()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo share_portal_info = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->has_share_portal_info()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *share_portal_info_);
  }

  // float social_rank = 12;
  if (!(this->social_rank() <= 0 && this->social_rank() >= 0)) {
    total_size += 1 + 4;
  }

  // float emotional_fluidity = 17;
  if (!(this->emotional_fluidity() <= 0 && this->emotional_fluidity() >= 0)) {
    total_size += 2 + 4;
  }

  // float relationship_fluidity = 22;
  if (!(this->relationship_fluidity() <= 0 && this->relationship_fluidity() >= 0)) {
    total_size += 2 + 4;
  }

  // .ai.inworld.studio.v1alpha.Character.FourthWallContainment fourth_wall = 23;
  if (this->fourth_wall() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_fourth_wall());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Character::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.Character)
  GOOGLE_DCHECK_NE(&from, this);
  const Character* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Character>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.Character)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.Character)
    MergeFrom(*source);
  }
}

void Character::MergeFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  brain_triggers_.MergeFrom(from.brain_triggers_);
  common_knowledges_.MergeFrom(from.common_knowledges_);
  scenes_.MergeFrom(from.scenes_);
  facts_.MergeFrom(from.facts_);
  behavioral_contexts_.MergeFrom(from.behavioral_contexts_);
  safety_config_.MergeFrom(from.safety_config_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.language_code().size() > 0) {
    _internal_set_language_code(from._internal_language_code());
  }
  if (from.yaml_config().size() > 0) {
    _internal_set_yaml_config(from._internal_yaml_config());
  }
  if (from.has_default_character_description()) {
    _internal_mutable_default_character_description()->::ai::inworld::studio::v1alpha::Character_CharacterDescription::MergeFrom(from._internal_default_character_description());
  }
  if (from.has_brain_settings()) {
    _internal_mutable_brain_settings()->::ai::inworld::studio::v1alpha::Character_BrainSettings::MergeFrom(from._internal_brain_settings());
  }
  if (from.has_default_character_assets()) {
    _internal_mutable_default_character_assets()->::ai::inworld::studio::v1alpha::Character_CharacterAssets::MergeFrom(from._internal_default_character_assets());
  }
  if (from.has_initial_mood()) {
    _internal_mutable_initial_mood()->::ai::inworld::studio::v1alpha::Character_CharacterInitialMood::MergeFrom(from._internal_initial_mood());
  }
  if (from.has_personality()) {
    _internal_mutable_personality()->::ai::inworld::studio::v1alpha::Character_CharacterPersonality::MergeFrom(from._internal_personality());
  }
  if (from.has_meta()) {
    _internal_mutable_meta()->::ai::inworld::studio::v1alpha::Character_Meta::MergeFrom(from._internal_meta());
  }
  if (from.has_share_portal_info()) {
    _internal_mutable_share_portal_info()->::ai::inworld::studio::v1alpha::Character_SharedPortalInfo::MergeFrom(from._internal_share_portal_info());
  }
  if (!(from.social_rank() <= 0 && from.social_rank() >= 0)) {
    _internal_set_social_rank(from._internal_social_rank());
  }
  if (!(from.emotional_fluidity() <= 0 && from.emotional_fluidity() >= 0)) {
    _internal_set_emotional_fluidity(from._internal_emotional_fluidity());
  }
  if (!(from.relationship_fluidity() <= 0 && from.relationship_fluidity() >= 0)) {
    _internal_set_relationship_fluidity(from._internal_relationship_fluidity());
  }
  if (from.fourth_wall() != 0) {
    _internal_set_fourth_wall(from._internal_fourth_wall());
  }
}

void Character::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Character::CopyFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character::IsInitialized() const {
  return true;
}

void Character::InternalSwap(Character* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  brain_triggers_.InternalSwap(&other->brain_triggers_);
  common_knowledges_.InternalSwap(&other->common_knowledges_);
  scenes_.InternalSwap(&other->scenes_);
  facts_.InternalSwap(&other->facts_);
  behavioral_contexts_.InternalSwap(&other->behavioral_contexts_);
  safety_config_.Swap(&other->safety_config_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  language_code_.Swap(&other->language_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  yaml_config_.Swap(&other->yaml_config_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character, fourth_wall_)
      + sizeof(Character::fourth_wall_)
      - PROTOBUF_FIELD_OFFSET(Character, default_character_description_)>(
          reinterpret_cast<char*>(&default_character_description_),
          reinterpret_cast<char*>(&other->default_character_description_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCharacterRequest::_Internal {
 public:
};

GetCharacterRequest::GetCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
}
GetCharacterRequest::GetCharacterRequest(const GetCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
}

void GetCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
}

GetCharacterRequest::~GetCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCharacterRequest::ArenaDtor(void* object) {
  GetCharacterRequest* _this = reinterpret_cast< GetCharacterRequest* >(object);
  (void)_this;
}
void GetCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterRequest& GetCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  view_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterItemView>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
  if (this->view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterRequest)
  return target;
}

size_t GetCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_view());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.GetCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.GetCharacterRequest)
    MergeFrom(*source);
  }
}

void GetCharacterRequest::MergeFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.view() != 0) {
    _internal_set_view(from._internal_view());
  }
}

void GetCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterRequest::CopyFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterRequest::IsInitialized() const {
  return true;
}

void GetCharacterRequest::InternalSwap(GetCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(view_, other->view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCharacterAdvancedSettingsRequest::_Internal {
 public:
};

GetCharacterAdvancedSettingsRequest::GetCharacterAdvancedSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
}
GetCharacterAdvancedSettingsRequest::GetCharacterAdvancedSettingsRequest(const GetCharacterAdvancedSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
}

void GetCharacterAdvancedSettingsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetCharacterAdvancedSettingsRequest::~GetCharacterAdvancedSettingsRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCharacterAdvancedSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCharacterAdvancedSettingsRequest::ArenaDtor(void* object) {
  GetCharacterAdvancedSettingsRequest* _this = reinterpret_cast< GetCharacterAdvancedSettingsRequest* >(object);
  (void)_this;
}
void GetCharacterAdvancedSettingsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCharacterAdvancedSettingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterAdvancedSettingsRequest& GetCharacterAdvancedSettingsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterAdvancedSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterAdvancedSettingsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterAdvancedSettingsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  return target;
}

size_t GetCharacterAdvancedSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterAdvancedSettingsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterAdvancedSettingsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterAdvancedSettingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
    MergeFrom(*source);
  }
}

void GetCharacterAdvancedSettingsRequest::MergeFrom(const GetCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void GetCharacterAdvancedSettingsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterAdvancedSettingsRequest::CopyFrom(const GetCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterAdvancedSettingsRequest::IsInitialized() const {
  return true;
}

void GetCharacterAdvancedSettingsRequest::InternalSwap(GetCharacterAdvancedSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterAdvancedSettingsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateCharacterAdvancedSettingsRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings& character_advanced_settings(const UpdateCharacterAdvancedSettingsRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateCharacterAdvancedSettingsRequest* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings&
UpdateCharacterAdvancedSettingsRequest::_Internal::character_advanced_settings(const UpdateCharacterAdvancedSettingsRequest* msg) {
  return *msg->character_advanced_settings_;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateCharacterAdvancedSettingsRequest::_Internal::update_mask(const UpdateCharacterAdvancedSettingsRequest* msg) {
  return *msg->update_mask_;
}
void UpdateCharacterAdvancedSettingsRequest::clear_update_mask() {
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateCharacterAdvancedSettingsRequest::UpdateCharacterAdvancedSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
}
UpdateCharacterAdvancedSettingsRequest::UpdateCharacterAdvancedSettingsRequest(const UpdateCharacterAdvancedSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character_advanced_settings()) {
    character_advanced_settings_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings(*from.character_advanced_settings_);
  } else {
    character_advanced_settings_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
}

void UpdateCharacterAdvancedSettingsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&character_advanced_settings_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&character_advanced_settings_)) + sizeof(update_mask_));
}

UpdateCharacterAdvancedSettingsRequest::~UpdateCharacterAdvancedSettingsRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCharacterAdvancedSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete character_advanced_settings_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateCharacterAdvancedSettingsRequest::ArenaDtor(void* object) {
  UpdateCharacterAdvancedSettingsRequest* _this = reinterpret_cast< UpdateCharacterAdvancedSettingsRequest* >(object);
  (void)_this;
}
void UpdateCharacterAdvancedSettingsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCharacterAdvancedSettingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCharacterAdvancedSettingsRequest& UpdateCharacterAdvancedSettingsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCharacterAdvancedSettingsRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void UpdateCharacterAdvancedSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && character_advanced_settings_ != nullptr) {
    delete character_advanced_settings_;
  }
  character_advanced_settings_ = nullptr;
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCharacterAdvancedSettingsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_advanced_settings(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCharacterAdvancedSettingsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character_advanced_settings()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::character_advanced_settings(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  return target;
}

size_t UpdateCharacterAdvancedSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character_advanced_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *character_advanced_settings_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCharacterAdvancedSettingsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCharacterAdvancedSettingsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCharacterAdvancedSettingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
    MergeFrom(*source);
  }
}

void UpdateCharacterAdvancedSettingsRequest::MergeFrom(const UpdateCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_character_advanced_settings()) {
    _internal_mutable_character_advanced_settings()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings::MergeFrom(from._internal_character_advanced_settings());
  }
  if (from.has_update_mask()) {
    _internal_mutable_update_mask()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
}

void UpdateCharacterAdvancedSettingsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCharacterAdvancedSettingsRequest::CopyFrom(const UpdateCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCharacterAdvancedSettingsRequest::IsInitialized() const {
  return true;
}

void UpdateCharacterAdvancedSettingsRequest::InternalSwap(UpdateCharacterAdvancedSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCharacterAdvancedSettingsRequest, update_mask_)
      + sizeof(UpdateCharacterAdvancedSettingsRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateCharacterAdvancedSettingsRequest, character_advanced_settings_)>(
          reinterpret_cast<char*>(&character_advanced_settings_),
          reinterpret_cast<char*>(&other->character_advanced_settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCharacterAdvancedSettingsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListCharactersRequest::_Internal {
 public:
};

ListCharactersRequest::ListCharactersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
}
ListCharactersRequest::ListCharactersRequest(const ListCharactersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArena());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArena());
  }
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter().empty()) {
    filter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filter(), 
      GetArena());
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&view_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(view_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
}

void ListCharactersRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&page_size_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&view_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(view_));
}

ListCharactersRequest::~ListCharactersRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCharactersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCharactersRequest::ArenaDtor(void* object) {
  ListCharactersRequest* _this = reinterpret_cast< ListCharactersRequest* >(object);
  (void)_this;
}
void ListCharactersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCharactersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCharactersRequest& ListCharactersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ListCharactersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  filter_.ClearToEmpty();
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&view_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(view_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCharactersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterView view = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterView>(val));
        } else goto handle_unusual;
        continue;
      // string filter = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_filter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.filter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCharactersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterView view = 4;
  if (this->view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_view(), target);
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.filter");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListCharactersRequest)
  return target;
}

size_t ListCharactersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string filter = 5;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  // .ai.inworld.studio.v1alpha.CharacterView view = 4;
  if (this->view() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_view());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCharactersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCharactersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCharactersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListCharactersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListCharactersRequest)
    MergeFrom(*source);
  }
}

void ListCharactersRequest::MergeFrom(const ListCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.filter().size() > 0) {
    _internal_set_filter(from._internal_filter());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  if (from.view() != 0) {
    _internal_set_view(from._internal_view());
  }
}

void ListCharactersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCharactersRequest::CopyFrom(const ListCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCharactersRequest::IsInitialized() const {
  return true;
}

void ListCharactersRequest::InternalSwap(ListCharactersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filter_.Swap(&other->filter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListCharactersRequest, view_)
      + sizeof(ListCharactersRequest::view_)
      - PROTOBUF_FIELD_OFFSET(ListCharactersRequest, page_size_)>(
          reinterpret_cast<char*>(&page_size_),
          reinterpret_cast<char*>(&other->page_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCharactersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateCharacterRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character& character(const CreateCharacterRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Character&
CreateCharacterRequest::_Internal::character(const CreateCharacterRequest* msg) {
  return *msg->character_;
}
CreateCharacterRequest::CreateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
}
CreateCharacterRequest::CreateCharacterRequest(const CreateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArena());
  }
  if (from._internal_has_character()) {
    character_ = new ::ai::inworld::studio::v1alpha::Character(*from.character_);
  } else {
    character_ = nullptr;
  }
  skip_auto_create_ = from.skip_auto_create_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
}

void CreateCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&character_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&skip_auto_create_) -
      reinterpret_cast<char*>(&character_)) + sizeof(skip_auto_create_));
}

CreateCharacterRequest::~CreateCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete character_;
}

void CreateCharacterRequest::ArenaDtor(void* object) {
  CreateCharacterRequest* _this = reinterpret_cast< CreateCharacterRequest* >(object);
  (void)_this;
}
void CreateCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCharacterRequest& CreateCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CreateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  if (GetArena() == nullptr && character_ != nullptr) {
    delete character_;
  }
  character_ = nullptr;
  skip_auto_create_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CreateCharacterRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool skip_auto_create = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          skip_auto_create_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CreateCharacterRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::character(this), target, stream);
  }

  // bool skip_auto_create = 3;
  if (this->skip_auto_create() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_skip_auto_create(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  return target;
}

size_t CreateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *character_);
  }

  // bool skip_auto_create = 3;
  if (this->skip_auto_create() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CreateCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CreateCharacterRequest)
    MergeFrom(*source);
  }
}

void CreateCharacterRequest::MergeFrom(const CreateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.has_character()) {
    _internal_mutable_character()->::ai::inworld::studio::v1alpha::Character::MergeFrom(from._internal_character());
  }
  if (from.skip_auto_create() != 0) {
    _internal_set_skip_auto_create(from._internal_skip_auto_create());
  }
}

void CreateCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCharacterRequest::CopyFrom(const CreateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharacterRequest::IsInitialized() const {
  return true;
}

void CreateCharacterRequest::InternalSwap(CreateCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateCharacterRequest, skip_auto_create_)
      + sizeof(CreateCharacterRequest::skip_auto_create_)
      - PROTOBUF_FIELD_OFFSET(CreateCharacterRequest, character_)>(
          reinterpret_cast<char*>(&character_),
          reinterpret_cast<char*>(&other->character_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateCharacterRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character& character(const UpdateCharacterRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateCharacterRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Character&
UpdateCharacterRequest::_Internal::character(const UpdateCharacterRequest* msg) {
  return *msg->character_;
}
const PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateCharacterRequest::_Internal::update_mask(const UpdateCharacterRequest* msg) {
  return *msg->update_mask_;
}
void UpdateCharacterRequest::clear_update_mask() {
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
}
UpdateCharacterRequest::UpdateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
}
UpdateCharacterRequest::UpdateCharacterRequest(const UpdateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character()) {
    character_ = new ::ai::inworld::studio::v1alpha::Character(*from.character_);
  } else {
    character_ = nullptr;
  }
  if (from._internal_has_update_mask()) {
    update_mask_ = new PROTOBUF_NAMESPACE_ID::FieldMask(*from.update_mask_);
  } else {
    update_mask_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
}

void UpdateCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&character_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&update_mask_) -
      reinterpret_cast<char*>(&character_)) + sizeof(update_mask_));
}

UpdateCharacterRequest::~UpdateCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete character_;
  if (this != internal_default_instance()) delete update_mask_;
}

void UpdateCharacterRequest::ArenaDtor(void* object) {
  UpdateCharacterRequest* _this = reinterpret_cast< UpdateCharacterRequest* >(object);
  (void)_this;
}
void UpdateCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateCharacterRequest& UpdateCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void UpdateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && character_ != nullptr) {
    delete character_;
  }
  character_ = nullptr;
  if (GetArena() == nullptr && update_mask_ != nullptr) {
    delete update_mask_;
  }
  update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::character(this), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::update_mask(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  return target;
}

size_t UpdateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_character()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *character_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_mask_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
    MergeFrom(*source);
  }
}

void UpdateCharacterRequest::MergeFrom(const UpdateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_character()) {
    _internal_mutable_character()->::ai::inworld::studio::v1alpha::Character::MergeFrom(from._internal_character());
  }
  if (from.has_update_mask()) {
    _internal_mutable_update_mask()->PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(from._internal_update_mask());
  }
}

void UpdateCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCharacterRequest::CopyFrom(const UpdateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCharacterRequest::IsInitialized() const {
  return true;
}

void UpdateCharacterRequest::InternalSwap(UpdateCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, update_mask_)
      + sizeof(UpdateCharacterRequest::update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, character_)>(
          reinterpret_cast<char*>(&character_),
          reinterpret_cast<char*>(&other->character_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteCharacterRequest::_Internal {
 public:
};

DeleteCharacterRequest::DeleteCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
}
DeleteCharacterRequest::DeleteCharacterRequest(const DeleteCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
}

void DeleteCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteCharacterRequest::~DeleteCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteCharacterRequest::ArenaDtor(void* object) {
  DeleteCharacterRequest* _this = reinterpret_cast< DeleteCharacterRequest* >(object);
  (void)_this;
}
void DeleteCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteCharacterRequest& DeleteCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void DeleteCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeleteCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeleteCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  return target;
}

size_t DeleteCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
    MergeFrom(*source);
  }
}

void DeleteCharacterRequest::MergeFrom(const DeleteCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteCharacterRequest::CopyFrom(const DeleteCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCharacterRequest::IsInitialized() const {
  return true;
}

void DeleteCharacterRequest::InternalSwap(DeleteCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeployCharacterRequest::_Internal {
 public:
};

DeployCharacterRequest::DeployCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
}
DeployCharacterRequest::DeployCharacterRequest(const DeployCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
}

void DeployCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeployCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeployCharacterRequest::~DeployCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeployCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeployCharacterRequest::ArenaDtor(void* object) {
  DeployCharacterRequest* _this = reinterpret_cast< DeployCharacterRequest* >(object);
  (void)_this;
}
void DeployCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeployCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeployCharacterRequest& DeployCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeployCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void DeployCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeployCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeployCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeployCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  return target;
}

size_t DeployCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeployCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeployCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.DeployCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.DeployCharacterRequest)
    MergeFrom(*source);
  }
}

void DeployCharacterRequest::MergeFrom(const DeployCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeployCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployCharacterRequest::CopyFrom(const DeployCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployCharacterRequest::IsInitialized() const {
  return true;
}

void DeployCharacterRequest::InternalSwap(DeployCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CloneCharacterRequest::_Internal {
 public:
};

CloneCharacterRequest::CloneCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CloneCharacterRequest)
}
CloneCharacterRequest::CloneCharacterRequest(const CloneCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  workspace_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workspace().empty()) {
    workspace_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_workspace(), 
      GetArena());
  }
  new_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_new_name().empty()) {
    new_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_new_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CloneCharacterRequest)
}

void CloneCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CloneCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workspace_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CloneCharacterRequest::~CloneCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CloneCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workspace_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  new_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CloneCharacterRequest::ArenaDtor(void* object) {
  CloneCharacterRequest* _this = reinterpret_cast< CloneCharacterRequest* >(object);
  (void)_this;
}
void CloneCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CloneCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloneCharacterRequest& CloneCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloneCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CloneCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  workspace_.ClearToEmpty();
  new_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloneCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CloneCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string workspace = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_workspace();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CloneCharacterRequest.workspace"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string new_name = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_new_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CloneCharacterRequest.new_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloneCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CloneCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string workspace = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->workspace().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workspace().data(), static_cast<int>(this->_internal_workspace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CloneCharacterRequest.workspace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workspace(), target);
  }

  // string new_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->new_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_name().data(), static_cast<int>(this->_internal_new_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CloneCharacterRequest.new_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_new_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  return target;
}

size_t CloneCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string workspace = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->workspace().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workspace());
  }

  // string new_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->new_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloneCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloneCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloneCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CloneCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CloneCharacterRequest)
    MergeFrom(*source);
  }
}

void CloneCharacterRequest::MergeFrom(const CloneCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.workspace().size() > 0) {
    _internal_set_workspace(from._internal_workspace());
  }
  if (from.new_name().size() > 0) {
    _internal_set_new_name(from._internal_new_name());
  }
}

void CloneCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloneCharacterRequest::CopyFrom(const CloneCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloneCharacterRequest::IsInitialized() const {
  return true;
}

void CloneCharacterRequest::InternalSwap(CloneCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  workspace_.Swap(&other->workspace_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  new_name_.Swap(&other->new_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CloneCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListCharactersResponse::_Internal {
 public:
};

ListCharactersResponse::ListCharactersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  characters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
}
ListCharactersResponse::ListCharactersResponse(const ListCharactersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      characters_(from.characters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
}

void ListCharactersResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListCharactersResponse::~ListCharactersResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListCharactersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListCharactersResponse::ArenaDtor(void* object) {
  ListCharactersResponse* _this = reinterpret_cast< ListCharactersResponse* >(object);
  (void)_this;
}
void ListCharactersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListCharactersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListCharactersResponse& ListCharactersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ListCharactersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characters_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCharactersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListCharactersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_characters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_characters(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListCharactersResponse)
  return target;
}

size_t ListCharactersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListCharactersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListCharactersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListCharactersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListCharactersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListCharactersResponse)
    MergeFrom(*source);
  }
}

void ListCharactersResponse::MergeFrom(const ListCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  characters_.MergeFrom(from.characters_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListCharactersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListCharactersResponse::CopyFrom(const ListCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCharactersResponse::IsInitialized() const {
  return true;
}

void ListCharactersResponse::InternalSwap(ListCharactersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  characters_.InternalSwap(&other->characters_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCharactersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReplaceCharacterRpmModelRequest::_Internal {
 public:
};

ReplaceCharacterRpmModelRequest::ReplaceCharacterRpmModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
}
ReplaceCharacterRpmModelRequest::ReplaceCharacterRpmModelRequest(const ReplaceCharacterRpmModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character().empty()) {
    character_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character(), 
      GetArena());
  }
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rpm_model_uri().empty()) {
    rpm_model_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rpm_model_uri(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
}

void ReplaceCharacterRpmModelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReplaceCharacterRpmModelRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_model_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReplaceCharacterRpmModelRequest::~ReplaceCharacterRpmModelRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceCharacterRpmModelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rpm_model_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReplaceCharacterRpmModelRequest::ArenaDtor(void* object) {
  ReplaceCharacterRpmModelRequest* _this = reinterpret_cast< ReplaceCharacterRpmModelRequest* >(object);
  (void)_this;
}
void ReplaceCharacterRpmModelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceCharacterRpmModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReplaceCharacterRpmModelRequest& ReplaceCharacterRpmModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReplaceCharacterRpmModelRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ReplaceCharacterRpmModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_.ClearToEmpty();
  rpm_model_uri_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceCharacterRpmModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.character"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rpm_model_uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.rpm_model_uri"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceCharacterRpmModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (this->character().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // string rpm_model_uri = 2;
  if (this->rpm_model_uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_model_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  return target;
}

size_t ReplaceCharacterRpmModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (this->character().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // string rpm_model_uri = 2;
  if (this->rpm_model_uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceCharacterRpmModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceCharacterRpmModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceCharacterRpmModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
    MergeFrom(*source);
  }
}

void ReplaceCharacterRpmModelRequest::MergeFrom(const ReplaceCharacterRpmModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character().size() > 0) {
    _internal_set_character(from._internal_character());
  }
  if (from.rpm_model_uri().size() > 0) {
    _internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
}

void ReplaceCharacterRpmModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceCharacterRpmModelRequest::CopyFrom(const ReplaceCharacterRpmModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceCharacterRpmModelRequest::IsInitialized() const {
  return true;
}

void ReplaceCharacterRpmModelRequest::InternalSwap(ReplaceCharacterRpmModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_.Swap(&other->character_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rpm_model_uri_.Swap(&other->rpm_model_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceCharacterRpmModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReplaceCharacterImageRequest::_Internal {
 public:
};

ReplaceCharacterImageRequest::ReplaceCharacterImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
}
ReplaceCharacterImageRequest::ReplaceCharacterImageRequest(const ReplaceCharacterImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character().empty()) {
    character_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character(), 
      GetArena());
  }
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_content().empty()) {
    content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_content(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
}

void ReplaceCharacterImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReplaceCharacterImageRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReplaceCharacterImageRequest::~ReplaceCharacterImageRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceCharacterImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReplaceCharacterImageRequest::ArenaDtor(void* object) {
  ReplaceCharacterImageRequest* _this = reinterpret_cast< ReplaceCharacterImageRequest* >(object);
  (void)_this;
}
void ReplaceCharacterImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceCharacterImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReplaceCharacterImageRequest& ReplaceCharacterImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReplaceCharacterImageRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ReplaceCharacterImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_.ClearToEmpty();
  content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceCharacterImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest.character"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceCharacterImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (this->character().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  return target;
}

size_t ReplaceCharacterImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (this->character().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // bytes content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceCharacterImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceCharacterImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceCharacterImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
    MergeFrom(*source);
  }
}

void ReplaceCharacterImageRequest::MergeFrom(const ReplaceCharacterImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character().size() > 0) {
    _internal_set_character(from._internal_character());
  }
  if (from.content().size() > 0) {
    _internal_set_content(from._internal_content());
  }
}

void ReplaceCharacterImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceCharacterImageRequest::CopyFrom(const ReplaceCharacterImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceCharacterImageRequest::IsInitialized() const {
  return true;
}

void ReplaceCharacterImageRequest::InternalSwap(ReplaceCharacterImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_.Swap(&other->character_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_.Swap(&other->content_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceCharacterImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreviewPromptTemplateRequest::_Internal {
 public:
};

PreviewPromptTemplateRequest::PreviewPromptTemplateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
}
PreviewPromptTemplateRequest::PreviewPromptTemplateRequest(const PreviewPromptTemplateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character().empty()) {
    character_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character(), 
      GetArena());
  }
  template__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_template_().empty()) {
    template__.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_template_(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
}

void PreviewPromptTemplateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewPromptTemplateRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  template__.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PreviewPromptTemplateRequest::~PreviewPromptTemplateRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewPromptTemplateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  template__.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewPromptTemplateRequest::ArenaDtor(void* object) {
  PreviewPromptTemplateRequest* _this = reinterpret_cast< PreviewPromptTemplateRequest* >(object);
  (void)_this;
}
void PreviewPromptTemplateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewPromptTemplateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewPromptTemplateRequest& PreviewPromptTemplateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewPromptTemplateRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void PreviewPromptTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_.ClearToEmpty();
  template__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewPromptTemplateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.character"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string template = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_template_();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.template"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewPromptTemplateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // string template = 2;
  if (this->template_().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_template_().data(), static_cast<int>(this->_internal_template_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.template");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_template_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  return target;
}

size_t PreviewPromptTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // string template = 2;
  if (this->template_().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_template_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewPromptTemplateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewPromptTemplateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewPromptTemplateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
    MergeFrom(*source);
  }
}

void PreviewPromptTemplateRequest::MergeFrom(const PreviewPromptTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character().size() > 0) {
    _internal_set_character(from._internal_character());
  }
  if (from.template_().size() > 0) {
    _internal_set_template_(from._internal_template_());
  }
}

void PreviewPromptTemplateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewPromptTemplateRequest::CopyFrom(const PreviewPromptTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewPromptTemplateRequest::IsInitialized() const {
  return true;
}

void PreviewPromptTemplateRequest::InternalSwap(PreviewPromptTemplateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_.Swap(&other->character_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  template__.Swap(&other->template__, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewPromptTemplateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PreviewPromptTempalteResponse::_Internal {
 public:
};

PreviewPromptTempalteResponse::PreviewPromptTempalteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  errors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
}
PreviewPromptTempalteResponse::PreviewPromptTempalteResponse(const PreviewPromptTempalteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prompt().empty()) {
    prompt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prompt(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
}

void PreviewPromptTempalteResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreviewPromptTempalteResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PreviewPromptTempalteResponse::~PreviewPromptTempalteResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreviewPromptTempalteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  prompt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreviewPromptTempalteResponse::ArenaDtor(void* object) {
  PreviewPromptTempalteResponse* _this = reinterpret_cast< PreviewPromptTempalteResponse* >(object);
  (void)_this;
}
void PreviewPromptTempalteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreviewPromptTempalteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreviewPromptTempalteResponse& PreviewPromptTempalteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreviewPromptTempalteResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void PreviewPromptTempalteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  prompt_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewPromptTempalteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string prompt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_prompt();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.prompt"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_errors();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.errors"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreviewPromptTempalteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string prompt = 1;
  if (this->prompt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.prompt");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_prompt(), target);
  }

  // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  for (int i = 0, n = this->_internal_errors_size(); i < n; i++) {
    const auto& s = this->_internal_errors(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.errors");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  return target;
}

size_t PreviewPromptTempalteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(errors_.size());
  for (int i = 0, n = errors_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      errors_.Get(i));
  }

  // string prompt = 1;
  if (this->prompt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreviewPromptTempalteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PreviewPromptTempalteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreviewPromptTempalteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
    MergeFrom(*source);
  }
}

void PreviewPromptTempalteResponse::MergeFrom(const PreviewPromptTempalteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.prompt().size() > 0) {
    _internal_set_prompt(from._internal_prompt());
  }
}

void PreviewPromptTempalteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreviewPromptTempalteResponse::CopyFrom(const PreviewPromptTempalteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewPromptTempalteResponse::IsInitialized() const {
  return true;
}

void PreviewPromptTempalteResponse::InternalSwap(PreviewPromptTempalteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  errors_.InternalSwap(&other->errors_);
  prompt_.Swap(&other->prompt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewPromptTempalteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ShareCharacterRequest::_Internal {
 public:
};

ShareCharacterRequest::ShareCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  external_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
}
ShareCharacterRequest::ShareCharacterRequest(const ShareCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      external_ids_(from.external_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
}

void ShareCharacterRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShareCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ShareCharacterRequest::~ShareCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShareCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShareCharacterRequest::ArenaDtor(void* object) {
  ShareCharacterRequest* _this = reinterpret_cast< ShareCharacterRequest* >(object);
  (void)_this;
}
void ShareCharacterRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShareCharacterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShareCharacterRequest& ShareCharacterRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShareCharacterRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ShareCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  external_ids_.Clear();
  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareCharacterRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string external_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterRequest.external_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShareCharacterRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string external_ids = 2;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterRequest.external_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  return target;
}

size_t ShareCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(external_ids_.size());
  for (int i = 0, n = external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      external_ids_.Get(i));
  }

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShareCharacterRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareCharacterRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShareCharacterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ShareCharacterRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ShareCharacterRequest)
    MergeFrom(*source);
  }
}

void ShareCharacterRequest::MergeFrom(const ShareCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  external_ids_.MergeFrom(from.external_ids_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void ShareCharacterRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareCharacterRequest::CopyFrom(const ShareCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareCharacterRequest::IsInitialized() const {
  return true;
}

void ShareCharacterRequest::InternalSwap(ShareCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  external_ids_.InternalSwap(&other->external_ids_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareCharacterRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ShareCharacterPortalRequest::_Internal {
 public:
};

ShareCharacterPortalRequest::ShareCharacterPortalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
}
ShareCharacterPortalRequest::ShareCharacterPortalRequest(const ShareCharacterPortalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  byline_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_byline().empty()) {
    byline_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_byline(), 
      GetArena());
  }
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_prompt().empty()) {
    prompt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_prompt(), 
      GetArena());
  }
  allowed_on_showcase_ = from.allowed_on_showcase_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
}

void ShareCharacterPortalRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byline_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prompt_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  allowed_on_showcase_ = false;
}

ShareCharacterPortalRequest::~ShareCharacterPortalRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ShareCharacterPortalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  byline_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  prompt_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ShareCharacterPortalRequest::ArenaDtor(void* object) {
  ShareCharacterPortalRequest* _this = reinterpret_cast< ShareCharacterPortalRequest* >(object);
  (void)_this;
}
void ShareCharacterPortalRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ShareCharacterPortalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShareCharacterPortalRequest& ShareCharacterPortalRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ShareCharacterPortalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  byline_.ClearToEmpty();
  prompt_.ClearToEmpty();
  allowed_on_showcase_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareCharacterPortalRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string byline = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_byline();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.byline"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string prompt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_prompt();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.prompt"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool allowed_on_showcase = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          allowed_on_showcase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShareCharacterPortalRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string byline = 2;
  if (this->byline().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_byline().data(), static_cast<int>(this->_internal_byline().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.byline");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_byline(), target);
  }

  // string prompt = 3;
  if (this->prompt().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.prompt");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_prompt(), target);
  }

  // bool allowed_on_showcase = 4;
  if (this->allowed_on_showcase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_allowed_on_showcase(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  return target;
}

size_t ShareCharacterPortalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string byline = 2;
  if (this->byline().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_byline());
  }

  // string prompt = 3;
  if (this->prompt().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  // bool allowed_on_showcase = 4;
  if (this->allowed_on_showcase() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShareCharacterPortalRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareCharacterPortalRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShareCharacterPortalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
    MergeFrom(*source);
  }
}

void ShareCharacterPortalRequest::MergeFrom(const ShareCharacterPortalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.byline().size() > 0) {
    _internal_set_byline(from._internal_byline());
  }
  if (from.prompt().size() > 0) {
    _internal_set_prompt(from._internal_prompt());
  }
  if (from.allowed_on_showcase() != 0) {
    _internal_set_allowed_on_showcase(from._internal_allowed_on_showcase());
  }
}

void ShareCharacterPortalRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareCharacterPortalRequest::CopyFrom(const ShareCharacterPortalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareCharacterPortalRequest::IsInitialized() const {
  return true;
}

void ShareCharacterPortalRequest::InternalSwap(ShareCharacterPortalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  byline_.Swap(&other->byline_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  prompt_.Swap(&other->prompt_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(allowed_on_showcase_, other->allowed_on_showcase_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareCharacterPortalRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnshareCharacterPortalRequest::_Internal {
 public:
};

UnshareCharacterPortalRequest::UnshareCharacterPortalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
}
UnshareCharacterPortalRequest::UnshareCharacterPortalRequest(const UnshareCharacterPortalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
}

void UnshareCharacterPortalRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnshareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UnshareCharacterPortalRequest::~UnshareCharacterPortalRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnshareCharacterPortalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnshareCharacterPortalRequest::ArenaDtor(void* object) {
  UnshareCharacterPortalRequest* _this = reinterpret_cast< UnshareCharacterPortalRequest* >(object);
  (void)_this;
}
void UnshareCharacterPortalRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnshareCharacterPortalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnshareCharacterPortalRequest& UnshareCharacterPortalRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnshareCharacterPortalRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void UnshareCharacterPortalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnshareCharacterPortalRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnshareCharacterPortalRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  return target;
}

size_t UnshareCharacterPortalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnshareCharacterPortalRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnshareCharacterPortalRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnshareCharacterPortalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
    MergeFrom(*source);
  }
}

void UnshareCharacterPortalRequest::MergeFrom(const UnshareCharacterPortalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void UnshareCharacterPortalRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnshareCharacterPortalRequest::CopyFrom(const UnshareCharacterPortalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnshareCharacterPortalRequest::IsInitialized() const {
  return true;
}

void UnshareCharacterPortalRequest::InternalSwap(UnshareCharacterPortalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata UnshareCharacterPortalRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSharedCharactersRequest::_Internal {
 public:
};

ListSharedCharactersRequest::ListSharedCharactersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
}
ListSharedCharactersRequest::ListSharedCharactersRequest(const ListSharedCharactersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArena());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_page_token(), 
      GetArena());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
}

void ListSharedCharactersRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListSharedCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListSharedCharactersRequest::~ListSharedCharactersRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSharedCharactersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSharedCharactersRequest::ArenaDtor(void* object) {
  ListSharedCharactersRequest* _this = reinterpret_cast< ListSharedCharactersRequest* >(object);
  (void)_this;
}
void ListSharedCharactersRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSharedCharactersRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSharedCharactersRequest& ListSharedCharactersRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListSharedCharactersRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ListSharedCharactersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  page_token_.ClearToEmpty();
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSharedCharactersRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSharedCharactersRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  return target;
}

size_t ListSharedCharactersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSharedCharactersRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSharedCharactersRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSharedCharactersRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
    MergeFrom(*source);
  }
}

void ListSharedCharactersRequest::MergeFrom(const ListSharedCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListSharedCharactersRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSharedCharactersRequest::CopyFrom(const ListSharedCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSharedCharactersRequest::IsInitialized() const {
  return true;
}

void ListSharedCharactersRequest::InternalSwap(ListSharedCharactersRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSharedCharactersRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ListSharedCharactersResponse::_Internal {
 public:
};

ListSharedCharactersResponse::ListSharedCharactersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shared_characters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
}
ListSharedCharactersResponse::ListSharedCharactersResponse(const ListSharedCharactersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      shared_characters_(from.shared_characters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_next_page_token(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
}

void ListSharedCharactersResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListSharedCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListSharedCharactersResponse::~ListSharedCharactersResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListSharedCharactersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSharedCharactersResponse::ArenaDtor(void* object) {
  ListSharedCharactersResponse* _this = reinterpret_cast< ListSharedCharactersResponse* >(object);
  (void)_this;
}
void ListSharedCharactersResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSharedCharactersResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSharedCharactersResponse& ListSharedCharactersResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListSharedCharactersResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void ListSharedCharactersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shared_characters_.Clear();
  next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSharedCharactersResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shared_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSharedCharactersResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_shared_characters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_shared_characters(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  return target;
}

size_t ListSharedCharactersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
  total_size += 1UL * this->_internal_shared_characters_size();
  for (const auto& msg : this->shared_characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSharedCharactersResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSharedCharactersResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListSharedCharactersResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
    MergeFrom(*source);
  }
}

void ListSharedCharactersResponse::MergeFrom(const ListSharedCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shared_characters_.MergeFrom(from.shared_characters_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListSharedCharactersResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSharedCharactersResponse::CopyFrom(const ListSharedCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSharedCharactersResponse::IsInitialized() const {
  return true;
}

void ListSharedCharactersResponse::InternalSwap(ListSharedCharactersResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  shared_characters_.InternalSwap(&other->shared_characters_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSharedCharactersResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings_ConversationConfig_EngineSpec::_Internal {
 public:
};

CharacterAdvancedSettings_ConversationConfig_EngineSpec::CharacterAdvancedSettings_ConversationConfig_EngineSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
}
CharacterAdvancedSettings_ConversationConfig_EngineSpec::CharacterAdvancedSettings_ConversationConfig_EngineSpec(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  engine_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_engine().empty()) {
    engine_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_engine(), 
      GetArena());
  }
  ::memcpy(&temperature_, &from.temperature_,
    static_cast<size_t>(reinterpret_cast<char*>(&repetition_penalty_) -
    reinterpret_cast<char*>(&temperature_)) + sizeof(repetition_penalty_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  engine_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&temperature_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&repetition_penalty_) -
      reinterpret_cast<char*>(&temperature_)) + sizeof(repetition_penalty_));
}

CharacterAdvancedSettings_ConversationConfig_EngineSpec::~CharacterAdvancedSettings_ConversationConfig_EngineSpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  engine_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::ArenaDtor(void* object) {
  CharacterAdvancedSettings_ConversationConfig_EngineSpec* _this = reinterpret_cast< CharacterAdvancedSettings_ConversationConfig_EngineSpec* >(object);
  (void)_this;
}
void CharacterAdvancedSettings_ConversationConfig_EngineSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings_ConversationConfig_EngineSpec& CharacterAdvancedSettings_ConversationConfig_EngineSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_ConversationConfig_EngineSpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings_ConversationConfig_EngineSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  engine_.ClearToEmpty();
  ::memset(&temperature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repetition_penalty_) -
      reinterpret_cast<char*>(&temperature_)) + sizeof(repetition_penalty_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_ConversationConfig_EngineSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string engine = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_engine();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec.engine"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float temperature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // int32 max_tokens = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          max_tokens_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float frequency_penalty = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          frequency_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float presence_penalty = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          presence_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float top_p = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          top_p_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // float repetition_penalty = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          repetition_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings_ConversationConfig_EngineSpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string engine = 1;
  if (this->engine().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_engine().data(), static_cast<int>(this->_internal_engine().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec.engine");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_engine(), target);
  }

  // float temperature = 2;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_temperature(), target);
  }

  // int32 max_tokens = 3;
  if (this->max_tokens() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_max_tokens(), target);
  }

  // float frequency_penalty = 4;
  if (!(this->frequency_penalty() <= 0 && this->frequency_penalty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_frequency_penalty(), target);
  }

  // float presence_penalty = 5;
  if (!(this->presence_penalty() <= 0 && this->presence_penalty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_presence_penalty(), target);
  }

  // float top_p = 6;
  if (!(this->top_p() <= 0 && this->top_p() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_top_p(), target);
  }

  // float repetition_penalty = 7;
  if (!(this->repetition_penalty() <= 0 && this->repetition_penalty() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_repetition_penalty(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  return target;
}

size_t CharacterAdvancedSettings_ConversationConfig_EngineSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string engine = 1;
  if (this->engine().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_engine());
  }

  // float temperature = 2;
  if (!(this->temperature() <= 0 && this->temperature() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 max_tokens = 3;
  if (this->max_tokens() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_tokens());
  }

  // float frequency_penalty = 4;
  if (!(this->frequency_penalty() <= 0 && this->frequency_penalty() >= 0)) {
    total_size += 1 + 4;
  }

  // float presence_penalty = 5;
  if (!(this->presence_penalty() <= 0 && this->presence_penalty() >= 0)) {
    total_size += 1 + 4;
  }

  // float top_p = 6;
  if (!(this->top_p() <= 0 && this->top_p() >= 0)) {
    total_size += 1 + 4;
  }

  // float repetition_penalty = 7;
  if (!(this->repetition_penalty() <= 0 && this->repetition_penalty() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings_ConversationConfig_EngineSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings_ConversationConfig_EngineSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeFrom(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.engine().size() > 0) {
    _internal_set_engine(from._internal_engine());
  }
  if (!(from.temperature() <= 0 && from.temperature() >= 0)) {
    _internal_set_temperature(from._internal_temperature());
  }
  if (from.max_tokens() != 0) {
    _internal_set_max_tokens(from._internal_max_tokens());
  }
  if (!(from.frequency_penalty() <= 0 && from.frequency_penalty() >= 0)) {
    _internal_set_frequency_penalty(from._internal_frequency_penalty());
  }
  if (!(from.presence_penalty() <= 0 && from.presence_penalty() >= 0)) {
    _internal_set_presence_penalty(from._internal_presence_penalty());
  }
  if (!(from.top_p() <= 0 && from.top_p() >= 0)) {
    _internal_set_top_p(from._internal_top_p());
  }
  if (!(from.repetition_penalty() <= 0 && from.repetition_penalty() >= 0)) {
    _internal_set_repetition_penalty(from._internal_repetition_penalty());
  }
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::CopyFrom(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_ConversationConfig_EngineSpec::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::InternalSwap(CharacterAdvancedSettings_ConversationConfig_EngineSpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  engine_.Swap(&other->engine_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings_ConversationConfig_EngineSpec, repetition_penalty_)
      + sizeof(CharacterAdvancedSettings_ConversationConfig_EngineSpec::repetition_penalty_)
      - PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings_ConversationConfig_EngineSpec, temperature_)>(
          reinterpret_cast<char*>(&temperature_),
          reinterpret_cast<char*>(&other->temperature_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_ConversationConfig_EngineSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings_ConversationConfig::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec& engine_spec(const CharacterAdvancedSettings_ConversationConfig* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec&
CharacterAdvancedSettings_ConversationConfig::_Internal::engine_spec(const CharacterAdvancedSettings_ConversationConfig* msg) {
  return *msg->engine_spec_;
}
CharacterAdvancedSettings_ConversationConfig::CharacterAdvancedSettings_ConversationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
}
CharacterAdvancedSettings_ConversationConfig::CharacterAdvancedSettings_ConversationConfig(const CharacterAdvancedSettings_ConversationConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_engine_spec()) {
    engine_spec_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec(*from.engine_spec_);
  } else {
    engine_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
}

void CharacterAdvancedSettings_ConversationConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  engine_spec_ = nullptr;
}

CharacterAdvancedSettings_ConversationConfig::~CharacterAdvancedSettings_ConversationConfig() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings_ConversationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete engine_spec_;
}

void CharacterAdvancedSettings_ConversationConfig::ArenaDtor(void* object) {
  CharacterAdvancedSettings_ConversationConfig* _this = reinterpret_cast< CharacterAdvancedSettings_ConversationConfig* >(object);
  (void)_this;
}
void CharacterAdvancedSettings_ConversationConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings_ConversationConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings_ConversationConfig& CharacterAdvancedSettings_ConversationConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_ConversationConfig_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings_ConversationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && engine_spec_ != nullptr) {
    delete engine_spec_;
  }
  engine_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_ConversationConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_engine_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings_ConversationConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
  if (this->has_engine_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::engine_spec(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  return target;
}

size_t CharacterAdvancedSettings_ConversationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
  if (this->has_engine_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *engine_spec_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings_ConversationConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings_ConversationConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings_ConversationConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings_ConversationConfig::MergeFrom(const CharacterAdvancedSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_engine_spec()) {
    _internal_mutable_engine_spec()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeFrom(from._internal_engine_spec());
  }
}

void CharacterAdvancedSettings_ConversationConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings_ConversationConfig::CopyFrom(const CharacterAdvancedSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_ConversationConfig::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_ConversationConfig::InternalSwap(CharacterAdvancedSettings_ConversationConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(engine_spec_, other->engine_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_ConversationConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings_SafetySpec::_Internal {
 public:
};

CharacterAdvancedSettings_SafetySpec::CharacterAdvancedSettings_SafetySpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  allowed_topics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
}
CharacterAdvancedSettings_SafetySpec::CharacterAdvancedSettings_SafetySpec(const CharacterAdvancedSettings_SafetySpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      allowed_topics_(from.allowed_topics_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
}

void CharacterAdvancedSettings_SafetySpec::SharedCtor() {
}

CharacterAdvancedSettings_SafetySpec::~CharacterAdvancedSettings_SafetySpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings_SafetySpec::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CharacterAdvancedSettings_SafetySpec::ArenaDtor(void* object) {
  CharacterAdvancedSettings_SafetySpec* _this = reinterpret_cast< CharacterAdvancedSettings_SafetySpec* >(object);
  (void)_this;
}
void CharacterAdvancedSettings_SafetySpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings_SafetySpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings_SafetySpec& CharacterAdvancedSettings_SafetySpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_SafetySpec_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings_SafetySpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allowed_topics_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_SafetySpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_allowed_topics(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_allowed_topics(static_cast<::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetyTopicName>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings_SafetySpec::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
  {
    int byte_size = _allowed_topics_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, allowed_topics_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  return target;
}

size_t CharacterAdvancedSettings_SafetySpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_allowed_topics_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_allowed_topics(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _allowed_topics_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings_SafetySpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings_SafetySpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings_SafetySpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings_SafetySpec::MergeFrom(const CharacterAdvancedSettings_SafetySpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allowed_topics_.MergeFrom(from.allowed_topics_);
}

void CharacterAdvancedSettings_SafetySpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings_SafetySpec::CopyFrom(const CharacterAdvancedSettings_SafetySpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_SafetySpec::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_SafetySpec::InternalSwap(CharacterAdvancedSettings_SafetySpec* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  allowed_topics_.InternalSwap(&other->allowed_topics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_SafetySpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterAdvancedSettings::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig& conversation_config(const CharacterAdvancedSettings* msg);
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec& speech_safety_spec(const CharacterAdvancedSettings* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig&
CharacterAdvancedSettings::_Internal::conversation_config(const CharacterAdvancedSettings* msg) {
  return *msg->conversation_config_;
}
const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec&
CharacterAdvancedSettings::_Internal::speech_safety_spec(const CharacterAdvancedSettings* msg) {
  return *msg->speech_safety_spec_;
}
CharacterAdvancedSettings::CharacterAdvancedSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
}
CharacterAdvancedSettings::CharacterAdvancedSettings(const CharacterAdvancedSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  custom_prompt_template_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_custom_prompt_template().empty()) {
    custom_prompt_template_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_custom_prompt_template(), 
      GetArena());
  }
  additional_agent_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_additional_agent_info().empty()) {
    additional_agent_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_additional_agent_info(), 
      GetArena());
  }
  if (from._internal_has_conversation_config()) {
    conversation_config_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig(*from.conversation_config_);
  } else {
    conversation_config_ = nullptr;
  }
  if (from._internal_has_speech_safety_spec()) {
    speech_safety_spec_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec(*from.speech_safety_spec_);
  } else {
    speech_safety_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
}

void CharacterAdvancedSettings::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_prompt_template_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  additional_agent_info_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&conversation_config_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&speech_safety_spec_) -
      reinterpret_cast<char*>(&conversation_config_)) + sizeof(speech_safety_spec_));
}

CharacterAdvancedSettings::~CharacterAdvancedSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterAdvancedSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  custom_prompt_template_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  additional_agent_info_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete conversation_config_;
  if (this != internal_default_instance()) delete speech_safety_spec_;
}

void CharacterAdvancedSettings::ArenaDtor(void* object) {
  CharacterAdvancedSettings* _this = reinterpret_cast< CharacterAdvancedSettings* >(object);
  (void)_this;
}
void CharacterAdvancedSettings::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterAdvancedSettings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterAdvancedSettings& CharacterAdvancedSettings::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterAdvancedSettings_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CharacterAdvancedSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  custom_prompt_template_.ClearToEmpty();
  additional_agent_info_.ClearToEmpty();
  if (GetArena() == nullptr && conversation_config_ != nullptr) {
    delete conversation_config_;
  }
  conversation_config_ = nullptr;
  if (GetArena() == nullptr && speech_safety_spec_ != nullptr) {
    delete speech_safety_spec_;
  }
  speech_safety_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_conversation_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string custom_prompt_template = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_custom_prompt_template();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.custom_prompt_template"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_speech_safety_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string additional_agent_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_additional_agent_info();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.additional_agent_info"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterAdvancedSettings::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
  if (this->has_conversation_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::conversation_config(this), target, stream);
  }

  // string custom_prompt_template = 4;
  if (this->custom_prompt_template().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_prompt_template().data(), static_cast<int>(this->_internal_custom_prompt_template().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.custom_prompt_template");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_custom_prompt_template(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
  if (this->has_speech_safety_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::speech_safety_spec(this), target, stream);
  }

  // string additional_agent_info = 6;
  if (this->additional_agent_info().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_additional_agent_info().data(), static_cast<int>(this->_internal_additional_agent_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.additional_agent_info");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_additional_agent_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  return target;
}

size_t CharacterAdvancedSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string custom_prompt_template = 4;
  if (this->custom_prompt_template().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_prompt_template());
  }

  // string additional_agent_info = 6;
  if (this->additional_agent_info().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_additional_agent_info());
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
  if (this->has_conversation_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *conversation_config_);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
  if (this->has_speech_safety_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *speech_safety_spec_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAdvancedSettings::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAdvancedSettings* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterAdvancedSettings>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
    MergeFrom(*source);
  }
}

void CharacterAdvancedSettings::MergeFrom(const CharacterAdvancedSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.custom_prompt_template().size() > 0) {
    _internal_set_custom_prompt_template(from._internal_custom_prompt_template());
  }
  if (from.additional_agent_info().size() > 0) {
    _internal_set_additional_agent_info(from._internal_additional_agent_info());
  }
  if (from.has_conversation_config()) {
    _internal_mutable_conversation_config()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig::MergeFrom(from._internal_conversation_config());
  }
  if (from.has_speech_safety_spec()) {
    _internal_mutable_speech_safety_spec()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec::MergeFrom(from._internal_speech_safety_spec());
  }
}

void CharacterAdvancedSettings::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAdvancedSettings::CopyFrom(const CharacterAdvancedSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings::InternalSwap(CharacterAdvancedSettings* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  custom_prompt_template_.Swap(&other->custom_prompt_template_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  additional_agent_info_.Swap(&other->additional_agent_info_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings, speech_safety_spec_)
      + sizeof(CharacterAdvancedSettings::speech_safety_spec_)
      - PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings, conversation_config_)>(
          reinterpret_cast<char*>(&conversation_config_),
          reinterpret_cast<char*>(&other->conversation_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetCharacterShareInfoRequest::_Internal {
 public:
};

GetCharacterShareInfoRequest::GetCharacterShareInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
}
GetCharacterShareInfoRequest::GetCharacterShareInfoRequest(const GetCharacterShareInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
}

void GetCharacterShareInfoRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetCharacterShareInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
}

GetCharacterShareInfoRequest::~GetCharacterShareInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetCharacterShareInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetCharacterShareInfoRequest::ArenaDtor(void* object) {
  GetCharacterShareInfoRequest* _this = reinterpret_cast< GetCharacterShareInfoRequest* >(object);
  (void)_this;
}
void GetCharacterShareInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetCharacterShareInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetCharacterShareInfoRequest& GetCharacterShareInfoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetCharacterShareInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void GetCharacterShareInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  view_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterShareInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterSharePurpose view = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterSharePurpose>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetCharacterShareInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterSharePurpose view = 2;
  if (this->view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  return target;
}

size_t GetCharacterShareInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.studio.v1alpha.CharacterSharePurpose view = 2;
  if (this->view() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_view());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetCharacterShareInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCharacterShareInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetCharacterShareInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
    MergeFrom(*source);
  }
}

void GetCharacterShareInfoRequest::MergeFrom(const GetCharacterShareInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.view() != 0) {
    _internal_set_view(from._internal_view());
  }
}

void GetCharacterShareInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCharacterShareInfoRequest::CopyFrom(const GetCharacterShareInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterShareInfoRequest::IsInitialized() const {
  return true;
}

void GetCharacterShareInfoRequest::InternalSwap(GetCharacterShareInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(view_, other->view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterShareInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CharacterShareInfo::_Internal {
 public:
};

CharacterShareInfo::CharacterShareInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  external_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
}
CharacterShareInfo::CharacterShareInfo(const CharacterShareInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      external_ids_(from.external_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
}

void CharacterShareInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CharacterShareInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
}

CharacterShareInfo::~CharacterShareInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CharacterShareInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CharacterShareInfo::ArenaDtor(void* object) {
  CharacterShareInfo* _this = reinterpret_cast< CharacterShareInfo* >(object);
  (void)_this;
}
void CharacterShareInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CharacterShareInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CharacterShareInfo& CharacterShareInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CharacterShareInfo_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CharacterShareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  external_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterShareInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterShareInfo.external_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CharacterShareInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterShareInfo.external_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterShareInfo)
  return target;
}

size_t CharacterShareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(external_ids_.size());
  for (int i = 0, n = external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      external_ids_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterShareInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterShareInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CharacterShareInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CharacterShareInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CharacterShareInfo)
    MergeFrom(*source);
  }
}

void CharacterShareInfo::MergeFrom(const CharacterShareInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  external_ids_.MergeFrom(from.external_ids_);
}

void CharacterShareInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterShareInfo::CopyFrom(const CharacterShareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterShareInfo::IsInitialized() const {
  return true;
}

void CharacterShareInfo::InternalSwap(CharacterShareInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  external_ids_.InternalSwap(&other->external_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterShareInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckDeployInfoRequest::_Internal {
 public:
};

CheckDeployInfoRequest::CheckDeployInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
}
CheckDeployInfoRequest::CheckDeployInfoRequest(const CheckDeployInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character().empty()) {
    character_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
}

void CheckDeployInfoRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckDeployInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  character_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CheckDeployInfoRequest::~CheckDeployInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckDeployInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CheckDeployInfoRequest::ArenaDtor(void* object) {
  CheckDeployInfoRequest* _this = reinterpret_cast< CheckDeployInfoRequest* >(object);
  (void)_this;
}
void CheckDeployInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckDeployInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckDeployInfoRequest& CheckDeployInfoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckDeployInfoRequest_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CheckDeployInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDeployInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CheckDeployInfoRequest.character"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckDeployInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CheckDeployInfoRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  return target;
}

size_t CheckDeployInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->character().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckDeployInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckDeployInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckDeployInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
    MergeFrom(*source);
  }
}

void CheckDeployInfoRequest::MergeFrom(const CheckDeployInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character().size() > 0) {
    _internal_set_character(from._internal_character());
  }
}

void CheckDeployInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckDeployInfoRequest::CopyFrom(const CheckDeployInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDeployInfoRequest::IsInitialized() const {
  return true;
}

void CheckDeployInfoRequest::InternalSwap(CheckDeployInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_.Swap(&other->character_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDeployInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeployCharacterAsyncMetadata::_Internal {
 public:
};

DeployCharacterAsyncMetadata::DeployCharacterAsyncMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
}
DeployCharacterAsyncMetadata::DeployCharacterAsyncMetadata(const DeployCharacterAsyncMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
}

void DeployCharacterAsyncMetadata::SharedCtor() {
}

DeployCharacterAsyncMetadata::~DeployCharacterAsyncMetadata() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeployCharacterAsyncMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeployCharacterAsyncMetadata::ArenaDtor(void* object) {
  DeployCharacterAsyncMetadata* _this = reinterpret_cast< DeployCharacterAsyncMetadata* >(object);
  (void)_this;
}
void DeployCharacterAsyncMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeployCharacterAsyncMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeployCharacterAsyncMetadata& DeployCharacterAsyncMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeployCharacterAsyncMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void DeployCharacterAsyncMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployCharacterAsyncMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeployCharacterAsyncMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  return target;
}

size_t DeployCharacterAsyncMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeployCharacterAsyncMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployCharacterAsyncMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeployCharacterAsyncMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
    MergeFrom(*source);
  }
}

void DeployCharacterAsyncMetadata::MergeFrom(const DeployCharacterAsyncMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeployCharacterAsyncMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployCharacterAsyncMetadata::CopyFrom(const DeployCharacterAsyncMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployCharacterAsyncMetadata::IsInitialized() const {
  return true;
}

void DeployCharacterAsyncMetadata::InternalSwap(DeployCharacterAsyncMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployCharacterAsyncMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeployCharacterAsyncResponse::_Internal {
 public:
};

DeployCharacterAsyncResponse::DeployCharacterAsyncResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
}
DeployCharacterAsyncResponse::DeployCharacterAsyncResponse(const DeployCharacterAsyncResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
}

void DeployCharacterAsyncResponse::SharedCtor() {
}

DeployCharacterAsyncResponse::~DeployCharacterAsyncResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeployCharacterAsyncResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeployCharacterAsyncResponse::ArenaDtor(void* object) {
  DeployCharacterAsyncResponse* _this = reinterpret_cast< DeployCharacterAsyncResponse* >(object);
  (void)_this;
}
void DeployCharacterAsyncResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeployCharacterAsyncResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeployCharacterAsyncResponse& DeployCharacterAsyncResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeployCharacterAsyncResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void DeployCharacterAsyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployCharacterAsyncResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeployCharacterAsyncResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  return target;
}

size_t DeployCharacterAsyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeployCharacterAsyncResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeployCharacterAsyncResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeployCharacterAsyncResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
    MergeFrom(*source);
  }
}

void DeployCharacterAsyncResponse::MergeFrom(const DeployCharacterAsyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeployCharacterAsyncResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeployCharacterAsyncResponse::CopyFrom(const DeployCharacterAsyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployCharacterAsyncResponse::IsInitialized() const {
  return true;
}

void DeployCharacterAsyncResponse::InternalSwap(DeployCharacterAsyncResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployCharacterAsyncResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateCharacterMetadata::_Internal {
 public:
};

CreateCharacterMetadata::CreateCharacterMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
}
CreateCharacterMetadata::CreateCharacterMetadata(const CreateCharacterMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
}

void CreateCharacterMetadata::SharedCtor() {
}

CreateCharacterMetadata::~CreateCharacterMetadata() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateCharacterMetadata::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateCharacterMetadata::ArenaDtor(void* object) {
  CreateCharacterMetadata* _this = reinterpret_cast< CreateCharacterMetadata* >(object);
  (void)_this;
}
void CreateCharacterMetadata::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateCharacterMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateCharacterMetadata& CreateCharacterMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateCharacterMetadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CreateCharacterMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCharacterMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateCharacterMetadata::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  return target;
}

size_t CreateCharacterMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateCharacterMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateCharacterMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateCharacterMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
    MergeFrom(*source);
  }
}

void CreateCharacterMetadata::MergeFrom(const CreateCharacterMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateCharacterMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateCharacterMetadata::CopyFrom(const CreateCharacterMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharacterMetadata::IsInitialized() const {
  return true;
}

void CreateCharacterMetadata::InternalSwap(CreateCharacterMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CheckDeployInfoResponse::_Internal {
 public:
};

CheckDeployInfoResponse::CheckDeployInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
}
CheckDeployInfoResponse::CheckDeployInfoResponse(const CheckDeployInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  is_fresh_ = from.is_fresh_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
}

void CheckDeployInfoResponse::SharedCtor() {
  is_fresh_ = false;
}

CheckDeployInfoResponse::~CheckDeployInfoResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckDeployInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CheckDeployInfoResponse::ArenaDtor(void* object) {
  CheckDeployInfoResponse* _this = reinterpret_cast< CheckDeployInfoResponse* >(object);
  (void)_this;
}
void CheckDeployInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckDeployInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckDeployInfoResponse& CheckDeployInfoResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckDeployInfoResponse_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto.base);
  return *internal_default_instance();
}


void CheckDeployInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_fresh_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDeployInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_fresh = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_fresh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckDeployInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_fresh = 1;
  if (this->is_fresh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_fresh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  return target;
}

size_t CheckDeployInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_fresh = 1;
  if (this->is_fresh() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckDeployInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckDeployInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckDeployInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
    MergeFrom(*source);
  }
}

void CheckDeployInfoResponse::MergeFrom(const CheckDeployInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_fresh() != 0) {
    _internal_set_is_fresh(from._internal_is_fresh());
  }
}

void CheckDeployInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckDeployInfoResponse::CopyFrom(const CheckDeployInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDeployInfoResponse::IsInitialized() const {
  return true;
}

void CheckDeployInfoResponse::InternalSwap(CheckDeployInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(is_fresh_, other->is_fresh_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDeployInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterDescription* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterDescription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterDescription >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainTrigger* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterAssets* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterAssets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterAssets >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterPersonality* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterPersonality >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterPersonality >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_Fact* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_Fact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_Fact >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_Meta* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_Meta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_Meta >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListCharactersRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListCharactersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListCharactersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CreateCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CreateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CreateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UpdateCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeleteCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeployCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeployCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeployCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CloneCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CloneCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CloneCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListCharactersResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListCharactersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListCharactersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ShareCharacterRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ShareCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ShareCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterShareInfo* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterShareInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterShareInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CreateCharacterMetadata* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CreateCharacterMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CreateCharacterMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse* Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
