// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/longrunning/operations.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2flongrunning_2foperations_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2flongrunning_2foperations_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/client.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/empty.pb.h>
#include "google/rpc/status.pb.h"
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2flongrunning_2foperations_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2flongrunning_2foperations_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2flongrunning_2foperations_2eproto;
namespace google {
namespace longrunning {
class CancelOperationRequest;
class CancelOperationRequestDefaultTypeInternal;
extern CancelOperationRequestDefaultTypeInternal _CancelOperationRequest_default_instance_;
class DeleteOperationRequest;
class DeleteOperationRequestDefaultTypeInternal;
extern DeleteOperationRequestDefaultTypeInternal _DeleteOperationRequest_default_instance_;
class GetOperationRequest;
class GetOperationRequestDefaultTypeInternal;
extern GetOperationRequestDefaultTypeInternal _GetOperationRequest_default_instance_;
class ListOperationsRequest;
class ListOperationsRequestDefaultTypeInternal;
extern ListOperationsRequestDefaultTypeInternal _ListOperationsRequest_default_instance_;
class ListOperationsResponse;
class ListOperationsResponseDefaultTypeInternal;
extern ListOperationsResponseDefaultTypeInternal _ListOperationsResponse_default_instance_;
class Operation;
class OperationDefaultTypeInternal;
extern OperationDefaultTypeInternal _Operation_default_instance_;
class OperationInfo;
class OperationInfoDefaultTypeInternal;
extern OperationInfoDefaultTypeInternal _OperationInfo_default_instance_;
class WaitOperationRequest;
class WaitOperationRequestDefaultTypeInternal;
extern WaitOperationRequestDefaultTypeInternal _WaitOperationRequest_default_instance_;
}  // namespace longrunning
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::longrunning::CancelOperationRequest* Arena::CreateMaybeMessage<::google::longrunning::CancelOperationRequest>(Arena*);
template<> ::google::longrunning::DeleteOperationRequest* Arena::CreateMaybeMessage<::google::longrunning::DeleteOperationRequest>(Arena*);
template<> ::google::longrunning::GetOperationRequest* Arena::CreateMaybeMessage<::google::longrunning::GetOperationRequest>(Arena*);
template<> ::google::longrunning::ListOperationsRequest* Arena::CreateMaybeMessage<::google::longrunning::ListOperationsRequest>(Arena*);
template<> ::google::longrunning::ListOperationsResponse* Arena::CreateMaybeMessage<::google::longrunning::ListOperationsResponse>(Arena*);
template<> ::google::longrunning::Operation* Arena::CreateMaybeMessage<::google::longrunning::Operation>(Arena*);
template<> ::google::longrunning::OperationInfo* Arena::CreateMaybeMessage<::google::longrunning::OperationInfo>(Arena*);
template<> ::google::longrunning::WaitOperationRequest* Arena::CreateMaybeMessage<::google::longrunning::WaitOperationRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace longrunning {

// ===================================================================

class Operation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.Operation) */ {
 public:
  inline Operation() : Operation(nullptr) {}
  virtual ~Operation();

  Operation(const Operation& from);
  Operation(Operation&& from) noexcept
    : Operation() {
    *this = ::std::move(from);
  }

  inline Operation& operator=(const Operation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Operation& operator=(Operation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Operation& default_instance();

  enum ResultCase {
    kError = 4,
    kResponse = 5,
    RESULT_NOT_SET = 0,
  };

  static inline const Operation* internal_default_instance() {
    return reinterpret_cast<const Operation*>(
               &_Operation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Operation& a, Operation& b) {
    a.Swap(&b);
  }
  inline void Swap(Operation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Operation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Operation* New() const final {
    return CreateMaybeMessage<Operation>(nullptr);
  }

  Operation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Operation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Operation& from);
  void MergeFrom(const Operation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Operation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.Operation";
  }
  protected:
  explicit Operation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kMetadataFieldNumber = 2,
    kDoneFieldNumber = 3,
    kErrorFieldNumber = 4,
    kResponseFieldNumber = 5,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Any metadata = 2;
  bool has_metadata() const;
  private:
  bool _internal_has_metadata() const;
  public:
  void clear_metadata();
  const PROTOBUF_NAMESPACE_ID::Any& metadata() const;
  PROTOBUF_NAMESPACE_ID::Any* release_metadata();
  PROTOBUF_NAMESPACE_ID::Any* mutable_metadata();
  void set_allocated_metadata(PROTOBUF_NAMESPACE_ID::Any* metadata);
  private:
  const PROTOBUF_NAMESPACE_ID::Any& _internal_metadata() const;
  PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_metadata();
  public:
  void unsafe_arena_set_allocated_metadata(
      PROTOBUF_NAMESPACE_ID::Any* metadata);
  PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_metadata();

  // bool done = 3;
  void clear_done();
  bool done() const;
  void set_done(bool value);
  private:
  bool _internal_done() const;
  void _internal_set_done(bool value);
  public:

  // .google.rpc.Status error = 4;
  bool has_error() const;
  private:
  bool _internal_has_error() const;
  public:
  void clear_error();
  const ::google::rpc::Status& error() const;
  ::google::rpc::Status* release_error();
  ::google::rpc::Status* mutable_error();
  void set_allocated_error(::google::rpc::Status* error);
  private:
  const ::google::rpc::Status& _internal_error() const;
  ::google::rpc::Status* _internal_mutable_error();
  public:
  void unsafe_arena_set_allocated_error(
      ::google::rpc::Status* error);
  ::google::rpc::Status* unsafe_arena_release_error();

  // .google.protobuf.Any response = 5;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const PROTOBUF_NAMESPACE_ID::Any& response() const;
  PROTOBUF_NAMESPACE_ID::Any* release_response();
  PROTOBUF_NAMESPACE_ID::Any* mutable_response();
  void set_allocated_response(PROTOBUF_NAMESPACE_ID::Any* response);
  private:
  const PROTOBUF_NAMESPACE_ID::Any& _internal_response() const;
  PROTOBUF_NAMESPACE_ID::Any* _internal_mutable_response();
  public:
  void unsafe_arena_set_allocated_response(
      PROTOBUF_NAMESPACE_ID::Any* response);
  PROTOBUF_NAMESPACE_ID::Any* unsafe_arena_release_response();

  void clear_result();
  ResultCase result_case() const;
  // @@protoc_insertion_point(class_scope:google.longrunning.Operation)
 private:
  class _Internal;
  void set_has_error();
  void set_has_response();

  inline bool has_result() const;
  inline void clear_has_result();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  PROTOBUF_NAMESPACE_ID::Any* metadata_;
  bool done_;
  union ResultUnion {
    ResultUnion() {}
    ::google::rpc::Status* error_;
    PROTOBUF_NAMESPACE_ID::Any* response_;
  } result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// -------------------------------------------------------------------

class GetOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.GetOperationRequest) */ {
 public:
  inline GetOperationRequest() : GetOperationRequest(nullptr) {}
  virtual ~GetOperationRequest();

  GetOperationRequest(const GetOperationRequest& from);
  GetOperationRequest(GetOperationRequest&& from) noexcept
    : GetOperationRequest() {
    *this = ::std::move(from);
  }

  inline GetOperationRequest& operator=(const GetOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOperationRequest& operator=(GetOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetOperationRequest& default_instance();

  static inline const GetOperationRequest* internal_default_instance() {
    return reinterpret_cast<const GetOperationRequest*>(
               &_GetOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetOperationRequest& a, GetOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetOperationRequest* New() const final {
    return CreateMaybeMessage<GetOperationRequest>(nullptr);
  }

  GetOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetOperationRequest& from);
  void MergeFrom(const GetOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.GetOperationRequest";
  }
  protected:
  explicit GetOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.longrunning.GetOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// -------------------------------------------------------------------

class ListOperationsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.ListOperationsRequest) */ {
 public:
  inline ListOperationsRequest() : ListOperationsRequest(nullptr) {}
  virtual ~ListOperationsRequest();

  ListOperationsRequest(const ListOperationsRequest& from);
  ListOperationsRequest(ListOperationsRequest&& from) noexcept
    : ListOperationsRequest() {
    *this = ::std::move(from);
  }

  inline ListOperationsRequest& operator=(const ListOperationsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOperationsRequest& operator=(ListOperationsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListOperationsRequest& default_instance();

  static inline const ListOperationsRequest* internal_default_instance() {
    return reinterpret_cast<const ListOperationsRequest*>(
               &_ListOperationsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListOperationsRequest& a, ListOperationsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListOperationsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOperationsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListOperationsRequest* New() const final {
    return CreateMaybeMessage<ListOperationsRequest>(nullptr);
  }

  ListOperationsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListOperationsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListOperationsRequest& from);
  void MergeFrom(const ListOperationsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOperationsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.ListOperationsRequest";
  }
  protected:
  explicit ListOperationsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterFieldNumber = 1,
    kPageTokenFieldNumber = 3,
    kNameFieldNumber = 4,
    kPageSizeFieldNumber = 2,
  };
  // string filter = 1;
  void clear_filter();
  const std::string& filter() const;
  void set_filter(const std::string& value);
  void set_filter(std::string&& value);
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  std::string* mutable_filter();
  std::string* release_filter();
  void set_allocated_filter(std::string* filter);
  private:
  const std::string& _internal_filter() const;
  void _internal_set_filter(const std::string& value);
  std::string* _internal_mutable_filter();
  public:

  // string page_token = 3;
  void clear_page_token();
  const std::string& page_token() const;
  void set_page_token(const std::string& value);
  void set_page_token(std::string&& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  std::string* mutable_page_token();
  std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // string name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 page_size = 2;
  void clear_page_size();
  ::PROTOBUF_NAMESPACE_ID::int32 page_size() const;
  void set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page_size() const;
  void _internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:google.longrunning.ListOperationsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filter_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// -------------------------------------------------------------------

class ListOperationsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.ListOperationsResponse) */ {
 public:
  inline ListOperationsResponse() : ListOperationsResponse(nullptr) {}
  virtual ~ListOperationsResponse();

  ListOperationsResponse(const ListOperationsResponse& from);
  ListOperationsResponse(ListOperationsResponse&& from) noexcept
    : ListOperationsResponse() {
    *this = ::std::move(from);
  }

  inline ListOperationsResponse& operator=(const ListOperationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOperationsResponse& operator=(ListOperationsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListOperationsResponse& default_instance();

  static inline const ListOperationsResponse* internal_default_instance() {
    return reinterpret_cast<const ListOperationsResponse*>(
               &_ListOperationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ListOperationsResponse& a, ListOperationsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListOperationsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOperationsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListOperationsResponse* New() const final {
    return CreateMaybeMessage<ListOperationsResponse>(nullptr);
  }

  ListOperationsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListOperationsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListOperationsResponse& from);
  void MergeFrom(const ListOperationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListOperationsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.ListOperationsResponse";
  }
  protected:
  explicit ListOperationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationsFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .google.longrunning.Operation operations = 1;
  int operations_size() const;
  private:
  int _internal_operations_size() const;
  public:
  void clear_operations();
  ::google::longrunning::Operation* mutable_operations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::longrunning::Operation >*
      mutable_operations();
  private:
  const ::google::longrunning::Operation& _internal_operations(int index) const;
  ::google::longrunning::Operation* _internal_add_operations();
  public:
  const ::google::longrunning::Operation& operations(int index) const;
  ::google::longrunning::Operation* add_operations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::longrunning::Operation >&
      operations() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  void set_next_page_token(const std::string& value);
  void set_next_page_token(std::string&& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  std::string* mutable_next_page_token();
  std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:google.longrunning.ListOperationsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::longrunning::Operation > operations_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// -------------------------------------------------------------------

class CancelOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.CancelOperationRequest) */ {
 public:
  inline CancelOperationRequest() : CancelOperationRequest(nullptr) {}
  virtual ~CancelOperationRequest();

  CancelOperationRequest(const CancelOperationRequest& from);
  CancelOperationRequest(CancelOperationRequest&& from) noexcept
    : CancelOperationRequest() {
    *this = ::std::move(from);
  }

  inline CancelOperationRequest& operator=(const CancelOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOperationRequest& operator=(CancelOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CancelOperationRequest& default_instance();

  static inline const CancelOperationRequest* internal_default_instance() {
    return reinterpret_cast<const CancelOperationRequest*>(
               &_CancelOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CancelOperationRequest& a, CancelOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CancelOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CancelOperationRequest* New() const final {
    return CreateMaybeMessage<CancelOperationRequest>(nullptr);
  }

  CancelOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CancelOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CancelOperationRequest& from);
  void MergeFrom(const CancelOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.CancelOperationRequest";
  }
  protected:
  explicit CancelOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.longrunning.CancelOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// -------------------------------------------------------------------

class DeleteOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.DeleteOperationRequest) */ {
 public:
  inline DeleteOperationRequest() : DeleteOperationRequest(nullptr) {}
  virtual ~DeleteOperationRequest();

  DeleteOperationRequest(const DeleteOperationRequest& from);
  DeleteOperationRequest(DeleteOperationRequest&& from) noexcept
    : DeleteOperationRequest() {
    *this = ::std::move(from);
  }

  inline DeleteOperationRequest& operator=(const DeleteOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteOperationRequest& operator=(DeleteOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteOperationRequest& default_instance();

  static inline const DeleteOperationRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteOperationRequest*>(
               &_DeleteOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DeleteOperationRequest& a, DeleteOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteOperationRequest* New() const final {
    return CreateMaybeMessage<DeleteOperationRequest>(nullptr);
  }

  DeleteOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteOperationRequest& from);
  void MergeFrom(const DeleteOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.DeleteOperationRequest";
  }
  protected:
  explicit DeleteOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:google.longrunning.DeleteOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// -------------------------------------------------------------------

class WaitOperationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.WaitOperationRequest) */ {
 public:
  inline WaitOperationRequest() : WaitOperationRequest(nullptr) {}
  virtual ~WaitOperationRequest();

  WaitOperationRequest(const WaitOperationRequest& from);
  WaitOperationRequest(WaitOperationRequest&& from) noexcept
    : WaitOperationRequest() {
    *this = ::std::move(from);
  }

  inline WaitOperationRequest& operator=(const WaitOperationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WaitOperationRequest& operator=(WaitOperationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const WaitOperationRequest& default_instance();

  static inline const WaitOperationRequest* internal_default_instance() {
    return reinterpret_cast<const WaitOperationRequest*>(
               &_WaitOperationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(WaitOperationRequest& a, WaitOperationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WaitOperationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WaitOperationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline WaitOperationRequest* New() const final {
    return CreateMaybeMessage<WaitOperationRequest>(nullptr);
  }

  WaitOperationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<WaitOperationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const WaitOperationRequest& from);
  void MergeFrom(const WaitOperationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WaitOperationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.WaitOperationRequest";
  }
  protected:
  explicit WaitOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kTimeoutFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .google.protobuf.Duration timeout = 2;
  bool has_timeout() const;
  private:
  bool _internal_has_timeout() const;
  public:
  void clear_timeout();
  const PROTOBUF_NAMESPACE_ID::Duration& timeout() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_timeout();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_timeout();
  void set_allocated_timeout(PROTOBUF_NAMESPACE_ID::Duration* timeout);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_timeout() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_timeout();
  public:
  void unsafe_arena_set_allocated_timeout(
      PROTOBUF_NAMESPACE_ID::Duration* timeout);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_timeout();

  // @@protoc_insertion_point(class_scope:google.longrunning.WaitOperationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  PROTOBUF_NAMESPACE_ID::Duration* timeout_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// -------------------------------------------------------------------

class OperationInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.longrunning.OperationInfo) */ {
 public:
  inline OperationInfo() : OperationInfo(nullptr) {}
  virtual ~OperationInfo();

  OperationInfo(const OperationInfo& from);
  OperationInfo(OperationInfo&& from) noexcept
    : OperationInfo() {
    *this = ::std::move(from);
  }

  inline OperationInfo& operator=(const OperationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperationInfo& operator=(OperationInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OperationInfo& default_instance();

  static inline const OperationInfo* internal_default_instance() {
    return reinterpret_cast<const OperationInfo*>(
               &_OperationInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(OperationInfo& a, OperationInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(OperationInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperationInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OperationInfo* New() const final {
    return CreateMaybeMessage<OperationInfo>(nullptr);
  }

  OperationInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OperationInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OperationInfo& from);
  void MergeFrom(const OperationInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OperationInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.longrunning.OperationInfo";
  }
  protected:
  explicit OperationInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2flongrunning_2foperations_2eproto);
    return ::descriptor_table_google_2flongrunning_2foperations_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseTypeFieldNumber = 1,
    kMetadataTypeFieldNumber = 2,
  };
  // string response_type = 1;
  void clear_response_type();
  const std::string& response_type() const;
  void set_response_type(const std::string& value);
  void set_response_type(std::string&& value);
  void set_response_type(const char* value);
  void set_response_type(const char* value, size_t size);
  std::string* mutable_response_type();
  std::string* release_response_type();
  void set_allocated_response_type(std::string* response_type);
  private:
  const std::string& _internal_response_type() const;
  void _internal_set_response_type(const std::string& value);
  std::string* _internal_mutable_response_type();
  public:

  // string metadata_type = 2;
  void clear_metadata_type();
  const std::string& metadata_type() const;
  void set_metadata_type(const std::string& value);
  void set_metadata_type(std::string&& value);
  void set_metadata_type(const char* value);
  void set_metadata_type(const char* value, size_t size);
  std::string* mutable_metadata_type();
  std::string* release_metadata_type();
  void set_allocated_metadata_type(std::string* metadata_type);
  private:
  const std::string& _internal_metadata_type() const;
  void _internal_set_metadata_type(const std::string& value);
  std::string* _internal_mutable_metadata_type();
  public:

  // @@protoc_insertion_point(class_scope:google.longrunning.OperationInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metadata_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2flongrunning_2foperations_2eproto;
};
// ===================================================================

static const int kOperationInfoFieldNumber = 1049;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf_inworld::MethodOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::google::longrunning::OperationInfo >, 11, false >
  operation_info;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Operation

// string name = 1;
inline void Operation::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Operation::name() const {
  // @@protoc_insertion_point(field_get:google.longrunning.Operation.name)
  return _internal_name();
}
inline void Operation::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.longrunning.Operation.name)
}
inline std::string* Operation::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.Operation.name)
  return _internal_mutable_name();
}
inline const std::string& Operation::_internal_name() const {
  return name_.Get();
}
inline void Operation::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Operation::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.Operation.name)
}
inline void Operation::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.Operation.name)
}
inline void Operation::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.Operation.name)
}
inline std::string* Operation::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Operation::release_name() {
  // @@protoc_insertion_point(field_release:google.longrunning.Operation.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Operation::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.Operation.name)
}

// .google.protobuf.Any metadata = 2;
inline bool Operation::_internal_has_metadata() const {
  return this != internal_default_instance() && metadata_ != nullptr;
}
inline bool Operation::has_metadata() const {
  return _internal_has_metadata();
}
inline const PROTOBUF_NAMESPACE_ID::Any& Operation::_internal_metadata() const {
  const PROTOBUF_NAMESPACE_ID::Any* p = metadata_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Any&>(
      PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Any& Operation::metadata() const {
  // @@protoc_insertion_point(field_get:google.longrunning.Operation.metadata)
  return _internal_metadata();
}
inline void Operation::unsafe_arena_set_allocated_metadata(
    PROTOBUF_NAMESPACE_ID::Any* metadata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  metadata_ = metadata;
  if (metadata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.longrunning.Operation.metadata)
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::release_metadata() {
  
  PROTOBUF_NAMESPACE_ID::Any* temp = metadata_;
  metadata_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_release:google.longrunning.Operation.metadata)
  
  PROTOBUF_NAMESPACE_ID::Any* temp = metadata_;
  metadata_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::_internal_mutable_metadata() {
  
  if (metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Any>(GetArena());
    metadata_ = p;
  }
  return metadata_;
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.Operation.metadata)
  return _internal_mutable_metadata();
}
inline void Operation::set_allocated_metadata(PROTOBUF_NAMESPACE_ID::Any* metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(metadata)->GetArena();
    if (message_arena != submessage_arena) {
      metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.Operation.metadata)
}

// bool done = 3;
inline void Operation::clear_done() {
  done_ = false;
}
inline bool Operation::_internal_done() const {
  return done_;
}
inline bool Operation::done() const {
  // @@protoc_insertion_point(field_get:google.longrunning.Operation.done)
  return _internal_done();
}
inline void Operation::_internal_set_done(bool value) {
  
  done_ = value;
}
inline void Operation::set_done(bool value) {
  _internal_set_done(value);
  // @@protoc_insertion_point(field_set:google.longrunning.Operation.done)
}

// .google.rpc.Status error = 4;
inline bool Operation::_internal_has_error() const {
  return result_case() == kError;
}
inline bool Operation::has_error() const {
  return _internal_has_error();
}
inline void Operation::set_has_error() {
  _oneof_case_[0] = kError;
}
inline ::google::rpc::Status* Operation::release_error() {
  // @@protoc_insertion_point(field_release:google.longrunning.Operation.error)
  if (_internal_has_error()) {
    clear_has_result();
      ::google::rpc::Status* temp = result_.error_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    result_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::google::rpc::Status& Operation::_internal_error() const {
  return _internal_has_error()
      ? *result_.error_
      : reinterpret_cast< ::google::rpc::Status&>(::google::rpc::_Status_default_instance_);
}
inline const ::google::rpc::Status& Operation::error() const {
  // @@protoc_insertion_point(field_get:google.longrunning.Operation.error)
  return _internal_error();
}
inline ::google::rpc::Status* Operation::unsafe_arena_release_error() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.longrunning.Operation.error)
  if (_internal_has_error()) {
    clear_has_result();
    ::google::rpc::Status* temp = result_.error_;
    result_.error_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Operation::unsafe_arena_set_allocated_error(::google::rpc::Status* error) {
  clear_result();
  if (error) {
    set_has_error();
    result_.error_ = error;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.longrunning.Operation.error)
}
inline ::google::rpc::Status* Operation::_internal_mutable_error() {
  if (!_internal_has_error()) {
    clear_result();
    set_has_error();
    result_.error_ = CreateMaybeMessage< ::google::rpc::Status >(GetArena());
  }
  return result_.error_;
}
inline ::google::rpc::Status* Operation::mutable_error() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.Operation.error)
  return _internal_mutable_error();
}

// .google.protobuf.Any response = 5;
inline bool Operation::_internal_has_response() const {
  return result_case() == kResponse;
}
inline bool Operation::has_response() const {
  return _internal_has_response();
}
inline void Operation::set_has_response() {
  _oneof_case_[0] = kResponse;
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::release_response() {
  // @@protoc_insertion_point(field_release:google.longrunning.Operation.response)
  if (_internal_has_response()) {
    clear_has_result();
      PROTOBUF_NAMESPACE_ID::Any* temp = result_.response_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    result_.response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const PROTOBUF_NAMESPACE_ID::Any& Operation::_internal_response() const {
  return _internal_has_response()
      ? *result_.response_
      : reinterpret_cast< PROTOBUF_NAMESPACE_ID::Any&>(PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Any& Operation::response() const {
  // @@protoc_insertion_point(field_get:google.longrunning.Operation.response)
  return _internal_response();
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::unsafe_arena_release_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.longrunning.Operation.response)
  if (_internal_has_response()) {
    clear_has_result();
    PROTOBUF_NAMESPACE_ID::Any* temp = result_.response_;
    result_.response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Operation::unsafe_arena_set_allocated_response(PROTOBUF_NAMESPACE_ID::Any* response) {
  clear_result();
  if (response) {
    set_has_response();
    result_.response_ = response;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.longrunning.Operation.response)
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::_internal_mutable_response() {
  if (!_internal_has_response()) {
    clear_result();
    set_has_response();
    result_.response_ = CreateMaybeMessage< PROTOBUF_NAMESPACE_ID::Any >(GetArena());
  }
  return result_.response_;
}
inline PROTOBUF_NAMESPACE_ID::Any* Operation::mutable_response() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.Operation.response)
  return _internal_mutable_response();
}

inline bool Operation::has_result() const {
  return result_case() != RESULT_NOT_SET;
}
inline void Operation::clear_has_result() {
  _oneof_case_[0] = RESULT_NOT_SET;
}
inline Operation::ResultCase Operation::result_case() const {
  return Operation::ResultCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetOperationRequest

// string name = 1;
inline void GetOperationRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GetOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.longrunning.GetOperationRequest.name)
  return _internal_name();
}
inline void GetOperationRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.longrunning.GetOperationRequest.name)
}
inline std::string* GetOperationRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.GetOperationRequest.name)
  return _internal_mutable_name();
}
inline const std::string& GetOperationRequest::_internal_name() const {
  return name_.Get();
}
inline void GetOperationRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GetOperationRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.GetOperationRequest.name)
}
inline void GetOperationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.GetOperationRequest.name)
}
inline void GetOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.GetOperationRequest.name)
}
inline std::string* GetOperationRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GetOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.longrunning.GetOperationRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetOperationRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.GetOperationRequest.name)
}

// -------------------------------------------------------------------

// ListOperationsRequest

// string name = 4;
inline void ListOperationsRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ListOperationsRequest::name() const {
  // @@protoc_insertion_point(field_get:google.longrunning.ListOperationsRequest.name)
  return _internal_name();
}
inline void ListOperationsRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.longrunning.ListOperationsRequest.name)
}
inline std::string* ListOperationsRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.ListOperationsRequest.name)
  return _internal_mutable_name();
}
inline const std::string& ListOperationsRequest::_internal_name() const {
  return name_.Get();
}
inline void ListOperationsRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListOperationsRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.ListOperationsRequest.name)
}
inline void ListOperationsRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.ListOperationsRequest.name)
}
inline void ListOperationsRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.ListOperationsRequest.name)
}
inline std::string* ListOperationsRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListOperationsRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.longrunning.ListOperationsRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListOperationsRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.ListOperationsRequest.name)
}

// string filter = 1;
inline void ListOperationsRequest::clear_filter() {
  filter_.ClearToEmpty();
}
inline const std::string& ListOperationsRequest::filter() const {
  // @@protoc_insertion_point(field_get:google.longrunning.ListOperationsRequest.filter)
  return _internal_filter();
}
inline void ListOperationsRequest::set_filter(const std::string& value) {
  _internal_set_filter(value);
  // @@protoc_insertion_point(field_set:google.longrunning.ListOperationsRequest.filter)
}
inline std::string* ListOperationsRequest::mutable_filter() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.ListOperationsRequest.filter)
  return _internal_mutable_filter();
}
inline const std::string& ListOperationsRequest::_internal_filter() const {
  return filter_.Get();
}
inline void ListOperationsRequest::_internal_set_filter(const std::string& value) {
  
  filter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListOperationsRequest::set_filter(std::string&& value) {
  
  filter_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.ListOperationsRequest.filter)
}
inline void ListOperationsRequest::set_filter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  filter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.ListOperationsRequest.filter)
}
inline void ListOperationsRequest::set_filter(const char* value,
    size_t size) {
  
  filter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.ListOperationsRequest.filter)
}
inline std::string* ListOperationsRequest::_internal_mutable_filter() {
  
  return filter_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListOperationsRequest::release_filter() {
  // @@protoc_insertion_point(field_release:google.longrunning.ListOperationsRequest.filter)
  return filter_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListOperationsRequest::set_allocated_filter(std::string* filter) {
  if (filter != nullptr) {
    
  } else {
    
  }
  filter_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filter,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.ListOperationsRequest.filter)
}

// int32 page_size = 2;
inline void ListOperationsRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListOperationsRequest::_internal_page_size() const {
  return page_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListOperationsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:google.longrunning.ListOperationsRequest.page_size)
  return _internal_page_size();
}
inline void ListOperationsRequest::_internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_size_ = value;
}
inline void ListOperationsRequest::set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:google.longrunning.ListOperationsRequest.page_size)
}

// string page_token = 3;
inline void ListOperationsRequest::clear_page_token() {
  page_token_.ClearToEmpty();
}
inline const std::string& ListOperationsRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.longrunning.ListOperationsRequest.page_token)
  return _internal_page_token();
}
inline void ListOperationsRequest::set_page_token(const std::string& value) {
  _internal_set_page_token(value);
  // @@protoc_insertion_point(field_set:google.longrunning.ListOperationsRequest.page_token)
}
inline std::string* ListOperationsRequest::mutable_page_token() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.ListOperationsRequest.page_token)
  return _internal_mutable_page_token();
}
inline const std::string& ListOperationsRequest::_internal_page_token() const {
  return page_token_.Get();
}
inline void ListOperationsRequest::_internal_set_page_token(const std::string& value) {
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListOperationsRequest::set_page_token(std::string&& value) {
  
  page_token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.ListOperationsRequest.page_token)
}
inline void ListOperationsRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.ListOperationsRequest.page_token)
}
inline void ListOperationsRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.ListOperationsRequest.page_token)
}
inline std::string* ListOperationsRequest::_internal_mutable_page_token() {
  
  return page_token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListOperationsRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.longrunning.ListOperationsRequest.page_token)
  return page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListOperationsRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.ListOperationsRequest.page_token)
}

// -------------------------------------------------------------------

// ListOperationsResponse

// repeated .google.longrunning.Operation operations = 1;
inline int ListOperationsResponse::_internal_operations_size() const {
  return operations_.size();
}
inline int ListOperationsResponse::operations_size() const {
  return _internal_operations_size();
}
inline void ListOperationsResponse::clear_operations() {
  operations_.Clear();
}
inline ::google::longrunning::Operation* ListOperationsResponse::mutable_operations(int index) {
  // @@protoc_insertion_point(field_mutable:google.longrunning.ListOperationsResponse.operations)
  return operations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::longrunning::Operation >*
ListOperationsResponse::mutable_operations() {
  // @@protoc_insertion_point(field_mutable_list:google.longrunning.ListOperationsResponse.operations)
  return &operations_;
}
inline const ::google::longrunning::Operation& ListOperationsResponse::_internal_operations(int index) const {
  return operations_.Get(index);
}
inline const ::google::longrunning::Operation& ListOperationsResponse::operations(int index) const {
  // @@protoc_insertion_point(field_get:google.longrunning.ListOperationsResponse.operations)
  return _internal_operations(index);
}
inline ::google::longrunning::Operation* ListOperationsResponse::_internal_add_operations() {
  return operations_.Add();
}
inline ::google::longrunning::Operation* ListOperationsResponse::add_operations() {
  // @@protoc_insertion_point(field_add:google.longrunning.ListOperationsResponse.operations)
  return _internal_add_operations();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::google::longrunning::Operation >&
ListOperationsResponse::operations() const {
  // @@protoc_insertion_point(field_list:google.longrunning.ListOperationsResponse.operations)
  return operations_;
}

// string next_page_token = 2;
inline void ListOperationsResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty();
}
inline const std::string& ListOperationsResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.longrunning.ListOperationsResponse.next_page_token)
  return _internal_next_page_token();
}
inline void ListOperationsResponse::set_next_page_token(const std::string& value) {
  _internal_set_next_page_token(value);
  // @@protoc_insertion_point(field_set:google.longrunning.ListOperationsResponse.next_page_token)
}
inline std::string* ListOperationsResponse::mutable_next_page_token() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.ListOperationsResponse.next_page_token)
  return _internal_mutable_next_page_token();
}
inline const std::string& ListOperationsResponse::_internal_next_page_token() const {
  return next_page_token_.Get();
}
inline void ListOperationsResponse::_internal_set_next_page_token(const std::string& value) {
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ListOperationsResponse::set_next_page_token(std::string&& value) {
  
  next_page_token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.ListOperationsResponse.next_page_token)
}
inline void ListOperationsResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.ListOperationsResponse.next_page_token)
}
inline void ListOperationsResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.ListOperationsResponse.next_page_token)
}
inline std::string* ListOperationsResponse::_internal_mutable_next_page_token() {
  
  return next_page_token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ListOperationsResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.longrunning.ListOperationsResponse.next_page_token)
  return next_page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListOperationsResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.ListOperationsResponse.next_page_token)
}

// -------------------------------------------------------------------

// CancelOperationRequest

// string name = 1;
inline void CancelOperationRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& CancelOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.longrunning.CancelOperationRequest.name)
  return _internal_name();
}
inline void CancelOperationRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.longrunning.CancelOperationRequest.name)
}
inline std::string* CancelOperationRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.CancelOperationRequest.name)
  return _internal_mutable_name();
}
inline const std::string& CancelOperationRequest::_internal_name() const {
  return name_.Get();
}
inline void CancelOperationRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CancelOperationRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.CancelOperationRequest.name)
}
inline void CancelOperationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.CancelOperationRequest.name)
}
inline void CancelOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.CancelOperationRequest.name)
}
inline std::string* CancelOperationRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CancelOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.longrunning.CancelOperationRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CancelOperationRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.CancelOperationRequest.name)
}

// -------------------------------------------------------------------

// DeleteOperationRequest

// string name = 1;
inline void DeleteOperationRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& DeleteOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.longrunning.DeleteOperationRequest.name)
  return _internal_name();
}
inline void DeleteOperationRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.longrunning.DeleteOperationRequest.name)
}
inline std::string* DeleteOperationRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.DeleteOperationRequest.name)
  return _internal_mutable_name();
}
inline const std::string& DeleteOperationRequest::_internal_name() const {
  return name_.Get();
}
inline void DeleteOperationRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void DeleteOperationRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.DeleteOperationRequest.name)
}
inline void DeleteOperationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.DeleteOperationRequest.name)
}
inline void DeleteOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.DeleteOperationRequest.name)
}
inline std::string* DeleteOperationRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* DeleteOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.longrunning.DeleteOperationRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteOperationRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.DeleteOperationRequest.name)
}

// -------------------------------------------------------------------

// WaitOperationRequest

// string name = 1;
inline void WaitOperationRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& WaitOperationRequest::name() const {
  // @@protoc_insertion_point(field_get:google.longrunning.WaitOperationRequest.name)
  return _internal_name();
}
inline void WaitOperationRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:google.longrunning.WaitOperationRequest.name)
}
inline std::string* WaitOperationRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.WaitOperationRequest.name)
  return _internal_mutable_name();
}
inline const std::string& WaitOperationRequest::_internal_name() const {
  return name_.Get();
}
inline void WaitOperationRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void WaitOperationRequest::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.WaitOperationRequest.name)
}
inline void WaitOperationRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.WaitOperationRequest.name)
}
inline void WaitOperationRequest::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.WaitOperationRequest.name)
}
inline std::string* WaitOperationRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* WaitOperationRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.longrunning.WaitOperationRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void WaitOperationRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.WaitOperationRequest.name)
}

// .google.protobuf.Duration timeout = 2;
inline bool WaitOperationRequest::_internal_has_timeout() const {
  return this != internal_default_instance() && timeout_ != nullptr;
}
inline bool WaitOperationRequest::has_timeout() const {
  return _internal_has_timeout();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& WaitOperationRequest::_internal_timeout() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = timeout_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration&>(
      PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& WaitOperationRequest::timeout() const {
  // @@protoc_insertion_point(field_get:google.longrunning.WaitOperationRequest.timeout)
  return _internal_timeout();
}
inline void WaitOperationRequest::unsafe_arena_set_allocated_timeout(
    PROTOBUF_NAMESPACE_ID::Duration* timeout) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout_);
  }
  timeout_ = timeout;
  if (timeout) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.longrunning.WaitOperationRequest.timeout)
}
inline PROTOBUF_NAMESPACE_ID::Duration* WaitOperationRequest::release_timeout() {
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = timeout_;
  timeout_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WaitOperationRequest::unsafe_arena_release_timeout() {
  // @@protoc_insertion_point(field_release:google.longrunning.WaitOperationRequest.timeout)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = timeout_;
  timeout_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WaitOperationRequest::_internal_mutable_timeout() {
  
  if (timeout_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    timeout_ = p;
  }
  return timeout_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* WaitOperationRequest::mutable_timeout() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.WaitOperationRequest.timeout)
  return _internal_mutable_timeout();
}
inline void WaitOperationRequest::set_allocated_timeout(PROTOBUF_NAMESPACE_ID::Duration* timeout) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timeout)->GetArena();
    if (message_arena != submessage_arena) {
      timeout = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.WaitOperationRequest.timeout)
}

// -------------------------------------------------------------------

// OperationInfo

// string response_type = 1;
inline void OperationInfo::clear_response_type() {
  response_type_.ClearToEmpty();
}
inline const std::string& OperationInfo::response_type() const {
  // @@protoc_insertion_point(field_get:google.longrunning.OperationInfo.response_type)
  return _internal_response_type();
}
inline void OperationInfo::set_response_type(const std::string& value) {
  _internal_set_response_type(value);
  // @@protoc_insertion_point(field_set:google.longrunning.OperationInfo.response_type)
}
inline std::string* OperationInfo::mutable_response_type() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.OperationInfo.response_type)
  return _internal_mutable_response_type();
}
inline const std::string& OperationInfo::_internal_response_type() const {
  return response_type_.Get();
}
inline void OperationInfo::_internal_set_response_type(const std::string& value) {
  
  response_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OperationInfo::set_response_type(std::string&& value) {
  
  response_type_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.OperationInfo.response_type)
}
inline void OperationInfo::set_response_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  response_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.OperationInfo.response_type)
}
inline void OperationInfo::set_response_type(const char* value,
    size_t size) {
  
  response_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.OperationInfo.response_type)
}
inline std::string* OperationInfo::_internal_mutable_response_type() {
  
  return response_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OperationInfo::release_response_type() {
  // @@protoc_insertion_point(field_release:google.longrunning.OperationInfo.response_type)
  return response_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OperationInfo::set_allocated_response_type(std::string* response_type) {
  if (response_type != nullptr) {
    
  } else {
    
  }
  response_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), response_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.OperationInfo.response_type)
}

// string metadata_type = 2;
inline void OperationInfo::clear_metadata_type() {
  metadata_type_.ClearToEmpty();
}
inline const std::string& OperationInfo::metadata_type() const {
  // @@protoc_insertion_point(field_get:google.longrunning.OperationInfo.metadata_type)
  return _internal_metadata_type();
}
inline void OperationInfo::set_metadata_type(const std::string& value) {
  _internal_set_metadata_type(value);
  // @@protoc_insertion_point(field_set:google.longrunning.OperationInfo.metadata_type)
}
inline std::string* OperationInfo::mutable_metadata_type() {
  // @@protoc_insertion_point(field_mutable:google.longrunning.OperationInfo.metadata_type)
  return _internal_mutable_metadata_type();
}
inline const std::string& OperationInfo::_internal_metadata_type() const {
  return metadata_type_.Get();
}
inline void OperationInfo::_internal_set_metadata_type(const std::string& value) {
  
  metadata_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void OperationInfo::set_metadata_type(std::string&& value) {
  
  metadata_type_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:google.longrunning.OperationInfo.metadata_type)
}
inline void OperationInfo::set_metadata_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metadata_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:google.longrunning.OperationInfo.metadata_type)
}
inline void OperationInfo::set_metadata_type(const char* value,
    size_t size) {
  
  metadata_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:google.longrunning.OperationInfo.metadata_type)
}
inline std::string* OperationInfo::_internal_mutable_metadata_type() {
  
  return metadata_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* OperationInfo::release_metadata_type() {
  // @@protoc_insertion_point(field_release:google.longrunning.OperationInfo.metadata_type)
  return metadata_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void OperationInfo::set_allocated_metadata_type(std::string* metadata_type) {
  if (metadata_type != nullptr) {
    
  } else {
    
  }
  metadata_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), metadata_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:google.longrunning.OperationInfo.metadata_type)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace longrunning
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2flongrunning_2foperations_2eproto
